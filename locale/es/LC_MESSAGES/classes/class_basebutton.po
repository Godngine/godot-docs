# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_basebutton.rst:8
msgid "BaseButton"
msgstr ""

#: ../../classes/class_basebutton.rst:10
msgid ""
"**Inherits:** :ref:`Control<class_control>` **<** "
":ref:`CanvasItem<class_canvasitem>` **<** :ref:`Node<class_node>` **<** "
":ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_basebutton.rst:12
msgid ""
"**Inherited By:** :ref:`LinkButton<class_linkbutton>`, "
":ref:`TextureButton<class_texturebutton>`, :ref:`Button<class_button>`"
msgstr ""

#: ../../classes/class_basebutton.rst:14
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_basebutton.rst:17
msgid "Brief Description"
msgstr ""

#: ../../classes/class_basebutton.rst:19
msgid "Base class for different kinds of buttons."
msgstr ""

#: ../../classes/class_basebutton.rst:22
msgid "Member Functions"
msgstr ""

#: ../../classes/class_basebutton.rst:25 ../../classes/class_basebutton.rst:27
msgid "void"
msgstr ""

#: ../../classes/class_basebutton.rst:25
msgid ":ref:`_pressed<class_BaseButton__pressed>` **(** **)** virtual"
msgstr ""

#: ../../classes/class_basebutton.rst:27
msgid ""
":ref:`_toggled<class_BaseButton__toggled>` **(** :ref:`bool<class_bool>` "
"button_pressed **)** virtual"
msgstr ""

#: ../../classes/class_basebutton.rst:29
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_basebutton.rst:29
msgid ":ref:`get_draw_mode<class_BaseButton_get_draw_mode>` **(** **)** const"
msgstr ""

#: ../../classes/class_basebutton.rst:31
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_basebutton.rst:31
msgid ":ref:`is_hovered<class_BaseButton_is_hovered>` **(** **)** const"
msgstr ""

#: ../../classes/class_basebutton.rst:35
msgid "Signals"
msgstr ""

#: ../../classes/class_basebutton.rst:39
msgid "**button_down** **(** **)**"
msgstr ""

#: ../../classes/class_basebutton.rst:41
msgid "Emitted when the button starts being held down."
msgstr ""

#: ../../classes/class_basebutton.rst:45
msgid "**button_up** **(** **)**"
msgstr ""

#: ../../classes/class_basebutton.rst:47
msgid "Emitted when the button stops being held down."
msgstr ""

#: ../../classes/class_basebutton.rst:51
msgid "**pressed** **(** **)**"
msgstr ""

#: ../../classes/class_basebutton.rst:53
msgid ""
"This signal is emitted every time the button is toggled or pressed (i.e. "
"activated, so on ``button_down`` if \"Click on press\" is active and on "
"``button_up`` otherwise)."
msgstr ""

#: ../../classes/class_basebutton.rst:57
msgid "**toggled** **(** :ref:`bool<class_bool>` button_pressed **)**"
msgstr ""

#: ../../classes/class_basebutton.rst:59
msgid ""
"This signal is emitted when the button was just toggled between pressed "
"and normal states (only if toggle_mode is active). The new state is "
"contained in the *pressed* argument."
msgstr ""

#: ../../classes/class_basebutton.rst:63
msgid "Member Variables"
msgstr ""

#: ../../classes/class_basebutton.rst:67
msgid ""
":ref:`ActionMode<enum_basebutton_actionmode>` **action_mode** - "
"Determines when the button is considered clicked, one of the "
"ACTION_MODE\\_\\* constants."
msgstr ""

#: ../../classes/class_basebutton.rst:71
msgid ""
":ref:`bool<class_bool>` **disabled** - If ``true`` the button is in "
"disabled state and can't be clicked or toggled."
msgstr ""

#: ../../classes/class_basebutton.rst:75
msgid ""
":ref:`FocusMode<enum_control_focusmode>` **enabled_focus_mode** - Focus "
"access mode to use when switching between enabled/disabled (see "
":ref:`Control.set_focus_mode<class_Control_set_focus_mode>` and "
":ref:`disabled<class_BaseButton_disabled>`)."
msgstr ""

#: ../../classes/class_basebutton.rst:79
msgid ""
":ref:`ButtonGroup<class_buttongroup>` **group** - "
":ref:`ButtonGroup<class_buttongroup>` associated to the button."
msgstr ""

#: ../../classes/class_basebutton.rst:83
msgid ""
":ref:`bool<class_bool>` **pressed** - If ``true`` the button's state is "
"pressed. Means the button is pressed down or toggled (if toggle_mode is "
"active)."
msgstr ""

#: ../../classes/class_basebutton.rst:87
msgid ""
":ref:`ShortCut<class_shortcut>` **shortcut** - Shortcut associated to the"
" button."
msgstr ""

#: ../../classes/class_basebutton.rst:91
msgid ""
":ref:`bool<class_bool>` **toggle_mode** - If ``true`` the button is in "
"toggle mode. Makes the button flip state between pressed and unpressed "
"each time its area is clicked."
msgstr ""

#: ../../classes/class_basebutton.rst:95
msgid "Enums"
msgstr ""

#: ../../classes/class_basebutton.rst:99
msgid "enum **ActionMode**"
msgstr ""

#: ../../classes/class_basebutton.rst:101
msgid ""
"**ACTION_MODE_BUTTON_PRESS** = **0** --- Require just a press to consider"
" the button clicked."
msgstr ""

#: ../../classes/class_basebutton.rst:102
msgid ""
"**ACTION_MODE_BUTTON_RELEASE** = **1** --- Require a press and a "
"subsequent release before considering the button clicked."
msgstr ""

#: ../../classes/class_basebutton.rst:106
msgid "enum **DrawMode**"
msgstr ""

#: ../../classes/class_basebutton.rst:108
msgid ""
"**DRAW_NORMAL** = **0** --- The normal state (i.e. not pressed, not "
"hovered, not toggled and enabled) of buttons."
msgstr ""

#: ../../classes/class_basebutton.rst:109
msgid "**DRAW_PRESSED** = **1** --- The state of buttons are pressed."
msgstr ""

#: ../../classes/class_basebutton.rst:110
msgid "**DRAW_HOVER** = **2** --- The state of buttons are hovered."
msgstr ""

#: ../../classes/class_basebutton.rst:111
msgid "**DRAW_DISABLED** = **3** --- The state of buttons are disabled."
msgstr ""

#: ../../classes/class_basebutton.rst:115
msgid "Description"
msgstr ""

#: ../../classes/class_basebutton.rst:117
msgid ""
"BaseButton is the abstract base class for buttons, so it shouldn't be "
"used directly (it doesn't display anything). Other types of buttons "
"inherit from it."
msgstr ""

#: ../../classes/class_basebutton.rst:120
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_basebutton.rst:124
msgid "void **_pressed** **(** **)** virtual"
msgstr ""

#: ../../classes/class_basebutton.rst:126
msgid "Called when button is pressed."
msgstr ""

#: ../../classes/class_basebutton.rst:130
msgid ""
"void **_toggled** **(** :ref:`bool<class_bool>` button_pressed **)** "
"virtual"
msgstr ""

#: ../../classes/class_basebutton.rst:132
msgid "Called when button is toggled (only if toggle_mode is active)."
msgstr ""

#: ../../classes/class_basebutton.rst:136
msgid ":ref:`int<class_int>` **get_draw_mode** **(** **)** const"
msgstr ""

#: ../../classes/class_basebutton.rst:138
msgid ""
"Return the visual state used to draw the button. This is useful mainly "
"when implementing your own draw code by either overriding _draw() or "
"connecting to \"draw\" signal. The visual state of the button is defined "
"by the DRAW\\_\\* enum."
msgstr ""

#: ../../classes/class_basebutton.rst:142
msgid ":ref:`bool<class_bool>` **is_hovered** **(** **)** const"
msgstr ""

#: ../../classes/class_basebutton.rst:144
msgid "Return true if mouse entered the button before it exit."
msgstr ""

