# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_vector3.rst:8
msgid "Vector3"
msgstr ""

#: ../../classes/class_vector3.rst:10
msgid "**Category:** Built-In Types"
msgstr ""

#: ../../classes/class_vector3.rst:13
msgid "Brief Description"
msgstr ""

#: ../../classes/class_vector3.rst:15
msgid "Vector class, which performs basic 3D vector math operations."
msgstr ""

#: ../../classes/class_vector3.rst:18
msgid "Member Functions"
msgstr ""

#: ../../classes/class_vector3.rst:21 ../../classes/class_vector3.rst:23
#: ../../classes/class_vector3.rst:27 ../../classes/class_vector3.rst:29
#: ../../classes/class_vector3.rst:31 ../../classes/class_vector3.rst:33
#: ../../classes/class_vector3.rst:41 ../../classes/class_vector3.rst:43
#: ../../classes/class_vector3.rst:51 ../../classes/class_vector3.rst:57
#: ../../classes/class_vector3.rst:61 ../../classes/class_vector3.rst:63
#: ../../classes/class_vector3.rst:65 ../../classes/class_vector3.rst:67
msgid ":ref:`Vector3<class_vector3>`"
msgstr ""

#: ../../classes/class_vector3.rst:21
msgid ""
":ref:`Vector3<class_Vector3_Vector3>` **(** :ref:`float<class_float>` x, "
":ref:`float<class_float>` y, :ref:`float<class_float>` z **)**"
msgstr ""

#: ../../classes/class_vector3.rst:23
msgid ":ref:`abs<class_Vector3_abs>` **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:25 ../../classes/class_vector3.rst:35
#: ../../classes/class_vector3.rst:37 ../../classes/class_vector3.rst:39
#: ../../classes/class_vector3.rst:47 ../../classes/class_vector3.rst:49
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../../classes/class_vector3.rst:25
msgid ""
":ref:`angle_to<class_Vector3_angle_to>` **(** "
":ref:`Vector3<class_vector3>` to **)**"
msgstr ""

#: ../../classes/class_vector3.rst:27
msgid ""
":ref:`bounce<class_Vector3_bounce>` **(** :ref:`Vector3<class_vector3>` n"
" **)**"
msgstr ""

#: ../../classes/class_vector3.rst:29
msgid ":ref:`ceil<class_Vector3_ceil>` **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:31
msgid ""
":ref:`cross<class_Vector3_cross>` **(** :ref:`Vector3<class_vector3>` b "
"**)**"
msgstr ""

#: ../../classes/class_vector3.rst:33
msgid ""
":ref:`cubic_interpolate<class_Vector3_cubic_interpolate>` **(** "
":ref:`Vector3<class_vector3>` b, :ref:`Vector3<class_vector3>` pre_a, "
":ref:`Vector3<class_vector3>` post_b, :ref:`float<class_float>` t **)**"
msgstr ""

#: ../../classes/class_vector3.rst:35
msgid ""
":ref:`distance_squared_to<class_Vector3_distance_squared_to>` **(** "
":ref:`Vector3<class_vector3>` b **)**"
msgstr ""

#: ../../classes/class_vector3.rst:37
msgid ""
":ref:`distance_to<class_Vector3_distance_to>` **(** "
":ref:`Vector3<class_vector3>` b **)**"
msgstr ""

#: ../../classes/class_vector3.rst:39
msgid ":ref:`dot<class_Vector3_dot>` **(** :ref:`Vector3<class_vector3>` b **)**"
msgstr ""

#: ../../classes/class_vector3.rst:41
msgid ":ref:`floor<class_Vector3_floor>` **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:43
msgid ":ref:`inverse<class_Vector3_inverse>` **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:45
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_vector3.rst:45
msgid ":ref:`is_normalized<class_Vector3_is_normalized>` **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:47
msgid ":ref:`length<class_Vector3_length>` **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:49
msgid ":ref:`length_squared<class_Vector3_length_squared>` **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:51
msgid ""
":ref:`linear_interpolate<class_Vector3_linear_interpolate>` **(** "
":ref:`Vector3<class_vector3>` b, :ref:`float<class_float>` t **)**"
msgstr ""

#: ../../classes/class_vector3.rst:53 ../../classes/class_vector3.rst:55
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_vector3.rst:53
msgid ":ref:`max_axis<class_Vector3_max_axis>` **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:55
msgid ":ref:`min_axis<class_Vector3_min_axis>` **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:57
msgid ":ref:`normalized<class_Vector3_normalized>` **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:59 ../../classes/class_vector3.rst:69
msgid ":ref:`Basis<class_basis>`"
msgstr ""

#: ../../classes/class_vector3.rst:59
msgid ""
":ref:`outer<class_Vector3_outer>` **(** :ref:`Vector3<class_vector3>` b "
"**)**"
msgstr ""

#: ../../classes/class_vector3.rst:61
msgid ""
":ref:`reflect<class_Vector3_reflect>` **(** :ref:`Vector3<class_vector3>`"
" n **)**"
msgstr ""

#: ../../classes/class_vector3.rst:63
msgid ""
":ref:`rotated<class_Vector3_rotated>` **(** :ref:`Vector3<class_vector3>`"
" axis, :ref:`float<class_float>` phi **)**"
msgstr ""

#: ../../classes/class_vector3.rst:65
msgid ""
":ref:`slide<class_Vector3_slide>` **(** :ref:`Vector3<class_vector3>` n "
"**)**"
msgstr ""

#: ../../classes/class_vector3.rst:67
msgid ""
":ref:`snapped<class_Vector3_snapped>` **(** :ref:`Vector3<class_vector3>`"
" by **)**"
msgstr ""

#: ../../classes/class_vector3.rst:69
msgid ":ref:`to_diagonal_matrix<class_Vector3_to_diagonal_matrix>` **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:73
msgid "Member Variables"
msgstr ""

#: ../../classes/class_vector3.rst:77
msgid ":ref:`float<class_float>` **x** - X component of the vector."
msgstr ""

#: ../../classes/class_vector3.rst:81
msgid ":ref:`float<class_float>` **y** - Y component of the vector."
msgstr ""

#: ../../classes/class_vector3.rst:85
msgid ":ref:`float<class_float>` **z** - Z component of the vector."
msgstr ""

#: ../../classes/class_vector3.rst:89
msgid "Numeric Constants"
msgstr ""

#: ../../classes/class_vector3.rst:91
msgid ""
"**AXIS_X** = **0** --- Enumerated value for the X axis. Returned by "
"functions like max_axis or min_axis."
msgstr ""

#: ../../classes/class_vector3.rst:92
msgid "**AXIS_Y** = **1** --- Enumerated value for the Y axis."
msgstr ""

#: ../../classes/class_vector3.rst:93
msgid "**AXIS_Z** = **2** --- Enumerated value for the Z axis."
msgstr ""

#: ../../classes/class_vector3.rst:96
msgid "Description"
msgstr ""

#: ../../classes/class_vector3.rst:98
msgid ""
"Vector3 is one of the core classes of the engine, and includes several "
"built-in helper functions to perform basic vector math operations."
msgstr ""

#: ../../classes/class_vector3.rst:101
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_vector3.rst:105
msgid ""
":ref:`Vector3<class_vector3>` **Vector3** **(** :ref:`float<class_float>`"
" x, :ref:`float<class_float>` y, :ref:`float<class_float>` z **)**"
msgstr ""

#: ../../classes/class_vector3.rst:107
msgid "Returns a Vector3 with the given components."
msgstr ""

#: ../../classes/class_vector3.rst:111
msgid ":ref:`Vector3<class_vector3>` **abs** **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:113
msgid ""
"Returns a new vector with all components in absolute values (i.e. "
"positive)."
msgstr ""

#: ../../classes/class_vector3.rst:117
msgid ""
":ref:`float<class_float>` **angle_to** **(** "
":ref:`Vector3<class_vector3>` to **)**"
msgstr ""

#: ../../classes/class_vector3.rst:119
msgid "Returns the vector's minimum angle to the vector ``to``."
msgstr ""

#: ../../classes/class_vector3.rst:123
msgid ""
":ref:`Vector3<class_vector3>` **bounce** **(** "
":ref:`Vector3<class_vector3>` n **)**"
msgstr ""

#: ../../classes/class_vector3.rst:125
msgid ""
"Bounce returns the vector \"bounced off\" from the given plane, specified"
" by its normal vector."
msgstr ""

#: ../../classes/class_vector3.rst:129
msgid ":ref:`Vector3<class_vector3>` **ceil** **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:131
msgid "Returns a new vector with all components rounded up."
msgstr ""

#: ../../classes/class_vector3.rst:135
msgid ""
":ref:`Vector3<class_vector3>` **cross** **(** "
":ref:`Vector3<class_vector3>` b **)**"
msgstr ""

#: ../../classes/class_vector3.rst:137
msgid "Returns the cross product with ``b``."
msgstr ""

#: ../../classes/class_vector3.rst:141
msgid ""
":ref:`Vector3<class_vector3>` **cubic_interpolate** **(** "
":ref:`Vector3<class_vector3>` b, :ref:`Vector3<class_vector3>` pre_a, "
":ref:`Vector3<class_vector3>` post_b, :ref:`float<class_float>` t **)**"
msgstr ""

#: ../../classes/class_vector3.rst:143
msgid ""
"Performs a cubic interpolation between vectors ``pre_a``, ``a``, ``b``, "
"``post_b`` (``a`` is current), by the given amount (t). (t) should be a "
"float of 0.0-1.0, a percentage of how far along the interpolation is."
msgstr ""

#: ../../classes/class_vector3.rst:147
msgid ""
":ref:`float<class_float>` **distance_squared_to** **(** "
":ref:`Vector3<class_vector3>` b **)**"
msgstr ""

#: ../../classes/class_vector3.rst:149
msgid ""
"Returns the squared distance to ``b``. Prefer this function over "
"distance_to if you need to sort vectors or need the squared distance for "
"some formula."
msgstr ""

#: ../../classes/class_vector3.rst:153
msgid ""
":ref:`float<class_float>` **distance_to** **(** "
":ref:`Vector3<class_vector3>` b **)**"
msgstr ""

#: ../../classes/class_vector3.rst:155
msgid "Returns the distance to b."
msgstr ""

#: ../../classes/class_vector3.rst:159
msgid ""
":ref:`float<class_float>` **dot** **(** :ref:`Vector3<class_vector3>` b "
"**)**"
msgstr ""

#: ../../classes/class_vector3.rst:161
msgid "Returns the dot product with b."
msgstr ""

#: ../../classes/class_vector3.rst:165
msgid ":ref:`Vector3<class_vector3>` **floor** **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:167
msgid "Returns a new vector with all components rounded down."
msgstr ""

#: ../../classes/class_vector3.rst:171
msgid ":ref:`Vector3<class_vector3>` **inverse** **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:173
msgid ""
"Returns the inverse of the vector. This is the same as Vector3( 1.0 / "
"v.x, 1.0 / v.y, 1.0 / v.z )"
msgstr ""

#: ../../classes/class_vector3.rst:177
msgid ":ref:`bool<class_bool>` **is_normalized** **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:179
msgid "Returns whether the vector is normalized or not."
msgstr ""

#: ../../classes/class_vector3.rst:183
msgid ":ref:`float<class_float>` **length** **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:185
msgid "Returns the length of the vector."
msgstr ""

#: ../../classes/class_vector3.rst:189
msgid ":ref:`float<class_float>` **length_squared** **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:191
msgid ""
"Returns the length of the vector, squared. Prefer this function over "
"\"length\" if you need to sort vectors or need the squared length for "
"some formula."
msgstr ""

#: ../../classes/class_vector3.rst:195
msgid ""
":ref:`Vector3<class_vector3>` **linear_interpolate** **(** "
":ref:`Vector3<class_vector3>` b, :ref:`float<class_float>` t **)**"
msgstr ""

#: ../../classes/class_vector3.rst:197
msgid ""
"Linearly interpolates the vector to a given one (b), by the given amount "
"(t). (t) should be a float of 0.0-1.0, a percentage of how far along the "
"interpolation is."
msgstr ""

#: ../../classes/class_vector3.rst:201
msgid ":ref:`int<class_int>` **max_axis** **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:203
msgid "Returns AXIS_X, AXIS_Y or AXIS_Z depending on which axis is the largest."
msgstr ""

#: ../../classes/class_vector3.rst:207
msgid ":ref:`int<class_int>` **min_axis** **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:209
msgid "Returns AXIS_X, AXIS_Y or AXIS_Z depending on which axis is the smallest."
msgstr ""

#: ../../classes/class_vector3.rst:213
msgid ":ref:`Vector3<class_vector3>` **normalized** **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:215
msgid ""
"Returns a copy of the normalized vector to unit length. This is the same "
"as v / v.length()."
msgstr ""

#: ../../classes/class_vector3.rst:219
msgid ""
":ref:`Basis<class_basis>` **outer** **(** :ref:`Vector3<class_vector3>` b"
" **)**"
msgstr ""

#: ../../classes/class_vector3.rst:221
msgid "Returns the outer product with b."
msgstr ""

#: ../../classes/class_vector3.rst:225
msgid ""
":ref:`Vector3<class_vector3>` **reflect** **(** "
":ref:`Vector3<class_vector3>` n **)**"
msgstr ""

#: ../../classes/class_vector3.rst:227
msgid "Reflects the vector along the given plane, specified by its normal vector."
msgstr ""

#: ../../classes/class_vector3.rst:231
msgid ""
":ref:`Vector3<class_vector3>` **rotated** **(** "
":ref:`Vector3<class_vector3>` axis, :ref:`float<class_float>` phi **)**"
msgstr ""

#: ../../classes/class_vector3.rst:233
msgid ""
"Rotates the vector around some axis by phi radians. The axis must be a "
"normalized vector."
msgstr ""

#: ../../classes/class_vector3.rst:237
msgid ""
":ref:`Vector3<class_vector3>` **slide** **(** "
":ref:`Vector3<class_vector3>` n **)**"
msgstr ""

#: ../../classes/class_vector3.rst:239
msgid ""
"Slide returns the component of the vector along the given plane, "
"specified by its normal vector."
msgstr ""

#: ../../classes/class_vector3.rst:243
msgid ""
":ref:`Vector3<class_vector3>` **snapped** **(** "
":ref:`Vector3<class_vector3>` by **)**"
msgstr ""

#: ../../classes/class_vector3.rst:245
msgid "Returns a copy of the vector, snapped to the lowest neared multiple."
msgstr ""

#: ../../classes/class_vector3.rst:249
msgid ":ref:`Basis<class_basis>` **to_diagonal_matrix** **(** **)**"
msgstr ""

#: ../../classes/class_vector3.rst:251
msgid "Returns a diagonal matrix with the vector as main diagonal."
msgstr ""

