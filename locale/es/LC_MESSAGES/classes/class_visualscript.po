# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_visualscript.rst:8
msgid "VisualScript"
msgstr ""

#: ../../classes/class_visualscript.rst:10
msgid ""
"**Inherits:** :ref:`Script<class_script>` **<** "
":ref:`Resource<class_resource>` **<** :ref:`Reference<class_reference>` "
"**<** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_visualscript.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_visualscript.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_visualscript.rst:17
msgid "A script implemented in the Visual Script programming environment."
msgstr ""

#: ../../classes/class_visualscript.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_visualscript.rst:23
#: ../../classes/class_visualscript.rst:25
#: ../../classes/class_visualscript.rst:27
#: ../../classes/class_visualscript.rst:29
#: ../../classes/class_visualscript.rst:31
#: ../../classes/class_visualscript.rst:39
#: ../../classes/class_visualscript.rst:41
#: ../../classes/class_visualscript.rst:43
#: ../../classes/class_visualscript.rst:45
#: ../../classes/class_visualscript.rst:47
#: ../../classes/class_visualscript.rst:49
#: ../../classes/class_visualscript.rst:77
#: ../../classes/class_visualscript.rst:79
#: ../../classes/class_visualscript.rst:81
#: ../../classes/class_visualscript.rst:83
#: ../../classes/class_visualscript.rst:85
#: ../../classes/class_visualscript.rst:87
#: ../../classes/class_visualscript.rst:89
#: ../../classes/class_visualscript.rst:91
#: ../../classes/class_visualscript.rst:93
#: ../../classes/class_visualscript.rst:95
#: ../../classes/class_visualscript.rst:97
#: ../../classes/class_visualscript.rst:99
#: ../../classes/class_visualscript.rst:101
#: ../../classes/class_visualscript.rst:103
#: ../../classes/class_visualscript.rst:105
msgid "void"
msgstr ""

#: ../../classes/class_visualscript.rst:23
msgid ""
":ref:`add_custom_signal<class_VisualScript_add_custom_signal>` **(** "
":ref:`String<class_string>` name **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:25
msgid ""
":ref:`add_function<class_VisualScript_add_function>` **(** "
":ref:`String<class_string>` name **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:27
msgid ""
":ref:`add_node<class_VisualScript_add_node>` **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` id, "
":ref:`VisualScriptNode<class_visualscriptnode>` node, "
":ref:`Vector2<class_vector2>` position=Vector2( 0, 0 ) **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:29
msgid ""
":ref:`add_variable<class_VisualScript_add_variable>` **(** "
":ref:`String<class_string>` name, :ref:`Variant<class_variant>` "
"default_value=null, :ref:`bool<class_bool>` export=false **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:31
msgid ""
":ref:`custom_signal_add_argument<class_VisualScript_custom_signal_add_argument>`"
" **(** :ref:`String<class_string>` name, :ref:`int<class_int>` type, "
":ref:`String<class_string>` argname, :ref:`int<class_int>` index=-1 **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:33
#: ../../classes/class_visualscript.rst:37
#: ../../classes/class_visualscript.rst:51
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_visualscript.rst:33
msgid ""
":ref:`custom_signal_get_argument_count<class_VisualScript_custom_signal_get_argument_count>`"
" **(** :ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:35
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_visualscript.rst:35
msgid ""
":ref:`custom_signal_get_argument_name<class_VisualScript_custom_signal_get_argument_name>`"
" **(** :ref:`String<class_string>` name, :ref:`int<class_int>` argidx "
"**)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:37
msgid ""
":ref:`custom_signal_get_argument_type<class_VisualScript_custom_signal_get_argument_type>`"
" **(** :ref:`String<class_string>` name, :ref:`int<class_int>` argidx "
"**)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:39
msgid ""
":ref:`custom_signal_remove_argument<class_VisualScript_custom_signal_remove_argument>`"
" **(** :ref:`String<class_string>` name, :ref:`int<class_int>` argidx "
"**)**"
msgstr ""

#: ../../classes/class_visualscript.rst:41
msgid ""
":ref:`custom_signal_set_argument_name<class_VisualScript_custom_signal_set_argument_name>`"
" **(** :ref:`String<class_string>` name, :ref:`int<class_int>` argidx, "
":ref:`String<class_string>` argname **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:43
msgid ""
":ref:`custom_signal_set_argument_type<class_VisualScript_custom_signal_set_argument_type>`"
" **(** :ref:`String<class_string>` name, :ref:`int<class_int>` argidx, "
":ref:`int<class_int>` type **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:45
msgid ""
":ref:`custom_signal_swap_argument<class_VisualScript_custom_signal_swap_argument>`"
" **(** :ref:`String<class_string>` name, :ref:`int<class_int>` argidx, "
":ref:`int<class_int>` withidx **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:47
msgid ""
":ref:`data_connect<class_VisualScript_data_connect>` **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` from_node, "
":ref:`int<class_int>` from_port, :ref:`int<class_int>` to_node, "
":ref:`int<class_int>` to_port **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:49
msgid ""
":ref:`data_disconnect<class_VisualScript_data_disconnect>` **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` from_node, "
":ref:`int<class_int>` from_port, :ref:`int<class_int>` to_node, "
":ref:`int<class_int>` to_port **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:51
msgid ""
":ref:`get_function_node_id<class_VisualScript_get_function_node_id>` "
"**(** :ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:53
#: ../../classes/class_visualscript.rst:57
msgid ":ref:`Vector2<class_vector2>`"
msgstr ""

#: ../../classes/class_visualscript.rst:53
msgid ""
":ref:`get_function_scroll<class_VisualScript_get_function_scroll>` **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:55
msgid ":ref:`VisualScriptNode<class_visualscriptnode>`"
msgstr ""

#: ../../classes/class_visualscript.rst:55
msgid ""
":ref:`get_node<class_VisualScript_get_node>` **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` id **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:57
msgid ""
":ref:`get_node_position<class_VisualScript_get_node_position>` **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` id **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:59
msgid ":ref:`Variant<class_variant>`"
msgstr ""

#: ../../classes/class_visualscript.rst:59
msgid ""
":ref:`get_variable_default_value<class_VisualScript_get_variable_default_value>`"
" **(** :ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:61
#: ../../classes/class_visualscript.rst:65
#: ../../classes/class_visualscript.rst:67
#: ../../classes/class_visualscript.rst:69
#: ../../classes/class_visualscript.rst:71
#: ../../classes/class_visualscript.rst:73
#: ../../classes/class_visualscript.rst:75
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_visualscript.rst:61
msgid ""
":ref:`get_variable_export<class_VisualScript_get_variable_export>` **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:63
msgid ":ref:`Dictionary<class_dictionary>`"
msgstr ""

#: ../../classes/class_visualscript.rst:63
msgid ""
":ref:`get_variable_info<class_VisualScript_get_variable_info>` **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:65
msgid ""
":ref:`has_custom_signal<class_VisualScript_has_custom_signal>` **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:67
msgid ""
":ref:`has_data_connection<class_VisualScript_has_data_connection>` **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` from_node, "
":ref:`int<class_int>` from_port, :ref:`int<class_int>` to_node, "
":ref:`int<class_int>` to_port **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:69
msgid ""
":ref:`has_function<class_VisualScript_has_function>` **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:71
msgid ""
":ref:`has_node<class_VisualScript_has_node>` **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` id **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:73
msgid ""
":ref:`has_sequence_connection<class_VisualScript_has_sequence_connection>`"
" **(** :ref:`String<class_string>` func, :ref:`int<class_int>` from_node,"
" :ref:`int<class_int>` from_output, :ref:`int<class_int>` to_node **)** "
"const"
msgstr ""

#: ../../classes/class_visualscript.rst:75
msgid ""
":ref:`has_variable<class_VisualScript_has_variable>` **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:77
msgid ""
":ref:`remove_custom_signal<class_VisualScript_remove_custom_signal>` "
"**(** :ref:`String<class_string>` name **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:79
msgid ""
":ref:`remove_function<class_VisualScript_remove_function>` **(** "
":ref:`String<class_string>` name **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:81
msgid ""
":ref:`remove_node<class_VisualScript_remove_node>` **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` id **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:83
msgid ""
":ref:`remove_variable<class_VisualScript_remove_variable>` **(** "
":ref:`String<class_string>` name **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:85
msgid ""
":ref:`rename_custom_signal<class_VisualScript_rename_custom_signal>` "
"**(** :ref:`String<class_string>` name, :ref:`String<class_string>` "
"new_name **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:87
msgid ""
":ref:`rename_function<class_VisualScript_rename_function>` **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` new_name "
"**)**"
msgstr ""

#: ../../classes/class_visualscript.rst:89
msgid ""
":ref:`rename_variable<class_VisualScript_rename_variable>` **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` new_name "
"**)**"
msgstr ""

#: ../../classes/class_visualscript.rst:91
msgid ""
":ref:`sequence_connect<class_VisualScript_sequence_connect>` **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` from_node, "
":ref:`int<class_int>` from_output, :ref:`int<class_int>` to_node **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:93
msgid ""
":ref:`sequence_disconnect<class_VisualScript_sequence_disconnect>` **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` from_node, "
":ref:`int<class_int>` from_output, :ref:`int<class_int>` to_node **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:95
msgid ""
":ref:`set_function_scroll<class_VisualScript_set_function_scroll>` **(** "
":ref:`String<class_string>` name, :ref:`Vector2<class_vector2>` ofs **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:97
msgid ""
":ref:`set_instance_base_type<class_VisualScript_set_instance_base_type>` "
"**(** :ref:`String<class_string>` type **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:99
msgid ""
":ref:`set_node_position<class_VisualScript_set_node_position>` **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` id, "
":ref:`Vector2<class_vector2>` position **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:101
msgid ""
":ref:`set_variable_default_value<class_VisualScript_set_variable_default_value>`"
" **(** :ref:`String<class_string>` name, :ref:`Variant<class_variant>` "
"value **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:103
msgid ""
":ref:`set_variable_export<class_VisualScript_set_variable_export>` **(** "
":ref:`String<class_string>` name, :ref:`bool<class_bool>` enable **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:105
msgid ""
":ref:`set_variable_info<class_VisualScript_set_variable_info>` **(** "
":ref:`String<class_string>` name, :ref:`Dictionary<class_dictionary>` "
"value **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:109
msgid "Signals"
msgstr ""

#: ../../classes/class_visualscript.rst:113
msgid ""
"**node_ports_changed** **(** :ref:`String<class_string>` function, "
":ref:`int<class_int>` id **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:115
msgid "Emitted when the ports of a node are changed."
msgstr ""

#: ../../classes/class_visualscript.rst:119
msgid "Description"
msgstr ""

#: ../../classes/class_visualscript.rst:121
msgid ""
"A script implemented in the  Visual Script programming environment. The "
"script extends the functionality of all objects that instance it."
msgstr ""

#: ../../classes/class_visualscript.rst:123
msgid ""
":ref:`Object.set_script<class_Object_set_script>` extends an existing "
"object, if that object's class matches one of the script's base classes."
msgstr ""

#: ../../classes/class_visualscript.rst:125
msgid ""
"You are most likely to use this class via the Visual Script editor or "
"when writing plugins for it."
msgstr ""

#: ../../classes/class_visualscript.rst:128
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_visualscript.rst:132
msgid "void **add_custom_signal** **(** :ref:`String<class_string>` name **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:134
msgid "Add a custom signal with the specified name to the VisualScript."
msgstr ""

#: ../../classes/class_visualscript.rst:138
msgid "void **add_function** **(** :ref:`String<class_string>` name **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:140
msgid "Add a function with the specified name to the VisualScript."
msgstr ""

#: ../../classes/class_visualscript.rst:144
msgid ""
"void **add_node** **(** :ref:`String<class_string>` func, "
":ref:`int<class_int>` id, :ref:`VisualScriptNode<class_visualscriptnode>`"
" node, :ref:`Vector2<class_vector2>` position=Vector2( 0, 0 ) **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:146
msgid "Add a node to a function of the VisualScript."
msgstr ""

#: ../../classes/class_visualscript.rst:150
msgid ""
"void **add_variable** **(** :ref:`String<class_string>` name, "
":ref:`Variant<class_variant>` default_value=null, :ref:`bool<class_bool>`"
" export=false **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:152
msgid ""
"Add a variable to the VisualScript, optionally giving it a default value "
"or marking it as exported."
msgstr ""

#: ../../classes/class_visualscript.rst:156
msgid ""
"void **custom_signal_add_argument** **(** :ref:`String<class_string>` "
"name, :ref:`int<class_int>` type, :ref:`String<class_string>` argname, "
":ref:`int<class_int>` index=-1 **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:158
msgid ""
"Add an argument to a custom signal added with "
":ref:`add_custom_signal<class_VisualScript_add_custom_signal>`."
msgstr ""

#: ../../classes/class_visualscript.rst:162
msgid ""
":ref:`int<class_int>` **custom_signal_get_argument_count** **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:164
msgid "Get the count of a custom signal's arguments."
msgstr ""

#: ../../classes/class_visualscript.rst:168
msgid ""
":ref:`String<class_string>` **custom_signal_get_argument_name** **(** "
":ref:`String<class_string>` name, :ref:`int<class_int>` argidx **)** "
"const"
msgstr ""

#: ../../classes/class_visualscript.rst:170
msgid "Get the name of a custom signal's argument."
msgstr ""

#: ../../classes/class_visualscript.rst:174
msgid ""
":ref:`int<class_int>` **custom_signal_get_argument_type** **(** "
":ref:`String<class_string>` name, :ref:`int<class_int>` argidx **)** "
"const"
msgstr ""

#: ../../classes/class_visualscript.rst:176
msgid "Get the type of a custom signal's argument."
msgstr ""

#: ../../classes/class_visualscript.rst:180
msgid ""
"void **custom_signal_remove_argument** **(** :ref:`String<class_string>` "
"name, :ref:`int<class_int>` argidx **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:182
msgid "Remove a specific custom signal's argument."
msgstr ""

#: ../../classes/class_visualscript.rst:186
msgid ""
"void **custom_signal_set_argument_name** **(** "
":ref:`String<class_string>` name, :ref:`int<class_int>` argidx, "
":ref:`String<class_string>` argname **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:188
msgid "Rename a custom signal's argument."
msgstr ""

#: ../../classes/class_visualscript.rst:192
msgid ""
"void **custom_signal_set_argument_type** **(** "
":ref:`String<class_string>` name, :ref:`int<class_int>` argidx, "
":ref:`int<class_int>` type **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:194
msgid "Change the type of a custom signal's argument."
msgstr ""

#: ../../classes/class_visualscript.rst:198
msgid ""
"void **custom_signal_swap_argument** **(** :ref:`String<class_string>` "
"name, :ref:`int<class_int>` argidx, :ref:`int<class_int>` withidx **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:200
msgid "Swap two of the arguments of a custom signal."
msgstr ""

#: ../../classes/class_visualscript.rst:204
msgid ""
"void **data_connect** **(** :ref:`String<class_string>` func, "
":ref:`int<class_int>` from_node, :ref:`int<class_int>` from_port, "
":ref:`int<class_int>` to_node, :ref:`int<class_int>` to_port **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:206
msgid ""
"Connect two data ports. The value of ``from_node``'s ``from_port`` would "
"be fed into ``to_node``'s ``to_port``."
msgstr ""

#: ../../classes/class_visualscript.rst:210
msgid ""
"void **data_disconnect** **(** :ref:`String<class_string>` func, "
":ref:`int<class_int>` from_node, :ref:`int<class_int>` from_port, "
":ref:`int<class_int>` to_node, :ref:`int<class_int>` to_port **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:212
msgid ""
"Disconnect two data ports previously connected with "
":ref:`data_connect<class_VisualScript_data_connect>`."
msgstr ""

#: ../../classes/class_visualscript.rst:216
msgid ""
":ref:`int<class_int>` **get_function_node_id** **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:218
msgid "Returns the id of a function's entry point node."
msgstr ""

#: ../../classes/class_visualscript.rst:222
msgid ""
":ref:`Vector2<class_vector2>` **get_function_scroll** **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:224
msgid "Returns the position of the center of the screen for a given function."
msgstr ""

#: ../../classes/class_visualscript.rst:228
msgid ""
":ref:`VisualScriptNode<class_visualscriptnode>` **get_node** **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` id **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:230
msgid "Returns a node given its id and its function."
msgstr ""

#: ../../classes/class_visualscript.rst:234
msgid ""
":ref:`Vector2<class_vector2>` **get_node_position** **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` id **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:236
msgid "Returns a node's position in pixels."
msgstr ""

#: ../../classes/class_visualscript.rst:240
msgid ""
":ref:`Variant<class_variant>` **get_variable_default_value** **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:242
msgid "Returns the default (initial) value of a variable."
msgstr ""

#: ../../classes/class_visualscript.rst:246
msgid ""
":ref:`bool<class_bool>` **get_variable_export** **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:248
msgid "Returns whether a variable is exported."
msgstr ""

#: ../../classes/class_visualscript.rst:252
msgid ""
":ref:`Dictionary<class_dictionary>` **get_variable_info** **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:254
msgid ""
"Returns the info for a given variable as a dictionary. The information "
"includes its name, type, hint and usage."
msgstr ""

#: ../../classes/class_visualscript.rst:258
msgid ""
":ref:`bool<class_bool>` **has_custom_signal** **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:260
msgid "Returns whether a signal exists with the specified name."
msgstr ""

#: ../../classes/class_visualscript.rst:264
msgid ""
":ref:`bool<class_bool>` **has_data_connection** **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` from_node, "
":ref:`int<class_int>` from_port, :ref:`int<class_int>` to_node, "
":ref:`int<class_int>` to_port **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:266
msgid "Returns whether the specified data ports are connected."
msgstr ""

#: ../../classes/class_visualscript.rst:270
msgid ""
":ref:`bool<class_bool>` **has_function** **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:272
msgid "Returns whether a function exists with the specified name."
msgstr ""

#: ../../classes/class_visualscript.rst:276
msgid ""
":ref:`bool<class_bool>` **has_node** **(** :ref:`String<class_string>` "
"func, :ref:`int<class_int>` id **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:278
msgid "Returns whether a node exists with the given id."
msgstr ""

#: ../../classes/class_visualscript.rst:282
msgid ""
":ref:`bool<class_bool>` **has_sequence_connection** **(** "
":ref:`String<class_string>` func, :ref:`int<class_int>` from_node, "
":ref:`int<class_int>` from_output, :ref:`int<class_int>` to_node **)** "
"const"
msgstr ""

#: ../../classes/class_visualscript.rst:284
msgid "Returns whether the specified sequence ports are connected."
msgstr ""

#: ../../classes/class_visualscript.rst:288
msgid ""
":ref:`bool<class_bool>` **has_variable** **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_visualscript.rst:290
msgid "Returns whether a variable exists with the specified name."
msgstr ""

#: ../../classes/class_visualscript.rst:294
msgid "void **remove_custom_signal** **(** :ref:`String<class_string>` name **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:296
msgid "Remove a custom signal with the given name."
msgstr ""

#: ../../classes/class_visualscript.rst:300
msgid "void **remove_function** **(** :ref:`String<class_string>` name **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:302
msgid "Remove a specific function and its nodes from the script."
msgstr ""

#: ../../classes/class_visualscript.rst:306
msgid ""
"void **remove_node** **(** :ref:`String<class_string>` func, "
":ref:`int<class_int>` id **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:308
msgid "Remove a specific node."
msgstr ""

#: ../../classes/class_visualscript.rst:312
msgid "void **remove_variable** **(** :ref:`String<class_string>` name **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:314
msgid "Remove a variable with the given name."
msgstr ""

#: ../../classes/class_visualscript.rst:318
msgid ""
"void **rename_custom_signal** **(** :ref:`String<class_string>` name, "
":ref:`String<class_string>` new_name **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:320
msgid "Change the name of a custom signal."
msgstr ""

#: ../../classes/class_visualscript.rst:324
msgid ""
"void **rename_function** **(** :ref:`String<class_string>` name, "
":ref:`String<class_string>` new_name **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:326
msgid "Change the name of a function."
msgstr ""

#: ../../classes/class_visualscript.rst:330
msgid ""
"void **rename_variable** **(** :ref:`String<class_string>` name, "
":ref:`String<class_string>` new_name **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:332
msgid "Change the name of a variable."
msgstr ""

#: ../../classes/class_visualscript.rst:336
msgid ""
"void **sequence_connect** **(** :ref:`String<class_string>` func, "
":ref:`int<class_int>` from_node, :ref:`int<class_int>` from_output, "
":ref:`int<class_int>` to_node **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:338
msgid ""
"Connect two sequence ports. The execution will flow from of "
"``from_node``'s ``from_output`` into ``to_node``."
msgstr ""

#: ../../classes/class_visualscript.rst:340
msgid ""
"Unlike :ref:`data_connect<class_VisualScript_data_connect>`, there isn't "
"a ``to_port``, since the target node can have only one sequence port."
msgstr ""

#: ../../classes/class_visualscript.rst:344
msgid ""
"void **sequence_disconnect** **(** :ref:`String<class_string>` func, "
":ref:`int<class_int>` from_node, :ref:`int<class_int>` from_output, "
":ref:`int<class_int>` to_node **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:346
msgid ""
"Disconnect two sequence ports previously connected with "
":ref:`sequence_connect<class_VisualScript_sequence_connect>`."
msgstr ""

#: ../../classes/class_visualscript.rst:350
msgid ""
"void **set_function_scroll** **(** :ref:`String<class_string>` name, "
":ref:`Vector2<class_vector2>` ofs **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:352
msgid "Position the center of the screen for a function."
msgstr ""

#: ../../classes/class_visualscript.rst:356
msgid ""
"void **set_instance_base_type** **(** :ref:`String<class_string>` type "
"**)**"
msgstr ""

#: ../../classes/class_visualscript.rst:358
msgid "Set the base type of the script."
msgstr ""

#: ../../classes/class_visualscript.rst:362
msgid ""
"void **set_node_position** **(** :ref:`String<class_string>` func, "
":ref:`int<class_int>` id, :ref:`Vector2<class_vector2>` position **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:364
msgid "Position a node on the screen."
msgstr ""

#: ../../classes/class_visualscript.rst:368
msgid ""
"void **set_variable_default_value** **(** :ref:`String<class_string>` "
"name, :ref:`Variant<class_variant>` value **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:370
msgid "Change the default (initial) value of a variable."
msgstr ""

#: ../../classes/class_visualscript.rst:374
msgid ""
"void **set_variable_export** **(** :ref:`String<class_string>` name, "
":ref:`bool<class_bool>` enable **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:376
msgid "Change whether a variable is exported."
msgstr ""

#: ../../classes/class_visualscript.rst:380
msgid ""
"void **set_variable_info** **(** :ref:`String<class_string>` name, "
":ref:`Dictionary<class_dictionary>` value **)**"
msgstr ""

#: ../../classes/class_visualscript.rst:382
msgid ""
"Set a variable's info, using the same format as "
":ref:`get_variable_info<class_VisualScript_get_variable_info>`."
msgstr ""

