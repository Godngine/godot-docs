# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_scenestate.rst:8
msgid "SceneState"
msgstr ""

#: ../../classes/class_scenestate.rst:10
msgid ""
"**Inherits:** :ref:`Reference<class_reference>` **<** "
":ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_scenestate.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_scenestate.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_scenestate.rst:17
msgid "A script interface to a scene file's data."
msgstr ""

#: ../../classes/class_scenestate.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_scenestate.rst:23
msgid ":ref:`Array<class_array>`"
msgstr ""

#: ../../classes/class_scenestate.rst:23
msgid ""
":ref:`get_connection_binds<class_SceneState_get_connection_binds>` **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:25 ../../classes/class_scenestate.rst:27
#: ../../classes/class_scenestate.rst:37 ../../classes/class_scenestate.rst:41
#: ../../classes/class_scenestate.rst:53
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_scenestate.rst:25
msgid ""
":ref:`get_connection_count<class_SceneState_get_connection_count>` **(** "
"**)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:27
msgid ""
":ref:`get_connection_flags<class_SceneState_get_connection_flags>` **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:29 ../../classes/class_scenestate.rst:31
#: ../../classes/class_scenestate.rst:45 ../../classes/class_scenestate.rst:47
#: ../../classes/class_scenestate.rst:55 ../../classes/class_scenestate.rst:59
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_scenestate.rst:29
msgid ""
":ref:`get_connection_method<class_SceneState_get_connection_method>` "
"**(** :ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:31
msgid ""
":ref:`get_connection_signal<class_SceneState_get_connection_signal>` "
"**(** :ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:33 ../../classes/class_scenestate.rst:35
#: ../../classes/class_scenestate.rst:49 ../../classes/class_scenestate.rst:51
msgid ":ref:`NodePath<class_nodepath>`"
msgstr ""

#: ../../classes/class_scenestate.rst:33
msgid ""
":ref:`get_connection_source<class_SceneState_get_connection_source>` "
"**(** :ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:35
msgid ""
":ref:`get_connection_target<class_SceneState_get_connection_target>` "
"**(** :ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:37
msgid ":ref:`get_node_count<class_SceneState_get_node_count>` **(** **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:39
msgid ":ref:`PoolStringArray<class_poolstringarray>`"
msgstr ""

#: ../../classes/class_scenestate.rst:39
msgid ""
":ref:`get_node_groups<class_SceneState_get_node_groups>` **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:41
msgid ""
":ref:`get_node_index<class_SceneState_get_node_index>` **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:43
msgid ":ref:`PackedScene<class_packedscene>`"
msgstr ""

#: ../../classes/class_scenestate.rst:43
msgid ""
":ref:`get_node_instance<class_SceneState_get_node_instance>` **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:45
msgid ""
":ref:`get_node_instance_placeholder<class_SceneState_get_node_instance_placeholder>`"
" **(** :ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:47
msgid ""
":ref:`get_node_name<class_SceneState_get_node_name>` **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:49
msgid ""
":ref:`get_node_owner_path<class_SceneState_get_node_owner_path>` **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:51
msgid ""
":ref:`get_node_path<class_SceneState_get_node_path>` **(** "
":ref:`int<class_int>` idx, :ref:`bool<class_bool>` for_parent=false **)**"
" const"
msgstr ""

#: ../../classes/class_scenestate.rst:53
msgid ""
":ref:`get_node_property_count<class_SceneState_get_node_property_count>` "
"**(** :ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:55
msgid ""
":ref:`get_node_property_name<class_SceneState_get_node_property_name>` "
"**(** :ref:`int<class_int>` idx, :ref:`int<class_int>` prop_idx **)** "
"const"
msgstr ""

#: ../../classes/class_scenestate.rst:57
msgid ":ref:`Variant<class_variant>`"
msgstr ""

#: ../../classes/class_scenestate.rst:57
msgid ""
":ref:`get_node_property_value<class_SceneState_get_node_property_value>` "
"**(** :ref:`int<class_int>` idx, :ref:`int<class_int>` prop_idx **)** "
"const"
msgstr ""

#: ../../classes/class_scenestate.rst:59
msgid ""
":ref:`get_node_type<class_SceneState_get_node_type>` **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:61
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_scenestate.rst:61
msgid ""
":ref:`is_node_instance_placeholder<class_SceneState_is_node_instance_placeholder>`"
" **(** :ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:65
msgid "Enums"
msgstr ""

#: ../../classes/class_scenestate.rst:69
msgid "enum **GenEditState**"
msgstr ""

#: ../../classes/class_scenestate.rst:71
msgid ""
"**GEN_EDIT_STATE_DISABLED** = **0** --- If passed to "
":ref:`PackedScene.instance<class_PackedScene_instance>`, blocks edits to "
"the scene state."
msgstr ""

#: ../../classes/class_scenestate.rst:72
msgid ""
"**GEN_EDIT_STATE_INSTANCE** = **1** --- If passed to "
":ref:`PackedScene.instance<class_PackedScene_instance>`, provides "
"inherited scene resources to the local scene. Requires tools compiled."
msgstr ""

#: ../../classes/class_scenestate.rst:73
msgid ""
"**GEN_EDIT_STATE_MAIN** = **2** --- If passed to "
":ref:`PackedScene.instance<class_PackedScene_instance>`, provides local "
"scene resources to the local scene. Only the main scene should receive "
"the main edit state. Requires tools compiled."
msgstr ""

#: ../../classes/class_scenestate.rst:77
msgid "Description"
msgstr ""

#: ../../classes/class_scenestate.rst:79
msgid ""
"Maintains a list of resources, nodes, exported and overridden properties,"
" and built-in scripts associated with a scene."
msgstr ""

#: ../../classes/class_scenestate.rst:82
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_scenestate.rst:86
msgid ""
":ref:`Array<class_array>` **get_connection_binds** **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:88
msgid "Returns the list of bound parameters for the signal at ``idx``."
msgstr ""

#: ../../classes/class_scenestate.rst:92
msgid ":ref:`int<class_int>` **get_connection_count** **(** **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:94
msgid "Returns the number of signal connections in the scene."
msgstr ""

#: ../../classes/class_scenestate.rst:98
msgid ""
":ref:`int<class_int>` **get_connection_flags** **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:100
msgid ""
"Returns the flags for the signal at ``idx``. See "
":ref:`Object<class_object>`'s ``CONNECT_*`` flags."
msgstr ""

#: ../../classes/class_scenestate.rst:104
msgid ""
":ref:`String<class_string>` **get_connection_method** **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:106
msgid "Returns the method connected to the signal at ``idx``."
msgstr ""

#: ../../classes/class_scenestate.rst:110
msgid ""
":ref:`String<class_string>` **get_connection_signal** **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:112
msgid "Returns the name of the signal at ``idx``."
msgstr ""

#: ../../classes/class_scenestate.rst:116
msgid ""
":ref:`NodePath<class_nodepath>` **get_connection_source** **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:118
msgid ""
"Returns the path to the node that owns the signal at ``idx``, relative to"
" the root node."
msgstr ""

#: ../../classes/class_scenestate.rst:122
msgid ""
":ref:`NodePath<class_nodepath>` **get_connection_target** **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:124
msgid ""
"Returns the path to the node that owns the method connected to the signal"
" at ``idx``, relative to the root node."
msgstr ""

#: ../../classes/class_scenestate.rst:128
msgid ":ref:`int<class_int>` **get_node_count** **(** **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:130
msgid "Returns the number of nodes in the scene."
msgstr ""

#: ../../classes/class_scenestate.rst:134
msgid ""
":ref:`PoolStringArray<class_poolstringarray>` **get_node_groups** **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:136
msgid "Returns the list of group names associated with the node at ``idx``."
msgstr ""

#: ../../classes/class_scenestate.rst:140
msgid ""
":ref:`int<class_int>` **get_node_index** **(** :ref:`int<class_int>` idx "
"**)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:144
msgid ""
":ref:`PackedScene<class_packedscene>` **get_node_instance** **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:146
msgid ""
"Returns the scene for the node at ``idx`` or ``null`` if the node is not "
"an instance."
msgstr ""

#: ../../classes/class_scenestate.rst:150
msgid ""
":ref:`String<class_string>` **get_node_instance_placeholder** **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:152
msgid ""
"Returns the path to the represented scene file if the node at ``idx`` is "
"an :ref:`InstancePlaceholder<class_instanceplaceholder>`."
msgstr ""

#: ../../classes/class_scenestate.rst:156
msgid ""
":ref:`String<class_string>` **get_node_name** **(** :ref:`int<class_int>`"
" idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:158
msgid "Returns the name of the node at ``idx``."
msgstr ""

#: ../../classes/class_scenestate.rst:162
msgid ""
":ref:`NodePath<class_nodepath>` **get_node_owner_path** **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:164
msgid ""
"Returns the path to the owner of the node at ``idx``, relative to the "
"root node."
msgstr ""

#: ../../classes/class_scenestate.rst:168
msgid ""
":ref:`NodePath<class_nodepath>` **get_node_path** **(** "
":ref:`int<class_int>` idx, :ref:`bool<class_bool>` for_parent=false **)**"
" const"
msgstr ""

#: ../../classes/class_scenestate.rst:170
msgid "Returns the path to the node at ``idx``."
msgstr ""

#: ../../classes/class_scenestate.rst:174
msgid ""
":ref:`int<class_int>` **get_node_property_count** **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:176
msgid ""
"Returns the number of exported or overridden properties for the node at "
"``idx``."
msgstr ""

#: ../../classes/class_scenestate.rst:180
msgid ""
":ref:`String<class_string>` **get_node_property_name** **(** "
":ref:`int<class_int>` idx, :ref:`int<class_int>` prop_idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:182
msgid "Returns the name of the property at ``prop_idx`` for the node at ``idx``."
msgstr ""

#: ../../classes/class_scenestate.rst:186
msgid ""
":ref:`Variant<class_variant>` **get_node_property_value** **(** "
":ref:`int<class_int>` idx, :ref:`int<class_int>` prop_idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:188
msgid "Returns the value of the property at ``prop_idx`` for the node at ``idx``."
msgstr ""

#: ../../classes/class_scenestate.rst:192
msgid ""
":ref:`String<class_string>` **get_node_type** **(** :ref:`int<class_int>`"
" idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:194
msgid "Returns the type of the node at ``idx``."
msgstr ""

#: ../../classes/class_scenestate.rst:198
msgid ""
":ref:`bool<class_bool>` **is_node_instance_placeholder** **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_scenestate.rst:200
msgid ""
"Returns ``true`` if the node at ``idx`` is an "
":ref:`InstancePlaceholder<class_instanceplaceholder>`."
msgstr ""

