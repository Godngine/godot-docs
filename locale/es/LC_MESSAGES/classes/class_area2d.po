# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_area2d.rst:8
msgid "Area2D"
msgstr ""

#: ../../classes/class_area2d.rst:10
msgid ""
"**Inherits:** :ref:`CollisionObject2D<class_collisionobject2d>` **<** "
":ref:`Node2D<class_node2d>` **<** :ref:`CanvasItem<class_canvasitem>` "
"**<** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_area2d.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_area2d.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_area2d.rst:17
msgid "2D area for detection and 2D physics influence."
msgstr ""

#: ../../classes/class_area2d.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_area2d.rst:23 ../../classes/class_area2d.rst:25
#: ../../classes/class_area2d.rst:31 ../../classes/class_area2d.rst:33
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_area2d.rst:23
msgid ""
":ref:`get_collision_layer_bit<class_Area2D_get_collision_layer_bit>` "
"**(** :ref:`int<class_int>` bit **)** const"
msgstr ""

#: ../../classes/class_area2d.rst:25
msgid ""
":ref:`get_collision_mask_bit<class_Area2D_get_collision_mask_bit>` **(** "
":ref:`int<class_int>` bit **)** const"
msgstr ""

#: ../../classes/class_area2d.rst:27 ../../classes/class_area2d.rst:29
msgid ":ref:`Array<class_array>`"
msgstr ""

#: ../../classes/class_area2d.rst:27
msgid ""
":ref:`get_overlapping_areas<class_Area2D_get_overlapping_areas>` **(** "
"**)** const"
msgstr ""

#: ../../classes/class_area2d.rst:29
msgid ""
":ref:`get_overlapping_bodies<class_Area2D_get_overlapping_bodies>` **(** "
"**)** const"
msgstr ""

#: ../../classes/class_area2d.rst:31
msgid ""
":ref:`overlaps_area<class_Area2D_overlaps_area>` **(** "
":ref:`Node<class_node>` area **)** const"
msgstr ""

#: ../../classes/class_area2d.rst:33
msgid ""
":ref:`overlaps_body<class_Area2D_overlaps_body>` **(** "
":ref:`Node<class_node>` body **)** const"
msgstr ""

#: ../../classes/class_area2d.rst:35 ../../classes/class_area2d.rst:37
msgid "void"
msgstr ""

#: ../../classes/class_area2d.rst:35
msgid ""
":ref:`set_collision_layer_bit<class_Area2D_set_collision_layer_bit>` "
"**(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**"
msgstr ""

#: ../../classes/class_area2d.rst:37
msgid ""
":ref:`set_collision_mask_bit<class_Area2D_set_collision_mask_bit>` **(** "
":ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**"
msgstr ""

#: ../../classes/class_area2d.rst:41
msgid "Signals"
msgstr ""

#: ../../classes/class_area2d.rst:45
msgid "**area_entered** **(** :ref:`Object<class_object>` area **)**"
msgstr ""

#: ../../classes/class_area2d.rst:47
msgid "Emitted when another area enters."
msgstr ""

#: ../../classes/class_area2d.rst:51
msgid "**area_exited** **(** :ref:`Object<class_object>` area **)**"
msgstr ""

#: ../../classes/class_area2d.rst:53
msgid "Emitted when another area exits."
msgstr ""

#: ../../classes/class_area2d.rst:57
msgid ""
"**area_shape_entered** **(** :ref:`int<class_int>` area_id, "
":ref:`Object<class_object>` area, :ref:`int<class_int>` area_shape, "
":ref:`int<class_int>` self_shape **)**"
msgstr ""

#: ../../classes/class_area2d.rst:59
msgid "Emitted when another area enters, reporting which shapes overlapped."
msgstr ""

#: ../../classes/class_area2d.rst:63
msgid ""
"**area_shape_exited** **(** :ref:`int<class_int>` area_id, "
":ref:`Object<class_object>` area, :ref:`int<class_int>` area_shape, "
":ref:`int<class_int>` self_shape **)**"
msgstr ""

#: ../../classes/class_area2d.rst:65
msgid "Emitted when another area exits, reporting which shapes were overlapping."
msgstr ""

#: ../../classes/class_area2d.rst:69
msgid "**body_entered** **(** :ref:`Object<class_object>` body **)**"
msgstr ""

#: ../../classes/class_area2d.rst:71
msgid "Emitted when a :ref:`PhysicsBody2D<class_physicsbody2d>` object enters."
msgstr ""

#: ../../classes/class_area2d.rst:75
msgid "**body_exited** **(** :ref:`Object<class_object>` body **)**"
msgstr ""

#: ../../classes/class_area2d.rst:77
msgid "Emitted when a :ref:`PhysicsBody2D<class_physicsbody2d>` object exits."
msgstr ""

#: ../../classes/class_area2d.rst:81
msgid ""
"**body_shape_entered** **(** :ref:`int<class_int>` body_id, "
":ref:`Object<class_object>` body, :ref:`int<class_int>` body_shape, "
":ref:`int<class_int>` area_shape **)**"
msgstr ""

#: ../../classes/class_area2d.rst:83
msgid ""
"Emitted when a :ref:`PhysicsBody2D<class_physicsbody2d>` object enters, "
"reporting which shapes overlapped."
msgstr ""

#: ../../classes/class_area2d.rst:87
msgid ""
"**body_shape_exited** **(** :ref:`int<class_int>` body_id, "
":ref:`Object<class_object>` body, :ref:`int<class_int>` body_shape, "
":ref:`int<class_int>` area_shape **)**"
msgstr ""

#: ../../classes/class_area2d.rst:89
msgid ""
"Emitted when a :ref:`PhysicsBody2D<class_physicsbody2d>` object exits, "
"reporting which shapes were overlapping."
msgstr ""

#: ../../classes/class_area2d.rst:93
msgid "Member Variables"
msgstr ""

#: ../../classes/class_area2d.rst:97
msgid ""
":ref:`float<class_float>` **angular_damp** - The rate at which objects "
"stop spinning in this area. Represents the angular velocity lost per "
"second. Values range from ``0`` (no damping) to ``1`` (full damping)."
msgstr ""

#: ../../classes/class_area2d.rst:101
msgid ""
":ref:`String<class_string>` **audio_bus_name** - The name of the area's "
"audio bus."
msgstr ""

#: ../../classes/class_area2d.rst:105
msgid ""
":ref:`bool<class_bool>` **audio_bus_override** - If ``true`` the area's "
"audio bus overrides the default audio bus. Default value: ``false``."
msgstr ""

#: ../../classes/class_area2d.rst:109
msgid ""
":ref:`int<class_int>` **collision_layer** - The area's physics layer(s). "
"Collidable objects can exist in any of 32 different layers. A contact is "
"detected if object A is in any of the layers that object B scans, or "
"object B is in any layers that object A scans. See also "
"``collision_mask``."
msgstr ""

#: ../../classes/class_area2d.rst:113
msgid ""
":ref:`int<class_int>` **collision_mask** - The physics layers this area "
"scans to determine collision detection."
msgstr ""

#: ../../classes/class_area2d.rst:117
msgid ""
":ref:`float<class_float>` **gravity** - The area's gravity intensity "
"(ranges from -1024 to 1024). This value multiplies the gravity vector. "
"This is useful to alter the force of gravity without altering its "
"direction."
msgstr ""

#: ../../classes/class_area2d.rst:121
msgid ""
":ref:`float<class_float>` **gravity_distance_scale** - The falloff factor"
" for point gravity. The greater the value, the faster gravity decreases "
"with distance."
msgstr ""

#: ../../classes/class_area2d.rst:125
msgid ""
":ref:`bool<class_bool>` **gravity_point** - If ``true`` gravity is "
"calculated from a point (set via ``gravity_vec``). Also see "
"``space_override``. Default value: ``false``."
msgstr ""

#: ../../classes/class_area2d.rst:129
msgid ""
":ref:`Vector2<class_vector2>` **gravity_vec** - The area's gravity vector"
" (not normalized). If gravity is a point (see "
":ref:`is_gravity_a_point<class_Area2D_is_gravity_a_point>`), this will be"
" the point of attraction."
msgstr ""

#: ../../classes/class_area2d.rst:133
msgid ""
":ref:`float<class_float>` **linear_damp** - The rate at which objects "
"stop moving in this area. Represents the linear velocity lost per second."
" Values range from ``0`` (no damping) to ``1`` (full damping)."
msgstr ""

#: ../../classes/class_area2d.rst:137
msgid ""
":ref:`bool<class_bool>` **monitorable** - If ``true`` other monitoring "
"areas can detect this area. Default value: ``true``."
msgstr ""

#: ../../classes/class_area2d.rst:141
msgid ""
":ref:`bool<class_bool>` **monitoring** - If ``true`` the area detects "
"bodies or areas entering and exiting it. Default value: ``true``."
msgstr ""

#: ../../classes/class_area2d.rst:145
msgid ""
":ref:`float<class_float>` **priority** - The area's priority. Higher "
"priority areas are processed first. Default value: 0."
msgstr ""

#: ../../classes/class_area2d.rst:149
msgid ""
":ref:`SpaceOverride<enum_area2d_spaceoverride>` **space_override** - "
"Override mode for gravity and damping calculations within this area. See "
"the SPACE_OVERRIDE\\_\\* constants for values."
msgstr ""

#: ../../classes/class_area2d.rst:153
msgid "Enums"
msgstr ""

#: ../../classes/class_area2d.rst:157
msgid "enum **SpaceOverride**"
msgstr ""

#: ../../classes/class_area2d.rst:159
msgid ""
"**SPACE_OVERRIDE_DISABLED** = **0** --- This area does not affect "
"gravity/damping."
msgstr ""

#: ../../classes/class_area2d.rst:160
msgid ""
"**SPACE_OVERRIDE_COMBINE** = **1** --- This area adds its gravity/damping"
" values to whatever has been calculated so far (in ``priority`` order)."
msgstr ""

#: ../../classes/class_area2d.rst:161
msgid ""
"**SPACE_OVERRIDE_COMBINE_REPLACE** = **2** --- This area adds its "
"gravity/damping values to whatever has been calculated so far (in "
"``priority`` order), ignoring any lower priority areas."
msgstr ""

#: ../../classes/class_area2d.rst:162
msgid ""
"**SPACE_OVERRIDE_REPLACE** = **3** --- This area replaces any "
"gravity/damping, even the defaults, ignoring any lower priority areas."
msgstr ""

#: ../../classes/class_area2d.rst:163
msgid ""
"**SPACE_OVERRIDE_REPLACE_COMBINE** = **4** --- This area replaces any "
"gravity/damping calculated so far (in ``priority`` order), but keeps "
"calculating the rest of the areas."
msgstr ""

#: ../../classes/class_area2d.rst:167
msgid "Description"
msgstr ""

#: ../../classes/class_area2d.rst:169
msgid ""
"2D area that detects :ref:`CollisionObject2D<class_collisionobject2d>` "
"nodes overlapping, entering, or exiting. Can also alter or override local"
" physics parameters (gravity, damping)."
msgstr ""

#: ../../classes/class_area2d.rst:172
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_area2d.rst:176
msgid ""
":ref:`bool<class_bool>` **get_collision_layer_bit** **(** "
":ref:`int<class_int>` bit **)** const"
msgstr ""

#: ../../classes/class_area2d.rst:178
msgid ""
"Return an individual bit on the layer mask. Describes whether other areas"
" will collide with this one on the given layer."
msgstr ""

#: ../../classes/class_area2d.rst:182
msgid ""
":ref:`bool<class_bool>` **get_collision_mask_bit** **(** "
":ref:`int<class_int>` bit **)** const"
msgstr ""

#: ../../classes/class_area2d.rst:184
msgid ""
"Return an individual bit on the collision mask. Describes whether this "
"area will collide with others on the given layer."
msgstr ""

#: ../../classes/class_area2d.rst:188
msgid ":ref:`Array<class_array>` **get_overlapping_areas** **(** **)** const"
msgstr ""

#: ../../classes/class_area2d.rst:190
msgid ""
"Returns a list of intersecting ``Area2D``\\ s. For performance reasons "
"(collisions are all processed at the same time) this list is modified "
"once during the physics step, not immediately after objects are moved. "
"Consider using signals instead."
msgstr ""

#: ../../classes/class_area2d.rst:194
msgid ":ref:`Array<class_array>` **get_overlapping_bodies** **(** **)** const"
msgstr ""

#: ../../classes/class_area2d.rst:196
msgid ""
"Returns a list of intersecting "
":ref:`PhysicsBody2D<class_physicsbody2d>`\\ s. For performance reasons "
"(collisions are all processed at the same time) this list is modified "
"once during the physics step, not immediately after objects are moved. "
"Consider using signals instead."
msgstr ""

#: ../../classes/class_area2d.rst:200
msgid ""
":ref:`bool<class_bool>` **overlaps_area** **(** :ref:`Node<class_node>` "
"area **)** const"
msgstr ""

#: ../../classes/class_area2d.rst:202
msgid ""
"If ``true`` the given area overlaps the Area2D. Note that the result of "
"this test is not immediate after moving objects. For performance, list of"
" overlaps is updated once per frame and before the physics step. Consider"
" using signals instead."
msgstr ""

#: ../../classes/class_area2d.rst:206
msgid ""
":ref:`bool<class_bool>` **overlaps_body** **(** :ref:`Node<class_node>` "
"body **)** const"
msgstr ""

#: ../../classes/class_area2d.rst:208
msgid ""
"If ``true`` the given body overlaps the Area2D. Note that the result of "
"this test is not immediate after moving objects. For performance, list of"
" overlaps is updated once per frame and before the physics step. Consider"
" using signals instead."
msgstr ""

#: ../../classes/class_area2d.rst:212
msgid ""
"void **set_collision_layer_bit** **(** :ref:`int<class_int>` bit, "
":ref:`bool<class_bool>` value **)**"
msgstr ""

#: ../../classes/class_area2d.rst:214
msgid ""
"Set/clear individual bits on the layer mask. This makes getting an area "
"in/out of only one layer easier."
msgstr ""

#: ../../classes/class_area2d.rst:218
msgid ""
"void **set_collision_mask_bit** **(** :ref:`int<class_int>` bit, "
":ref:`bool<class_bool>` value **)**"
msgstr ""

#: ../../classes/class_area2d.rst:220
msgid ""
"Set/clear individual bits on the collision mask. This makes selecting the"
" areas scanned easier."
msgstr ""

