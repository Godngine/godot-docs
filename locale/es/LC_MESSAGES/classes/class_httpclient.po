# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_httpclient.rst:8
msgid "HTTPClient"
msgstr ""

#: ../../classes/class_httpclient.rst:10
msgid ""
"**Inherits:** :ref:`Reference<class_reference>` **<** "
":ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_httpclient.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_httpclient.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_httpclient.rst:17
msgid "Hyper-text transfer protocol client."
msgstr ""

#: ../../classes/class_httpclient.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_httpclient.rst:23 ../../classes/class_httpclient.rst:51
msgid "void"
msgstr ""

#: ../../classes/class_httpclient.rst:23
msgid ":ref:`close<class_HTTPClient_close>` **(** **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:25 ../../classes/class_httpclient.rst:27
#: ../../classes/class_httpclient.rst:29 ../../classes/class_httpclient.rst:35
#: ../../classes/class_httpclient.rst:41 ../../classes/class_httpclient.rst:47
#: ../../classes/class_httpclient.rst:49
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_httpclient.rst:25
msgid ""
":ref:`connect_to_host<class_HTTPClient_connect_to_host>` **(** "
":ref:`String<class_string>` host, :ref:`int<class_int>` port=-1, "
":ref:`bool<class_bool>` use_ssl=false, :ref:`bool<class_bool>` "
"verify_host=true **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:27
msgid ""
":ref:`get_response_body_length<class_HTTPClient_get_response_body_length>`"
" **(** **)** const"
msgstr ""

#: ../../classes/class_httpclient.rst:29
msgid ""
":ref:`get_response_code<class_HTTPClient_get_response_code>` **(** **)** "
"const"
msgstr ""

#: ../../classes/class_httpclient.rst:31
msgid ":ref:`PoolStringArray<class_poolstringarray>`"
msgstr ""

#: ../../classes/class_httpclient.rst:31
msgid ""
":ref:`get_response_headers<class_HTTPClient_get_response_headers>` **(** "
"**)**"
msgstr ""

#: ../../classes/class_httpclient.rst:33
msgid ":ref:`Dictionary<class_dictionary>`"
msgstr ""

#: ../../classes/class_httpclient.rst:33
msgid ""
":ref:`get_response_headers_as_dictionary<class_HTTPClient_get_response_headers_as_dictionary>`"
" **(** **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:35
msgid ":ref:`get_status<class_HTTPClient_get_status>` **(** **)** const"
msgstr ""

#: ../../classes/class_httpclient.rst:37 ../../classes/class_httpclient.rst:39
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_httpclient.rst:37
msgid ":ref:`has_response<class_HTTPClient_has_response>` **(** **)** const"
msgstr ""

#: ../../classes/class_httpclient.rst:39
msgid ""
":ref:`is_response_chunked<class_HTTPClient_is_response_chunked>` **(** "
"**)** const"
msgstr ""

#: ../../classes/class_httpclient.rst:41
msgid ":ref:`poll<class_HTTPClient_poll>` **(** **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:43
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_httpclient.rst:43
msgid ""
":ref:`query_string_from_dict<class_HTTPClient_query_string_from_dict>` "
"**(** :ref:`Dictionary<class_dictionary>` fields **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:45
msgid ":ref:`PoolByteArray<class_poolbytearray>`"
msgstr ""

#: ../../classes/class_httpclient.rst:45
msgid ""
":ref:`read_response_body_chunk<class_HTTPClient_read_response_body_chunk>`"
" **(** **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:47
msgid ""
":ref:`request<class_HTTPClient_request>` **(** :ref:`int<class_int>` "
"method, :ref:`String<class_string>` url, "
":ref:`PoolStringArray<class_poolstringarray>` headers, "
":ref:`String<class_string>` body=\"\" **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:49
msgid ""
":ref:`request_raw<class_HTTPClient_request_raw>` **(** "
":ref:`int<class_int>` method, :ref:`String<class_string>` url, "
":ref:`PoolStringArray<class_poolstringarray>` headers, "
":ref:`PoolByteArray<class_poolbytearray>` body **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:51
msgid ""
":ref:`set_read_chunk_size<class_HTTPClient_set_read_chunk_size>` **(** "
":ref:`int<class_int>` bytes **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:55
msgid "Member Variables"
msgstr ""

#: ../../classes/class_httpclient.rst:59
msgid ""
":ref:`bool<class_bool>` **blocking_mode_enabled** - If ``true``, "
"execution will block until all data is read from the response."
msgstr ""

#: ../../classes/class_httpclient.rst:63
msgid ""
":ref:`StreamPeer<class_streampeer>` **connection** - The connection to "
"use for this client."
msgstr ""

#: ../../classes/class_httpclient.rst:67
msgid "Enums"
msgstr ""

#: ../../classes/class_httpclient.rst:71
msgid "enum **Status**"
msgstr ""

#: ../../classes/class_httpclient.rst:73
msgid "**STATUS_DISCONNECTED** = **0** --- Status: Disconnected from the server."
msgstr ""

#: ../../classes/class_httpclient.rst:74
msgid ""
"**STATUS_RESOLVING** = **1** --- Status: Currently resolving the hostname"
" for the given URL into an IP."
msgstr ""

#: ../../classes/class_httpclient.rst:75
msgid ""
"**STATUS_CANT_RESOLVE** = **2** --- Status: DNS failure: Can't resolve "
"the hostname for the given URL."
msgstr ""

#: ../../classes/class_httpclient.rst:76
msgid "**STATUS_CONNECTING** = **3** --- Status: Currently connecting to server."
msgstr ""

#: ../../classes/class_httpclient.rst:77
msgid "**STATUS_CANT_CONNECT** = **4** --- Status: Can't connect to the server."
msgstr ""

#: ../../classes/class_httpclient.rst:78
msgid "**STATUS_CONNECTED** = **5** --- Status: Connection established."
msgstr ""

#: ../../classes/class_httpclient.rst:79
msgid "**STATUS_REQUESTING** = **6** --- Status: Currently sending request."
msgstr ""

#: ../../classes/class_httpclient.rst:80
msgid "**STATUS_BODY** = **7** --- Status: HTTP body received."
msgstr ""

#: ../../classes/class_httpclient.rst:81
msgid "**STATUS_CONNECTION_ERROR** = **8** --- Status: Error in HTTP connection."
msgstr ""

#: ../../classes/class_httpclient.rst:82
msgid "**STATUS_SSL_HANDSHAKE_ERROR** = **9** --- Status: Error in SSL handshake."
msgstr ""

#: ../../classes/class_httpclient.rst:86
msgid "enum **Method**"
msgstr ""

#: ../../classes/class_httpclient.rst:88
msgid ""
"**METHOD_GET** = **0** --- HTTP GET method. The GET method requests a "
"representation of the specified resource. Requests using GET should only "
"retrieve data."
msgstr ""

#: ../../classes/class_httpclient.rst:89
msgid ""
"**METHOD_HEAD** = **1** --- HTTP HEAD method. The HEAD method asks for a "
"response identical to that of a GET request, but without the response "
"body. This is useful to request metadata like HTTP headers or to check if"
" a resource exists."
msgstr ""

#: ../../classes/class_httpclient.rst:90
msgid ""
"**METHOD_POST** = **2** --- HTTP POST method. The POST method is used to "
"submit an entity to the specified resource, often causing a change in "
"state or side effects on the server. This is often used for forms and "
"submitting data or uploading files."
msgstr ""

#: ../../classes/class_httpclient.rst:91
msgid ""
"**METHOD_PUT** = **3** --- HTTP PUT method. The PUT method asks to "
"replace all current representations of the target resource with the "
"request payload. (You can think of ``POST`` as \"create or update\" and "
"``PUT`` as \"update\", although many services tend to not make a clear "
"distinction or change their meaning)."
msgstr ""

#: ../../classes/class_httpclient.rst:92
msgid ""
"**METHOD_DELETE** = **4** --- HTTP DELETE method. The DELETE method "
"requests to delete the specified resource."
msgstr ""

#: ../../classes/class_httpclient.rst:93
msgid ""
"**METHOD_OPTIONS** = **5** --- HTTP OPTIONS method. The OPTIONS method "
"asks for a description of the communication options for the target "
"resource. Rarely used."
msgstr ""

#: ../../classes/class_httpclient.rst:94
msgid ""
"**METHOD_TRACE** = **6** --- HTTP TRACE method. The TRACE method performs"
" a message loop-back test along the path to the target resource. Returns "
"the entire HTTP request received in the response body. Rarely used."
msgstr ""

#: ../../classes/class_httpclient.rst:95
msgid ""
"**METHOD_CONNECT** = **7** --- HTTP CONNECT method. The CONNECT method "
"establishes a tunnel to the server identified by the target resource. "
"Rarely used."
msgstr ""

#: ../../classes/class_httpclient.rst:96
msgid ""
"**METHOD_PATCH** = **8** --- HTTP PATCH method. The PATCH method is used "
"to apply partial modifications to a resource."
msgstr ""

#: ../../classes/class_httpclient.rst:97
msgid "**METHOD_MAX** = **9** --- Marker for end of ``METHOD_*`` enum. Not used."
msgstr ""

#: ../../classes/class_httpclient.rst:101
msgid "enum **ResponseCode**"
msgstr ""

#: ../../classes/class_httpclient.rst:103
msgid ""
"**RESPONSE_CONTINUE** = **100** --- HTTP status code ``100 Continue``. "
"Interim response that indicates everything so far is OK and that the "
"client should continue with the request (or ignore this status if already"
" finished)."
msgstr ""

#: ../../classes/class_httpclient.rst:104
msgid ""
"**RESPONSE_SWITCHING_PROTOCOLS** = **101** --- HTTP status code ``101 "
"Switching Protocol``. Sent in response to an ``Upgrade`` request header "
"by the client. Indicates the protocol the server is switching to."
msgstr ""

#: ../../classes/class_httpclient.rst:105
msgid ""
"**RESPONSE_PROCESSING** = **102** --- HTTP status code ``102 Processing``"
" (WebDAV). Indicates that the server has received and is processing the "
"request, but no response is available yet."
msgstr ""

#: ../../classes/class_httpclient.rst:106
msgid ""
"**RESPONSE_OK** = **200** --- HTTP status code ``200 OK``. The request "
"has succeeded. Default response for successful requests. Meaning varies "
"depending on the request. GET: The resource has been fetched and is "
"transmitted in the message body. HEAD: The entity headers are in the "
"message body. POST: The resource describing the result of the action is "
"transmitted in the message body. TRACE: The message body contains the "
"request message as received by the server."
msgstr ""

#: ../../classes/class_httpclient.rst:107
msgid ""
"**RESPONSE_CREATED** = **201** --- HTTP status code ``201 Created``. The "
"request has succeeded and a new resource has been created as a result of "
"it. This is typically the response sent after a PUT request."
msgstr ""

#: ../../classes/class_httpclient.rst:108
msgid ""
"**RESPONSE_ACCEPTED** = **202** --- HTTP status code ``202 Accepted``. "
"The request has been received but not yet acted upon. It is non-"
"committal, meaning that there is no way in HTTP to later send an "
"asynchronous response indicating the outcome of processing the request. "
"It is intended for cases where another process or server handles the "
"request, or for batch processing."
msgstr ""

#: ../../classes/class_httpclient.rst:109
msgid ""
"**RESPONSE_NON_AUTHORITATIVE_INFORMATION** = **203** --- HTTP status code"
" ``203 Non-Authoritative Information``. This response code means returned"
" meta-information set is not exact set as available from the origin "
"server, but collected from a local or a third party copy. Except this "
"condition, 200 OK response should be preferred instead of this response."
msgstr ""

#: ../../classes/class_httpclient.rst:110
msgid ""
"**RESPONSE_NO_CONTENT** = **204** --- HTTP status code ``204 No "
"Content``. There is no content to send for this request, but the headers "
"may be useful. The user-agent may update its cached headers for this "
"resource with the new ones."
msgstr ""

#: ../../classes/class_httpclient.rst:111
msgid ""
"**RESPONSE_RESET_CONTENT** = **205** --- HTTP status code ``205 Reset "
"Content``. The server has fulfilled the request and desires that the "
"client resets the \"document view\" that caused the request to be sent to"
" its original state as received from the origin server."
msgstr ""

#: ../../classes/class_httpclient.rst:112
msgid ""
"**RESPONSE_PARTIAL_CONTENT** = **206** --- HTTP status code ``206 Partial"
" Content``. This response code is used because of a range header sent by "
"the client to separate download into multiple streams."
msgstr ""

#: ../../classes/class_httpclient.rst:113
msgid ""
"**RESPONSE_MULTI_STATUS** = **207** --- HTTP status code ``207 Multi-"
"Status`` (WebDAV). A Multi-Status response conveys information about "
"multiple resources in situations where multiple status codes might be "
"appropriate."
msgstr ""

#: ../../classes/class_httpclient.rst:114
msgid ""
"**RESPONSE_ALREADY_REPORTED** = **208** --- HTTP status code ``208 "
"Already Reported`` (WebDAV). Used inside a DAV: propstat response element"
" to avoid enumerating the internal members of multiple bindings to the "
"same collection repeatedly."
msgstr ""

#: ../../classes/class_httpclient.rst:115
msgid ""
"**RESPONSE_IM_USED** = **226** --- HTTP status code ``226 IM Used`` "
"(WebDAV). The server has fulfilled a GET request for the resource, and "
"the response is a representation of the result of one or more instance-"
"manipulations applied to the current instance."
msgstr ""

#: ../../classes/class_httpclient.rst:116
msgid ""
"**RESPONSE_MULTIPLE_CHOICES** = **300** --- HTTP status code ``300 "
"Multiple Choice``. The request has more than one possible responses and "
"there is no standardized way to choose one of the responses. User-agent "
"or user should choose one of them."
msgstr ""

#: ../../classes/class_httpclient.rst:117
msgid ""
"**RESPONSE_MOVED_PERMANENTLY** = **301** --- HTTP status code ``301 Moved"
" Permanently``. Redirection. This response code means the URI of "
"requested resource has been changed. The new URI is usually included in "
"the response."
msgstr ""

#: ../../classes/class_httpclient.rst:118
msgid ""
"**RESPONSE_FOUND** = **302** --- HTTP status code ``302 Found``. "
"Temporary redirection. This response code means the URI of requested "
"resource has been changed temporarily. New changes in the URI might be "
"made in the future. Therefore, this same URI should be used by the client"
" in future requests."
msgstr ""

#: ../../classes/class_httpclient.rst:119
msgid ""
"**RESPONSE_SEE_OTHER** = **303** --- HTTP status code ``303 See Other``. "
"The server is redirecting the user agent to a different resource, as "
"indicated by a URI in the Location header field, which is intended to "
"provide an indirect response to the original request."
msgstr ""

#: ../../classes/class_httpclient.rst:120
msgid ""
"**RESPONSE_NOT_MODIFIED** = **304** --- HTTP status code ``304 Not "
"Modified``. A conditional GET or HEAD request has been received and would"
" have resulted in a 200 OK response if it were not for the fact that the "
"condition evaluated to false."
msgstr ""

#: ../../classes/class_httpclient.rst:121
msgid ""
"**RESPONSE_USE_PROXY** = **305** --- HTTP status code ``305 Use Proxy``. "
"Deprecated. Do not use."
msgstr ""

#: ../../classes/class_httpclient.rst:122
msgid ""
"**RESPONSE_SWITCH_PROXY** = **306** --- HTTP status code ``306 Switch "
"Proxy``. Deprecated. Do not use."
msgstr ""

#: ../../classes/class_httpclient.rst:123
msgid ""
"**RESPONSE_TEMPORARY_REDIRECT** = **307** --- HTTP status code ``307 "
"Temporary Redirect``. The target resource resides temporarily under a "
"different URI and the user agent MUST NOT change the request method if it"
" performs an automatic redirection to that URI."
msgstr ""

#: ../../classes/class_httpclient.rst:124
msgid ""
"**RESPONSE_PERMANENT_REDIRECT** = **308** --- HTTP status code ``308 "
"Permanent Redirect``. The target resource has been assigned a new "
"permanent URI and any future references to this resource ought to use one"
" of the enclosed URIs."
msgstr ""

#: ../../classes/class_httpclient.rst:125
msgid ""
"**RESPONSE_BAD_REQUEST** = **400** --- HTTP status code ``400 Bad "
"Request``. The request was invalid. The server cannot or will not process"
" the request due to something that is perceived to be a client error "
"(e.g., malformed request syntax, invalid request message framing, invalid"
" request contents, or deceptive request routing)."
msgstr ""

#: ../../classes/class_httpclient.rst:126
msgid ""
"**RESPONSE_UNAUTHORIZED** = **401** --- HTTP status code ``401 "
"Unauthorized``. Credentials required. The request has not been applied "
"because it lacks valid authentication credentials for the target "
"resource."
msgstr ""

#: ../../classes/class_httpclient.rst:127
msgid ""
"**RESPONSE_PAYMENT_REQUIRED** = **402** --- HTTP status code ``402 "
"Payment Required``. This response code is reserved for future use. "
"Initial aim for creating this code was using it for digital payment "
"systems, however this is not currently used."
msgstr ""

#: ../../classes/class_httpclient.rst:128
msgid ""
"**RESPONSE_FORBIDDEN** = **403** --- HTTP status code ``403 Forbidden``. "
"The client does not have access rights to the content, i.e. they are "
"unauthorized, so server is rejecting to give proper response. Unlike "
"``401``, the client's identity is known to the server."
msgstr ""

#: ../../classes/class_httpclient.rst:129
msgid ""
"**RESPONSE_NOT_FOUND** = **404** --- HTTP status code ``404 Not Found``. "
"The server can not find requested resource. Either the URL is not "
"recognized or the endpoint is valid but the resource itself does not "
"exist. May also be sent instead of 403 to hide existence of a resource if"
" the client is not authorized."
msgstr ""

#: ../../classes/class_httpclient.rst:130
msgid ""
"**RESPONSE_METHOD_NOT_ALLOWED** = **405** --- HTTP status code ``405 "
"Method Not Allowed``. The request's HTTP method is known by the server "
"but has been disabled and cannot be used. For example, an API may forbid "
"DELETE-ing a resource. The two mandatory methods, GET and HEAD, must "
"never be disabled and should not return this error code."
msgstr ""

#: ../../classes/class_httpclient.rst:131
msgid ""
"**RESPONSE_NOT_ACCEPTABLE** = **406** --- HTTP status code ``406 Not "
"Acceptable``. The target resource does not have a current representation "
"that would be acceptable to the user agent, according to the proactive "
"negotiation header fields received in the request. Used when negotiation "
"content."
msgstr ""

#: ../../classes/class_httpclient.rst:132
msgid ""
"**RESPONSE_PROXY_AUTHENTICATION_REQUIRED** = **407** --- HTTP status code"
" ``407 Proxy Authentication Required``. Similar to 401 Unauthorized, but "
"it indicates that the client needs to authenticate itself in order to use"
" a proxy."
msgstr ""

#: ../../classes/class_httpclient.rst:133
msgid ""
"**RESPONSE_REQUEST_TIMEOUT** = **408** --- HTTP status code ``408 Request"
" Timeout``. The server did not receive a complete request message within "
"the time that it was prepared to wait."
msgstr ""

#: ../../classes/class_httpclient.rst:134
msgid ""
"**RESPONSE_CONFLICT** = **409** --- HTTP status code ``409 Conflict``. "
"The request could not be completed due to a conflict with the current "
"state of the target resource. This code is used in situations where the "
"user might be able to resolve the conflict and resubmit the request."
msgstr ""

#: ../../classes/class_httpclient.rst:135
msgid ""
"**RESPONSE_GONE** = **410** --- HTTP status code ``410 Gone``. The target"
" resource is no longer available at the origin server and this condition "
"is likely permanent."
msgstr ""

#: ../../classes/class_httpclient.rst:136
msgid ""
"**RESPONSE_LENGTH_REQUIRED** = **411** --- HTTP status code ``411 Length "
"Required``. The server refuses to accept the request without a defined "
"Content-Length header."
msgstr ""

#: ../../classes/class_httpclient.rst:137
msgid ""
"**RESPONSE_PRECONDITION_FAILED** = **412** --- HTTP status code ``412 "
"Precondition Failed``. One or more conditions given in the request header"
" fields evaluated to false when tested on the server."
msgstr ""

#: ../../classes/class_httpclient.rst:138
msgid ""
"**RESPONSE_REQUEST_ENTITY_TOO_LARGE** = **413** --- HTTP status code "
"``413 Entity Too Large``. The server is refusing to process a request "
"because the request payload is larger than the server is willing or able "
"to process."
msgstr ""

#: ../../classes/class_httpclient.rst:139
msgid ""
"**RESPONSE_REQUEST_URI_TOO_LONG** = **414** --- HTTP status code ``414 "
"Request-URI Too Long``. The server is refusing to service the request "
"because the request-target is longer than the server is willing to "
"interpret."
msgstr ""

#: ../../classes/class_httpclient.rst:140
msgid ""
"**RESPONSE_UNSUPPORTED_MEDIA_TYPE** = **415** --- HTTP status code ``415 "
"Unsupported Media Type``. The origin server is refusing to service the "
"request because the payload is in a format not supported by this method "
"on the target resource."
msgstr ""

#: ../../classes/class_httpclient.rst:141
msgid ""
"**RESPONSE_REQUESTED_RANGE_NOT_SATISFIABLE** = **416** --- HTTP status "
"code ``416 Requested Range Not Satisfiable``. None of the ranges in the "
"request's Range header field overlap the current extent of the selected "
"resource or the set of ranges requested has been rejected due to invalid "
"ranges or an excessive request of small or overlapping ranges."
msgstr ""

#: ../../classes/class_httpclient.rst:142
msgid ""
"**RESPONSE_EXPECTATION_FAILED** = **417** --- HTTP status code ``417 "
"Expectation Failed``. The expectation given in the request's Expect "
"header field could not be met by at least one of the inbound servers."
msgstr ""

#: ../../classes/class_httpclient.rst:143
msgid ""
"**RESPONSE_IM_A_TEAPOT** = **418** --- HTTP status code ``418 I'm A "
"Teapot``. Any attempt to brew coffee with a teapot should result in the "
"error code \"418 I'm a teapot\". The resulting entity body MAY be short "
"and stout."
msgstr ""

#: ../../classes/class_httpclient.rst:144
msgid ""
"**RESPONSE_MISDIRECTED_REQUEST** = **421** --- HTTP status code ``421 "
"Misdirected Request``. The request was directed at a server that is not "
"able to produce a response. This can be sent by a server that is not "
"configured to produce responses for the combination of scheme and "
"authority that are included in the request URI."
msgstr ""

#: ../../classes/class_httpclient.rst:145
msgid ""
"**RESPONSE_UNPROCESSABLE_ENTITY** = **422** --- HTTP status code ``422 "
"Unprocessable Entity`` (WebDAV). The server understands the content type "
"of the request entity (hence a 415 Unsupported Media Type status code is "
"inappropriate), and the syntax of the request entity is correct (thus a "
"400 Bad Request status code is inappropriate) but was unable to process "
"the contained instructions."
msgstr ""

#: ../../classes/class_httpclient.rst:146
msgid ""
"**RESPONSE_LOCKED** = **423** --- HTTP status code ``423 Locked`` "
"(WebDAV). The source or destination resource of a method is locked."
msgstr ""

#: ../../classes/class_httpclient.rst:147
msgid ""
"**RESPONSE_FAILED_DEPENDENCY** = **424** --- HTTP status code ``424 "
"Failed Dependency`` (WebDAV). The method could not be performed on the "
"resource because the requested action depended on another action and that"
" action failed."
msgstr ""

#: ../../classes/class_httpclient.rst:148
msgid ""
"**RESPONSE_UPGRADE_REQUIRED** = **426** --- HTTP status code ``426 "
"Upgrade Required``. The server refuses to perform the request using the "
"current protocol but might be willing to do so after the client upgrades "
"to a different protocol."
msgstr ""

#: ../../classes/class_httpclient.rst:149
msgid ""
"**RESPONSE_PRECONDITION_REQUIRED** = **428** --- HTTP status code ``428 "
"Precondition Required``. The origin server requires the request to be "
"conditional."
msgstr ""

#: ../../classes/class_httpclient.rst:150
msgid ""
"**RESPONSE_TOO_MANY_REQUESTS** = **429** --- HTTP status code ``429 Too "
"Many Requests``. The user has sent too many requests in a given amount of"
" time (see \"rate limiting\"). Back off and increase time between "
"requests or try again later."
msgstr ""

#: ../../classes/class_httpclient.rst:151
msgid ""
"**RESPONSE_REQUEST_HEADER_FIELDS_TOO_LARGE** = **431** --- HTTP status "
"code ``431 Rquest Header Fields Too Large``. The server is unwilling to "
"process the request because its header fields are too large. The request "
"MAY be resubmitted after reducing the size of the request header fields."
msgstr ""

#: ../../classes/class_httpclient.rst:152
msgid ""
"**RESPONSE_UNAVAILABLE_FOR_LEGAL_REASONS** = **451** --- HTTP status code"
" ``451 Response Unavailable For Legal Reasons``. The server is denying "
"access to the resource as a consequence of a legal demand."
msgstr ""

#: ../../classes/class_httpclient.rst:153
msgid ""
"**RESPONSE_INTERNAL_SERVER_ERROR** = **500** --- HTTP status code ``500 "
"Internal Server Error``. The server encountered an unexpected condition "
"that prevented it from fulfilling the request."
msgstr ""

#: ../../classes/class_httpclient.rst:154
msgid ""
"**RESPONSE_NOT_IMPLEMENTED** = **501** --- HTTP status code ``501 Not "
"Implemented``. The server does not support the functionality required to "
"fulfill the request."
msgstr ""

#: ../../classes/class_httpclient.rst:155
msgid ""
"**RESPONSE_BAD_GATEWAY** = **502** --- HTTP status code ``502 Bad "
"Gateway``. The server, while acting as a gateway or proxy, received an "
"invalid response from an inbound server it accessed while attempting to "
"fulfill the request. Usually returned by load balancers or proxies."
msgstr ""

#: ../../classes/class_httpclient.rst:156
msgid ""
"**RESPONSE_SERVICE_UNAVAILABLE** = **503** --- HTTP status code ``503 "
"Service Unavailable``. The server is currently unable to handle the "
"request due to a temporary overload or scheduled maintenance, which will "
"likely be alleviated after some delay. Try again later."
msgstr ""

#: ../../classes/class_httpclient.rst:157
msgid ""
"**RESPONSE_GATEWAY_TIMEOUT** = **504** --- HTTP status code ``504 Gateway"
" Timeout``. The server, while acting as a gateway or proxy, did not "
"receive a timely response from an upstream server it needed to access in "
"order to complete the request. Usually returned by load balancers or "
"proxies."
msgstr ""

#: ../../classes/class_httpclient.rst:158
msgid ""
"**RESPONSE_HTTP_VERSION_NOT_SUPPORTED** = **505** --- HTTP status code "
"``505 HTTP Version Not Supported``. The server does not support, or "
"refuses to support, the major version of HTTP that was used in the "
"request message."
msgstr ""

#: ../../classes/class_httpclient.rst:159
msgid ""
"**RESPONSE_VARIANT_ALSO_NEGOTIATES** = **506** --- HTTP status code ``506"
" Variant Also Negotiates``. The server has an internal configuration "
"error: the chosen variant resource is configured to engage in transparent"
" content negotiation itself, and is therefore not a proper end point in "
"the negotiation process."
msgstr ""

#: ../../classes/class_httpclient.rst:160
msgid ""
"**RESPONSE_INSUFFICIENT_STORAGE** = **507** --- HTTP status code ``507 "
"Insufficient Storage``. The method could not be performed on the resource"
" because the server is unable to store the representation needed to "
"successfully complete the request."
msgstr ""

#: ../../classes/class_httpclient.rst:161
msgid ""
"**RESPONSE_LOOP_DETECTED** = **508** --- HTTP status code ``508 Loop "
"Detected``. The server terminated an operation because it encountered an "
"infinite loop while processing a request with \"Depth: infinity\". This "
"status indicates that the entire operation failed."
msgstr ""

#: ../../classes/class_httpclient.rst:162
msgid ""
"**RESPONSE_NOT_EXTENDED** = **510** --- HTTP status code ``510 Not "
"Extended``. The policy for accessing the resource has not been met in the"
" request. The server should send back all the information necessary for "
"the client to issue an extended request."
msgstr ""

#: ../../classes/class_httpclient.rst:163
msgid ""
"**RESPONSE_NETWORK_AUTH_REQUIRED** = **511** --- HTTP status code ``511 "
"Network Authentication Required``. The client needs to authenticate to "
"gain network access."
msgstr ""

#: ../../classes/class_httpclient.rst:167
msgid "Description"
msgstr ""

#: ../../classes/class_httpclient.rst:169
msgid ""
"Hyper-text transfer protocol client (sometimes called \"User Agent\"). "
"Used to make HTTP requests to download web content, upload files and "
"other data or to communicate with various services, among other use "
"cases."
msgstr ""

#: ../../classes/class_httpclient.rst:171
msgid ""
"Note that this client only needs to connect to a host once (see "
":ref:`connect_to_host<class_HTTPClient_connect_to_host>`) to send "
"multiple requests. Because of this, methods that take URLs usually take "
"just the part after the host instead of the full URL, as the client is "
"already connected to a host. See :ref:`request<class_HTTPClient_request>`"
" for a full example and to get started."
msgstr ""

#: ../../classes/class_httpclient.rst:173
msgid ""
"A ``HTTPClient`` should be reused between multiple requests or to connect"
" to different hosts instead of creating one client per request. Supports "
"SSL and SSL server certificate verification. HTTP status codes in the 2xx"
" range indicate success, 3xx redirection (i.e. \"try again, but over "
"here\"), 4xx something was wrong with the request, and 5xx something went"
" wrong on the server's side."
msgstr ""

#: ../../classes/class_httpclient.rst:175
msgid ""
"For more information on HTTP, see https://developer.mozilla.org/en-"
"US/docs/Web/HTTP (or read RFC 2616 to get it straight from the source: "
"https://tools.ietf.org/html/rfc2616)."
msgstr ""

#: ../../classes/class_httpclient.rst:178
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_httpclient.rst:182
msgid "void **close** **(** **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:184
msgid "Closes the current connection, allowing reuse of this ``HTTPClient``."
msgstr ""

#: ../../classes/class_httpclient.rst:188
msgid ""
":ref:`int<class_int>` **connect_to_host** **(** "
":ref:`String<class_string>` host, :ref:`int<class_int>` port=-1, "
":ref:`bool<class_bool>` use_ssl=false, :ref:`bool<class_bool>` "
"verify_host=true **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:190
msgid "Connect to a host. This needs to be done before any requests are sent."
msgstr ""

#: ../../classes/class_httpclient.rst:192
msgid ""
"The host should not have http:// prepended but will strip the protocol "
"identifier if provided."
msgstr ""

#: ../../classes/class_httpclient.rst:194
msgid ""
"If no ``port`` is specified (or ``-1`` is used), it is automatically set "
"to 80 for HTTP and 443 for HTTPS (if ``use_ssl`` is enabled)."
msgstr ""

#: ../../classes/class_httpclient.rst:196
msgid ""
"``verify_host`` will check the SSL identity of the host if set to "
"``true``."
msgstr ""

#: ../../classes/class_httpclient.rst:200
msgid ":ref:`int<class_int>` **get_response_body_length** **(** **)** const"
msgstr ""

#: ../../classes/class_httpclient.rst:202
msgid "Returns the response's body length."
msgstr ""

#: ../../classes/class_httpclient.rst:206
msgid ":ref:`int<class_int>` **get_response_code** **(** **)** const"
msgstr ""

#: ../../classes/class_httpclient.rst:208
msgid "Returns the response's HTTP status code."
msgstr ""

#: ../../classes/class_httpclient.rst:212
msgid ""
":ref:`PoolStringArray<class_poolstringarray>` **get_response_headers** "
"**(** **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:214
msgid "Returns the response headers."
msgstr ""

#: ../../classes/class_httpclient.rst:218
msgid ""
":ref:`Dictionary<class_dictionary>` "
"**get_response_headers_as_dictionary** **(** **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:220
msgid ""
"Returns all response headers as dictionary where the case-sensitivity of "
"the keys and values is kept like the server delivers it. A value is a "
"simple String, this string can have more than one value where \"; \" is "
"used as separator."
msgstr ""

#: ../../classes/class_httpclient.rst:222
msgid "Structure: (\"key\":\"value1; value2\")"
msgstr ""

#: ../../classes/class_httpclient.rst:224
msgid ""
"Example: (content-length:12), (Content-Type:application/json; "
"charset=UTF-8)"
msgstr ""

#: ../../classes/class_httpclient.rst:228
msgid ":ref:`int<class_int>` **get_status** **(** **)** const"
msgstr ""

#: ../../classes/class_httpclient.rst:230
msgid ""
"Returns a STATUS\\_\\* enum constant. Need to call "
":ref:`poll<class_HTTPClient_poll>` in order to get status updates."
msgstr ""

#: ../../classes/class_httpclient.rst:234
msgid ":ref:`bool<class_bool>` **has_response** **(** **)** const"
msgstr ""

#: ../../classes/class_httpclient.rst:236
msgid "If ``true`` this ``HTTPClient`` has a response available."
msgstr ""

#: ../../classes/class_httpclient.rst:240
msgid ":ref:`bool<class_bool>` **is_response_chunked** **(** **)** const"
msgstr ""

#: ../../classes/class_httpclient.rst:242
msgid "If ``true`` this ``HTTPClient`` has a response that is chunked."
msgstr ""

#: ../../classes/class_httpclient.rst:246
msgid ":ref:`int<class_int>` **poll** **(** **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:248
msgid ""
"This needs to be called in order to have any request processed. Check "
"results with :ref:`get_status<class_HTTPClient_get_status>`"
msgstr ""

#: ../../classes/class_httpclient.rst:252
msgid ""
":ref:`String<class_string>` **query_string_from_dict** **(** "
":ref:`Dictionary<class_dictionary>` fields **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:254
msgid ""
"Generates a GET/POST application/x-www-form-urlencoded style query string"
" from a provided dictionary, e.g.:"
msgstr ""

#: ../../classes/class_httpclient.rst:264
msgid ""
":ref:`PoolByteArray<class_poolbytearray>` **read_response_body_chunk** "
"**(** **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:266
msgid "Reads one chunk from the response."
msgstr ""

#: ../../classes/class_httpclient.rst:270
msgid ""
":ref:`int<class_int>` **request** **(** :ref:`int<class_int>` method, "
":ref:`String<class_string>` url, "
":ref:`PoolStringArray<class_poolstringarray>` headers, "
":ref:`String<class_string>` body=\"\" **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:272
msgid ""
"Sends a request to the connected host. The URL parameter is just the part"
" after the host, so for ``http://somehost.com/index.php``, it is "
"``index.php``."
msgstr ""

#: ../../classes/class_httpclient.rst:274
#: ../../classes/class_httpclient.rst:291
msgid ""
"Headers are HTTP request headers. For available HTTP methods, see "
"``METHOD_*``."
msgstr ""

#: ../../classes/class_httpclient.rst:276
msgid "To create a POST request with query strings to push to the server, do:"
msgstr ""

#: ../../classes/class_httpclient.rst:287
msgid ""
":ref:`int<class_int>` **request_raw** **(** :ref:`int<class_int>` method,"
" :ref:`String<class_string>` url, "
":ref:`PoolStringArray<class_poolstringarray>` headers, "
":ref:`PoolByteArray<class_poolbytearray>` body **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:289
msgid ""
"Sends a raw request to the connected host. The URL parameter is just the "
"part after the host, so for ``http://somehost.com/index.php``, it is "
"``index.php``."
msgstr ""

#: ../../classes/class_httpclient.rst:293
msgid ""
"Sends the body data raw, as a byte array and does not encode it in any "
"way."
msgstr ""

#: ../../classes/class_httpclient.rst:297
msgid "void **set_read_chunk_size** **(** :ref:`int<class_int>` bytes **)**"
msgstr ""

#: ../../classes/class_httpclient.rst:299
msgid ""
"Sets the size of the buffer used and maximum bytes to read per iteration."
" see "
":ref:`read_response_body_chunk<class_HTTPClient_read_response_body_chunk>`"
msgstr ""

