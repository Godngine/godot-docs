# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_color.rst:8
msgid "Color"
msgstr ""

#: ../../classes/class_color.rst:10
msgid "**Category:** Built-In Types"
msgstr ""

#: ../../classes/class_color.rst:13
msgid "Brief Description"
msgstr ""

#: ../../classes/class_color.rst:15
msgid "Color in RGBA format with some support for ARGB format."
msgstr ""

#: ../../classes/class_color.rst:18
msgid "Member Functions"
msgstr ""

#: ../../classes/class_color.rst:21 ../../classes/class_color.rst:23
#: ../../classes/class_color.rst:25 ../../classes/class_color.rst:27
#: ../../classes/class_color.rst:29 ../../classes/class_color.rst:31
#: ../../classes/class_color.rst:33 ../../classes/class_color.rst:37
#: ../../classes/class_color.rst:39 ../../classes/class_color.rst:41
msgid ":ref:`Color<class_color>`"
msgstr ""

#: ../../classes/class_color.rst:21
msgid ""
":ref:`Color<class_Color_Color>` **(** :ref:`float<class_float>` r, "
":ref:`float<class_float>` g, :ref:`float<class_float>` b, "
":ref:`float<class_float>` a **)**"
msgstr ""

#: ../../classes/class_color.rst:23
msgid ""
":ref:`Color<class_Color_Color>` **(** :ref:`float<class_float>` r, "
":ref:`float<class_float>` g, :ref:`float<class_float>` b **)**"
msgstr ""

#: ../../classes/class_color.rst:25
msgid ":ref:`Color<class_Color_Color>` **(** :ref:`int<class_int>` from **)**"
msgstr ""

#: ../../classes/class_color.rst:27
msgid ""
":ref:`Color<class_Color_Color>` **(** :ref:`String<class_string>` from "
"**)**"
msgstr ""

#: ../../classes/class_color.rst:29
msgid ":ref:`blend<class_Color_blend>` **(** :ref:`Color<class_color>` over **)**"
msgstr ""

#: ../../classes/class_color.rst:31
msgid ":ref:`contrasted<class_Color_contrasted>` **(** **)**"
msgstr ""

#: ../../classes/class_color.rst:33
msgid ""
":ref:`darkened<class_Color_darkened>` **(** :ref:`float<class_float>` "
"amount **)**"
msgstr ""

#: ../../classes/class_color.rst:35
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../../classes/class_color.rst:35
msgid ":ref:`gray<class_Color_gray>` **(** **)**"
msgstr ""

#: ../../classes/class_color.rst:37
msgid ":ref:`inverted<class_Color_inverted>` **(** **)**"
msgstr ""

#: ../../classes/class_color.rst:39
msgid ""
":ref:`lightened<class_Color_lightened>` **(** :ref:`float<class_float>` "
"amount **)**"
msgstr ""

#: ../../classes/class_color.rst:41
msgid ""
":ref:`linear_interpolate<class_Color_linear_interpolate>` **(** "
":ref:`Color<class_color>` b, :ref:`float<class_float>` t **)**"
msgstr ""

#: ../../classes/class_color.rst:43 ../../classes/class_color.rst:47
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_color.rst:43
msgid ":ref:`to_argb32<class_Color_to_argb32>` **(** **)**"
msgstr ""

#: ../../classes/class_color.rst:45
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_color.rst:45
msgid ""
":ref:`to_html<class_Color_to_html>` **(** :ref:`bool<class_bool>` "
"with_alpha=True **)**"
msgstr ""

#: ../../classes/class_color.rst:47
msgid ":ref:`to_rgba32<class_Color_to_rgba32>` **(** **)**"
msgstr ""

#: ../../classes/class_color.rst:51
msgid "Member Variables"
msgstr ""

#: ../../classes/class_color.rst:55
msgid ":ref:`float<class_float>` **a** - Alpha (0 to 1)"
msgstr ""

#: ../../classes/class_color.rst:59
msgid ":ref:`int<class_int>` **a8** - Alpha (0 to 255)"
msgstr ""

#: ../../classes/class_color.rst:63
msgid ":ref:`float<class_float>` **b** - Blue (0 to 1)"
msgstr ""

#: ../../classes/class_color.rst:67
msgid ":ref:`int<class_int>` **b8** - Blue (0 to 255)"
msgstr ""

#: ../../classes/class_color.rst:71
msgid ":ref:`float<class_float>` **g** - Green (0 to 1)"
msgstr ""

#: ../../classes/class_color.rst:75
msgid ":ref:`int<class_int>` **g8** - Green (0 to 255)"
msgstr ""

#: ../../classes/class_color.rst:79
msgid ":ref:`float<class_float>` **h** - Hue (0 to 1)"
msgstr ""

#: ../../classes/class_color.rst:83
msgid ":ref:`float<class_float>` **r** - Red (0 to 1)"
msgstr ""

#: ../../classes/class_color.rst:87
msgid ":ref:`int<class_int>` **r8** - Red (0 to 255)"
msgstr ""

#: ../../classes/class_color.rst:91
msgid ":ref:`float<class_float>` **s** - Saturation (0 to 1)"
msgstr ""

#: ../../classes/class_color.rst:95
msgid ":ref:`float<class_float>` **v** - Value (0 to 1)"
msgstr ""

#: ../../classes/class_color.rst:99
msgid "Description"
msgstr ""

#: ../../classes/class_color.rst:101
msgid ""
"A color is represented as red, green and blue (r,g,b) components. "
"Additionally, \"a\" represents the alpha component, often used for "
"transparency. Values are in floating point and usually range from 0 to 1."
"  Some methods (such as set_modulate(color)) may accept values > 1."
msgstr ""

#: ../../classes/class_color.rst:103
msgid ""
"You can also create a color from standardised color names with "
":ref:`@GDScript.ColorN<class_@GDScript_ColorN>`."
msgstr ""

#: ../../classes/class_color.rst:106
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_color.rst:110
msgid ""
":ref:`Color<class_color>` **Color** **(** :ref:`float<class_float>` r, "
":ref:`float<class_float>` g, :ref:`float<class_float>` b, "
":ref:`float<class_float>` a **)**"
msgstr ""

#: ../../classes/class_color.rst:112
msgid ""
"Constructs a color from an RGBA profile using values between 0 and 1 "
"(float)."
msgstr ""

#: ../../classes/class_color.rst:120
msgid ""
":ref:`Color<class_color>` **Color** **(** :ref:`float<class_float>` r, "
":ref:`float<class_float>` g, :ref:`float<class_float>` b **)**"
msgstr ""

#: ../../classes/class_color.rst:122
msgid ""
"Constructs a color from an RGB profile using values between 0 and 1 "
"(float). Alpha will always be 1."
msgstr ""

#: ../../classes/class_color.rst:130
msgid ":ref:`Color<class_color>` **Color** **(** :ref:`int<class_int>` from **)**"
msgstr ""

#: ../../classes/class_color.rst:132
msgid ""
"Constructs a color from a 32-bit integer (each byte represents a "
"component of the RGBA profile)."
msgstr ""

#: ../../classes/class_color.rst:140
msgid ""
":ref:`Color<class_color>` **Color** **(** :ref:`String<class_string>` "
"from **)**"
msgstr ""

#: ../../classes/class_color.rst:142
msgid ""
"Constructs a color from an HTML hexadecimal color string in ARGB or RGB "
"format. See also :ref:`@GDScript.ColorN<class_@GDScript_ColorN>`."
msgstr ""

#: ../../classes/class_color.rst:144
msgid "The following string formats are supported:"
msgstr ""

#: ../../classes/class_color.rst:146
msgid "``\"#ff00ff00\"`` - ARGB format with '#'"
msgstr ""

#: ../../classes/class_color.rst:148
msgid "``\"ff00ff00\"`` - ARGB format"
msgstr ""

#: ../../classes/class_color.rst:150
msgid "``\"#ff00ff\"`` - RGB format with '#'"
msgstr ""

#: ../../classes/class_color.rst:152
msgid "``\"ff00ff\"`` - RGB format"
msgstr ""

#: ../../classes/class_color.rst:164
msgid ""
":ref:`Color<class_color>` **blend** **(** :ref:`Color<class_color>` over "
"**)**"
msgstr ""

#: ../../classes/class_color.rst:166
msgid ""
"Returns a new color resulting from blending this color over another "
"color. If the color is opaque, the result would also be opaque. The other"
" color could then take a range of values with different alpha values."
msgstr ""

#: ../../classes/class_color.rst:176
msgid ":ref:`Color<class_color>` **contrasted** **(** **)**"
msgstr ""

#: ../../classes/class_color.rst:178
msgid "Returns the most contrasting color."
msgstr ""

#: ../../classes/class_color.rst:187
msgid ""
":ref:`Color<class_color>` **darkened** **(** :ref:`float<class_float>` "
"amount **)**"
msgstr ""

#: ../../classes/class_color.rst:189
msgid ""
"Returns a new color resulting from making this color darker by the "
"specified percentage (0-1)."
msgstr ""

#: ../../classes/class_color.rst:198
msgid ":ref:`float<class_float>` **gray** **(** **)**"
msgstr ""

#: ../../classes/class_color.rst:200
msgid "Returns the color's grayscale."
msgstr ""

#: ../../classes/class_color.rst:202
msgid "The gray is calculated by (r + g + b) / 3."
msgstr ""

#: ../../classes/class_color.rst:211
msgid ":ref:`Color<class_color>` **inverted** **(** **)**"
msgstr ""

#: ../../classes/class_color.rst:213
msgid "Returns the inverted color (1-r, 1-g, 1-b, 1-a)."
msgstr ""

#: ../../classes/class_color.rst:222
msgid ""
":ref:`Color<class_color>` **lightened** **(** :ref:`float<class_float>` "
"amount **)**"
msgstr ""

#: ../../classes/class_color.rst:224
msgid ""
"Returns a new color resulting from making this color lighter by the "
"specified percentage (0-1)."
msgstr ""

#: ../../classes/class_color.rst:233
msgid ""
":ref:`Color<class_color>` **linear_interpolate** **(** "
":ref:`Color<class_color>` b, :ref:`float<class_float>` t **)**"
msgstr ""

#: ../../classes/class_color.rst:235
msgid ""
"Returns the color of the linear interpolation with another color. The "
"value t is between 0 and 1 (float)."
msgstr ""

#: ../../classes/class_color.rst:245
msgid ":ref:`int<class_int>` **to_argb32** **(** **)**"
msgstr ""

#: ../../classes/class_color.rst:247
msgid ""
"Returns the color's 32-bit integer in ARGB format (each byte represents a"
" component of the ARGB profile). More compatible with DirectX."
msgstr ""

#: ../../classes/class_color.rst:256
msgid ""
":ref:`String<class_string>` **to_html** **(** :ref:`bool<class_bool>` "
"with_alpha=True **)**"
msgstr ""

#: ../../classes/class_color.rst:258
msgid ""
"Returns the color's HTML hexadecimal color string in ARGB format (ex: "
"``ff34f822``)."
msgstr ""

#: ../../classes/class_color.rst:260
msgid "Optionally flag 'false' to not include alpha in hexadecimal string."
msgstr ""

#: ../../classes/class_color.rst:270
msgid ":ref:`int<class_int>` **to_rgba32** **(** **)**"
msgstr ""

#: ../../classes/class_color.rst:272
msgid ""
"Returns the color's 32-bit integer in ARGB format (each byte represents a"
" component of the ARGB profile)."
msgstr ""

#: ../../classes/class_color.rst:279
msgid ""
"*This is same as :ref:`to_argb32<class_Color_to_argb32>` but may be "
"changed later to support RGBA format instead*."
msgstr ""

