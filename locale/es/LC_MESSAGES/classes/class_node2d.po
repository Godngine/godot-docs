# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_node2d.rst:8
msgid "Node2D"
msgstr ""

#: ../../classes/class_node2d.rst:10
msgid ""
"**Inherits:** :ref:`CanvasItem<class_canvasitem>` **<** "
":ref:`Node<class_node>` **<** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_node2d.rst:12
msgid ""
"**Inherited By:** :ref:`RemoteTransform2D<class_remotetransform2d>`, "
":ref:`Joint2D<class_joint2d>`, "
":ref:`VisibilityNotifier2D<class_visibilitynotifier2d>`, "
":ref:`Navigation2D<class_navigation2d>`, "
":ref:`CollisionPolygon2D<class_collisionpolygon2d>`, "
":ref:`TouchScreenButton<class_touchscreenbutton>`, "
":ref:`Particles2D<class_particles2d>`, "
":ref:`AnimatedSprite<class_animatedsprite>`, "
":ref:`RayCast2D<class_raycast2d>`, :ref:`Light2D<class_light2d>`, "
":ref:`Path2D<class_path2d>`, :ref:`Line2D<class_line2d>`, "
":ref:`AudioStreamPlayer2D<class_audiostreamplayer2d>`, "
":ref:`CanvasModulate<class_canvasmodulate>`, :ref:`Sprite<class_sprite>`,"
" :ref:`CollisionShape2D<class_collisionshape2d>`, "
":ref:`NavigationPolygonInstance<class_navigationpolygoninstance>`, "
":ref:`PathFollow2D<class_pathfollow2d>`, "
":ref:`ParallaxLayer<class_parallaxlayer>`, "
":ref:`Polygon2D<class_polygon2d>`, :ref:`Position2D<class_position2d>`, "
":ref:`LightOccluder2D<class_lightoccluder2d>`, "
":ref:`CollisionObject2D<class_collisionobject2d>`, "
":ref:`BackBufferCopy<class_backbuffercopy>`, :ref:`YSort<class_ysort>`, "
":ref:`TileMap<class_tilemap>`, :ref:`Camera2D<class_camera2d>`"
msgstr ""

#: ../../classes/class_node2d.rst:14
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_node2d.rst:17
msgid "Brief Description"
msgstr ""

#: ../../classes/class_node2d.rst:19
msgid ""
"A 2D game object, parent of all 2D related nodes. Has a position, "
"rotation, scale and Z-index."
msgstr ""

#: ../../classes/class_node2d.rst:22
msgid "Member Functions"
msgstr ""

#: ../../classes/class_node2d.rst:25 ../../classes/class_node2d.rst:31
#: ../../classes/class_node2d.rst:33 ../../classes/class_node2d.rst:35
#: ../../classes/class_node2d.rst:37 ../../classes/class_node2d.rst:39
#: ../../classes/class_node2d.rst:45
msgid "void"
msgstr ""

#: ../../classes/class_node2d.rst:25
msgid ""
":ref:`apply_scale<class_Node2D_apply_scale>` **(** "
":ref:`Vector2<class_vector2>` ratio **)**"
msgstr ""

#: ../../classes/class_node2d.rst:27
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../../classes/class_node2d.rst:27
msgid ""
":ref:`get_angle_to<class_Node2D_get_angle_to>` **(** "
":ref:`Vector2<class_vector2>` point **)** const"
msgstr ""

#: ../../classes/class_node2d.rst:29
msgid ":ref:`Transform2D<class_transform2d>`"
msgstr ""

#: ../../classes/class_node2d.rst:29
msgid ""
":ref:`get_relative_transform_to_parent<class_Node2D_get_relative_transform_to_parent>`"
" **(** :ref:`Node<class_node>` parent **)** const"
msgstr ""

#: ../../classes/class_node2d.rst:31
msgid ""
":ref:`global_translate<class_Node2D_global_translate>` **(** "
":ref:`Vector2<class_vector2>` offset **)**"
msgstr ""

#: ../../classes/class_node2d.rst:33
msgid ""
":ref:`look_at<class_Node2D_look_at>` **(** :ref:`Vector2<class_vector2>` "
"point **)**"
msgstr ""

#: ../../classes/class_node2d.rst:35
msgid ""
":ref:`move_local_x<class_Node2D_move_local_x>` **(** "
":ref:`float<class_float>` delta, :ref:`bool<class_bool>` scaled=false "
"**)**"
msgstr ""

#: ../../classes/class_node2d.rst:37
msgid ""
":ref:`move_local_y<class_Node2D_move_local_y>` **(** "
":ref:`float<class_float>` delta, :ref:`bool<class_bool>` scaled=false "
"**)**"
msgstr ""

#: ../../classes/class_node2d.rst:39
msgid ""
":ref:`rotate<class_Node2D_rotate>` **(** :ref:`float<class_float>` "
"radians **)**"
msgstr ""

#: ../../classes/class_node2d.rst:41 ../../classes/class_node2d.rst:43
msgid ":ref:`Vector2<class_vector2>`"
msgstr ""

#: ../../classes/class_node2d.rst:41
msgid ""
":ref:`to_global<class_Node2D_to_global>` **(** "
":ref:`Vector2<class_vector2>` local_point **)** const"
msgstr ""

#: ../../classes/class_node2d.rst:43
msgid ""
":ref:`to_local<class_Node2D_to_local>` **(** "
":ref:`Vector2<class_vector2>` global_point **)** const"
msgstr ""

#: ../../classes/class_node2d.rst:45
msgid ""
":ref:`translate<class_Node2D_translate>` **(** "
":ref:`Vector2<class_vector2>` offset **)**"
msgstr ""

#: ../../classes/class_node2d.rst:49
msgid "Member Variables"
msgstr ""

#: ../../classes/class_node2d.rst:53
msgid ":ref:`Vector2<class_vector2>` **global_position** - Global position."
msgstr ""

#: ../../classes/class_node2d.rst:57
msgid ""
":ref:`float<class_float>` **global_rotation** - Global rotation in "
"radians."
msgstr ""

#: ../../classes/class_node2d.rst:61
msgid ""
":ref:`float<class_float>` **global_rotation_degrees** - Global rotation "
"in degrees."
msgstr ""

#: ../../classes/class_node2d.rst:65
msgid ":ref:`Vector2<class_vector2>` **global_scale** - Global scale."
msgstr ""

#: ../../classes/class_node2d.rst:69
msgid ""
":ref:`Transform2D<class_transform2d>` **global_transform** - Global "
":ref:`Transform2D<class_transform2d>`."
msgstr ""

#: ../../classes/class_node2d.rst:73
msgid ""
":ref:`Vector2<class_vector2>` **position** - Position, relative to the "
"node's parent."
msgstr ""

#: ../../classes/class_node2d.rst:77
msgid ""
":ref:`float<class_float>` **rotation** - Rotation in radians, relative to"
" the node's parent."
msgstr ""

#: ../../classes/class_node2d.rst:81
msgid ""
":ref:`float<class_float>` **rotation_degrees** - Rotation in degrees, "
"relative to the node's parent."
msgstr ""

#: ../../classes/class_node2d.rst:85
msgid ""
":ref:`Vector2<class_vector2>` **scale** - The node's scale. Unscaled "
"value: ``(1, 1)``"
msgstr ""

#: ../../classes/class_node2d.rst:89
msgid ""
":ref:`Transform2D<class_transform2d>` **transform** - Local "
":ref:`Transform2D<class_transform2d>`."
msgstr ""

#: ../../classes/class_node2d.rst:93
msgid ""
":ref:`bool<class_bool>` **z_as_relative** - If ``true`` the node's "
"Z-index is relative to its parent's Z-index. If this node's Z-index is 2 "
"and its parent's effective Z-index is 3, then this node's effective "
"Z-index will be 2 + 3 = 5."
msgstr ""

#: ../../classes/class_node2d.rst:97
msgid ""
":ref:`int<class_int>` **z_index** - Z-index. Controls the order in which "
"the nodes render. A node with a higher Z-index will display in front of "
"others."
msgstr ""

#: ../../classes/class_node2d.rst:101
msgid "Description"
msgstr ""

#: ../../classes/class_node2d.rst:103
msgid ""
"A 2D game object, with a position, rotation and scale. All 2D physics "
"nodes and sprites inherit from Node2D. Use Node2D as a parent node to "
"move, scale and rotate children in a 2D project. Also gives control on "
"the node's render order."
msgstr ""

#: ../../classes/class_node2d.rst:106
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_node2d.rst:110
msgid "void **apply_scale** **(** :ref:`Vector2<class_vector2>` ratio **)**"
msgstr ""

#: ../../classes/class_node2d.rst:112
msgid "Multiplies the current scale by the 'ratio' vector."
msgstr ""

#: ../../classes/class_node2d.rst:116
msgid ""
":ref:`float<class_float>` **get_angle_to** **(** "
":ref:`Vector2<class_vector2>` point **)** const"
msgstr ""

#: ../../classes/class_node2d.rst:118
msgid "Returns the angle between the node and the 'point' in radians."
msgstr ""

#: ../../classes/class_node2d.rst:122
msgid ""
":ref:`Transform2D<class_transform2d>` "
"**get_relative_transform_to_parent** **(** :ref:`Node<class_node>` parent"
" **)** const"
msgstr ""

#: ../../classes/class_node2d.rst:124
msgid ""
"Returns the :ref:`Transform2D<class_transform2d>` relative to this node's"
" parent."
msgstr ""

#: ../../classes/class_node2d.rst:128
msgid "void **global_translate** **(** :ref:`Vector2<class_vector2>` offset **)**"
msgstr ""

#: ../../classes/class_node2d.rst:130
msgid "Adds the 'offset' vector to the node's global position."
msgstr ""

#: ../../classes/class_node2d.rst:134
msgid "void **look_at** **(** :ref:`Vector2<class_vector2>` point **)**"
msgstr ""

#: ../../classes/class_node2d.rst:136
msgid "Rotates the node so it points towards the 'point'."
msgstr ""

#: ../../classes/class_node2d.rst:140
msgid ""
"void **move_local_x** **(** :ref:`float<class_float>` delta, "
":ref:`bool<class_bool>` scaled=false **)**"
msgstr ""

#: ../../classes/class_node2d.rst:142
msgid ""
"Applies a local translation on the node's X axis based on the "
":ref:`Node._process<class_Node__process>`'s ``delta``. If ``scaled`` is "
"false, normalizes the movement."
msgstr ""

#: ../../classes/class_node2d.rst:146
msgid ""
"void **move_local_y** **(** :ref:`float<class_float>` delta, "
":ref:`bool<class_bool>` scaled=false **)**"
msgstr ""

#: ../../classes/class_node2d.rst:148
msgid ""
"Applies a local translation on the node's Y axis based on the "
":ref:`Node._process<class_Node__process>`'s ``delta``. If ``scaled`` is "
"false, normalizes the movement."
msgstr ""

#: ../../classes/class_node2d.rst:152
msgid "void **rotate** **(** :ref:`float<class_float>` radians **)**"
msgstr ""

#: ../../classes/class_node2d.rst:154
msgid ""
"Applies a rotation to the node, in radians, starting from its current "
"rotation."
msgstr ""

#: ../../classes/class_node2d.rst:158
msgid ""
":ref:`Vector2<class_vector2>` **to_global** **(** "
":ref:`Vector2<class_vector2>` local_point **)** const"
msgstr ""

#: ../../classes/class_node2d.rst:160
msgid "Converts a local point's coordinates to global coordinates."
msgstr ""

#: ../../classes/class_node2d.rst:164
msgid ""
":ref:`Vector2<class_vector2>` **to_local** **(** "
":ref:`Vector2<class_vector2>` global_point **)** const"
msgstr ""

#: ../../classes/class_node2d.rst:166
msgid "Converts a global point's coordinates to local coordinates."
msgstr ""

#: ../../classes/class_node2d.rst:170
msgid "void **translate** **(** :ref:`Vector2<class_vector2>` offset **)**"
msgstr ""

#: ../../classes/class_node2d.rst:172
msgid "Translates the node by the given ``offset`` in local coordinates."
msgstr ""

