# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_rigidbody2d.rst:8
msgid "RigidBody2D"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:10
msgid ""
"**Inherits:** :ref:`PhysicsBody2D<class_physicsbody2d>` **<** "
":ref:`CollisionObject2D<class_collisionobject2d>` **<** "
":ref:`Node2D<class_node2d>` **<** :ref:`CanvasItem<class_canvasitem>` "
"**<** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:17
msgid "A body that is controlled by the 2D physics engine."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:23
#: ../../classes/class_rigidbody2d.rst:25
#: ../../classes/class_rigidbody2d.rst:27
#: ../../classes/class_rigidbody2d.rst:31
msgid "void"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:23
msgid ""
":ref:`_integrate_forces<class_RigidBody2D__integrate_forces>` **(** "
":ref:`Physics2DDirectBodyState<class_physics2ddirectbodystate>` state "
"**)** virtual"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:25
msgid ""
":ref:`add_force<class_RigidBody2D_add_force>` **(** "
":ref:`Vector2<class_vector2>` offset, :ref:`Vector2<class_vector2>` force"
" **)**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:27
msgid ""
":ref:`apply_impulse<class_RigidBody2D_apply_impulse>` **(** "
":ref:`Vector2<class_vector2>` offset, :ref:`Vector2<class_vector2>` "
"impulse **)**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:29
msgid ":ref:`Array<class_array>`"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:29
msgid ""
":ref:`get_colliding_bodies<class_RigidBody2D_get_colliding_bodies>` **(**"
" **)** const"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:31
msgid ""
":ref:`set_axis_velocity<class_RigidBody2D_set_axis_velocity>` **(** "
":ref:`Vector2<class_vector2>` axis_velocity **)**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:33
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:33
msgid ""
":ref:`test_motion<class_RigidBody2D_test_motion>` **(** "
":ref:`Vector2<class_vector2>` motion, :ref:`float<class_float>` "
"margin=0.08, "
":ref:`Physics2DTestMotionResult<class_physics2dtestmotionresult>` "
"result=null **)**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:37
msgid "Signals"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:41
msgid "**body_entered** **(** :ref:`Object<class_object>` body **)**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:43
msgid ""
"Emitted when a body enters into contact with this one. "
":ref:`contact_monitor<class_RigidBody2D_contact_monitor>` must be "
"``true`` and "
":ref:`contacts_reported<class_RigidBody2D_contacts_reported>` greater "
"than ``0``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:47
msgid "**body_exited** **(** :ref:`Object<class_object>` body **)**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:49
msgid ""
"Emitted when a body exits contact with this one. "
":ref:`contact_monitor<class_RigidBody2D_contact_monitor>` must be "
"``true`` and "
":ref:`contacts_reported<class_RigidBody2D_contacts_reported>` greater "
"than ``0``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:53
msgid ""
"**body_shape_entered** **(** :ref:`int<class_int>` body_id, "
":ref:`Object<class_object>` body, :ref:`int<class_int>` body_shape, "
":ref:`int<class_int>` local_shape **)**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:55
msgid ""
"Emitted when a body enters into contact with this one. Reports colliding "
"shape information. See :ref:`CollisionObject2D<class_collisionobject2d>` "
"for shape index information. "
":ref:`contact_monitor<class_RigidBody2D_contact_monitor>` must be "
"``true`` and "
":ref:`contacts_reported<class_RigidBody2D_contacts_reported>` greater "
"than ``0``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:59
msgid ""
"**body_shape_exited** **(** :ref:`int<class_int>` body_id, "
":ref:`Object<class_object>` body, :ref:`int<class_int>` body_shape, "
":ref:`int<class_int>` local_shape **)**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:61
msgid ""
"Emitted when a body shape exits contact with this one. Reports colliding "
"shape information. See :ref:`CollisionObject2D<class_collisionobject2d>` "
"for shape index information. "
":ref:`contact_monitor<class_RigidBody2D_contact_monitor>` must be "
"``true`` and "
":ref:`contacts_reported<class_RigidBody2D_contacts_reported>` greater "
"than ``0``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:65
msgid "**sleeping_state_changed** **(** **)**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:67
msgid "Emitted when :ref:`sleeping<class_RigidBody2D_sleeping>` changes."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:71
msgid "Member Variables"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:75
msgid ""
":ref:`float<class_float>` **angular_damp** - Damps the body's "
":ref:`angular_velocity<class_RigidBody2D_angular_velocity>`. If ``-1`` "
"the body will use the \"Default Angular Damp\" in \"Project > Project "
"Settings > Physics > 2d\". Default value: ``-1``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:79
msgid ""
":ref:`float<class_float>` **angular_velocity** - The body's rotational "
"velocity."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:83
msgid ""
":ref:`Vector2<class_vector2>` **applied_force** - The body's total "
"applied force."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:87
msgid ""
":ref:`float<class_float>` **applied_torque** - The body's total applied "
"torque."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:91
msgid ""
":ref:`float<class_float>` **bounce** - The body's bounciness. Default "
"value: ``0``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:95
msgid ""
":ref:`bool<class_bool>` **can_sleep** - If ``true`` the body will not "
"calculate forces and will act as a static body if there is no movement. "
"The body will wake up when other forces are applied via collisions or by "
"using :ref:`apply_impulse<class_RigidBody2D_apply_impulse>` or "
":ref:`add_force<class_RigidBody2D_add_force>`. Default value: ``true``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:99
msgid ""
":ref:`bool<class_bool>` **contact_monitor** - If ``true`` the body will "
"emit signals when it collides with another RigidBody2D. See also "
":ref:`contacts_reported<class_RigidBody2D_contacts_reported>`. Default "
"value: ``false``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:103
msgid ""
":ref:`int<class_int>` **contacts_reported** - The maximum number of "
"contacts to report. Default value: ``0``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:107
msgid ""
":ref:`CCDMode<enum_rigidbody2d_ccdmode>` **continuous_cd** - Continuous "
"collision detection mode. Default value: ``CCD_MODE_DISABLED``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:109
msgid ""
"Continuous collision detection tries to predict where a moving body will "
"collide instead of moving it and correcting its movement after collision."
" Continuous collision detection is slower, but more precise and misses "
"fewer collisions with small, fast-moving objects. Raycasting and "
"shapecasting methods are available. See ``CCD_MODE_`` constants for "
"details."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:113
msgid ""
":ref:`bool<class_bool>` **custom_integrator** - If ``true`` internal "
"force integration is disabled for this body. Aside from collision "
"response, the body will only move as determined by the "
":ref:`_integrate_forces<class_RigidBody2D__integrate_forces>` function."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:117
msgid ""
":ref:`float<class_float>` **friction** - The body's friction. Values "
"range from ``0`` (frictionless) to ``1`` (maximum friction). Default "
"value: ``1``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:121
msgid ""
":ref:`float<class_float>` **gravity_scale** - Multiplies the gravity "
"applied to the body. The body's gravity is calculated from the \"Default "
"Gravity\" value in \"Project > Project Settings > Physics > 2d\" and/or "
"any additional gravity vector applied by :ref:`Area2D<class_area2d>`\\ s."
" Default value: ``1``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:125
msgid ""
":ref:`float<class_float>` **inertia** - The body's moment of inertia. "
"This is like mass, but for rotation: it determines how much torque it "
"takes to rotate the body. The moment of inertia is usually computed "
"automatically from the mass and the shapes, but this function allows you "
"to set a custom value. Set 0 (or negative) inertia to return to "
"automatically computing it."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:129
msgid ""
":ref:`float<class_float>` **linear_damp** - Damps the body's "
":ref:`linear_velocity<class_RigidBody2D_linear_velocity>`. If ``-1`` the "
"body will use the \"Default Linear Damp\" in \"Project > Project Settings"
" > Physics > 2d\". Default value: ``-1``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:133
msgid ""
":ref:`Vector2<class_vector2>` **linear_velocity** - The body's linear "
"velocity."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:137
msgid ""
":ref:`float<class_float>` **mass** - The body's mass. Default value: "
"``1``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:141
msgid ""
":ref:`Mode<enum_rigidbody2d_mode>` **mode** - The body's mode. See "
"``MODE_*`` constants. Default value: ``MODE_RIGID``."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:145
msgid ""
":ref:`bool<class_bool>` **sleeping** - If ``true`` the body is sleeping "
"and will not calculate forces until woken up by a collision or by using "
":ref:`apply_impulse<class_RigidBody2D_apply_impulse>` or "
":ref:`add_force<class_RigidBody2D_add_force>`."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:149
msgid ""
":ref:`float<class_float>` **weight** - The body's weight based on its "
"mass and the \"Default Gravity\" value in \"Project > Project Settings > "
"Physics > 2d\"."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:153
msgid "Enums"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:157
msgid "enum **CCDMode**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:159
msgid ""
"**CCD_MODE_DISABLED** = **0** --- Continuous collision detection "
"disabled. This is the fastest way to detect body collisions, but can miss"
" small, fast-moving objects."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:160
msgid ""
"**CCD_MODE_CAST_RAY** = **1** --- Continuous collision detection enabled "
"using raycasting. This is faster than shapecasting but less precise."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:161
msgid ""
"**CCD_MODE_CAST_SHAPE** = **2** --- Continuous collision detection "
"enabled using shapecasting. This is the slowest CCD method and the most "
"precise."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:165
msgid "enum **Mode**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:167
msgid ""
"**MODE_RIGID** = **0** --- Rigid mode. The body behaves as a physical "
"object. It collides with other bodies and responds to forces applied to "
"it. This is the default mode."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:168
msgid ""
"**MODE_STATIC** = **1** --- Static mode. The body behaves like a "
":ref:`StaticBody2D<class_staticbody2d>` and does not move."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:169
msgid ""
"**MODE_CHARACTER** = **2** --- Character mode. Similar to ``MODE_RIGID``,"
" but the body can not rotate."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:170
msgid ""
"**MODE_KINEMATIC** = **3** --- Kinematic mode. The body behaves like a "
":ref:`KinematicBody2D<class_kinematicbody2d>`, and must be moved by code."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:174
msgid "Description"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:176
msgid ""
"This node implements simulated 2D physics. You do not control a "
"RigidBody2D directly. Instead you apply forces to it (gravity, impulses, "
"etc.) and the physics simulation calculates the resulting movement based "
"on its mass, friction, and other physical properties."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:178
msgid ""
"A RigidBody2D has 4 behavior modes (see "
":ref:`mode<class_RigidBody2D_mode>`):"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:180
msgid ""
"**Rigid**: The body behaves as a physical object. It collides with other "
"bodies and responds to forces applied to it. This is the default mode."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:182
msgid ""
"**Static**: The body behaves like a "
":ref:`StaticBody2D<class_staticbody2d>` and does not move."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:184
msgid "**Character**: Similar to ``Rigid`` mode, but the body can not rotate."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:186
msgid ""
"**Kinematic**: The body behaves like a "
":ref:`KinematicBody2D<class_kinematicbody2d>`, and must be moved by code."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:188
msgid ""
"**Note:** You should not change a RigidBody2D's ``position`` or "
"``linear_velocity`` every frame or even very often. If you need to "
"directly affect the body's state, use "
":ref:`_integrate_forces<class_RigidBody2D__integrate_forces>`, which "
"allows you to directly access the physics state."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:190
msgid ""
"If you need to override the default physics behavior, you can write a "
"custom force integration. See "
":ref:`custom_integrator<class_RigidBody2D_custom_integrator>`."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:193
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:197
msgid ""
"void **_integrate_forces** **(** "
":ref:`Physics2DDirectBodyState<class_physics2ddirectbodystate>` state "
"**)** virtual"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:199
msgid ""
"Allows you to read and safely modify the simulation state for the object."
" Use this instead of Node._physics_process if you need to directly change"
" the body's ``position`` or other physics properties. By default it works"
" in addition to the usual physics behavior, but "
":ref:`custom_integrator<class_RigidBody2D_custom_integrator>` allows you "
"to disable the default behavior and write custom force integration for a "
"body."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:203
msgid ""
"void **add_force** **(** :ref:`Vector2<class_vector2>` offset, "
":ref:`Vector2<class_vector2>` force **)**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:205
msgid ""
"Adds a positioned force to the body. Both the force and the offset from "
"the body origin are in global coordinates."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:209
msgid ""
"void **apply_impulse** **(** :ref:`Vector2<class_vector2>` offset, "
":ref:`Vector2<class_vector2>` impulse **)**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:211
msgid ""
"Applies a positioned impulse to the body (which will be affected by the "
"body mass and shape). This is the equivalent of hitting a billiard ball "
"with a cue: a force that is applied instantaneously. Both the impulse and"
" the offset from the body origin are in global coordinates."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:215
msgid ":ref:`Array<class_array>` **get_colliding_bodies** **(** **)** const"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:217
msgid ""
"Returns a list of the bodies colliding with this one. Use "
":ref:`contacts_reported<class_RigidBody2D_contacts_reported>` to set the "
"maximum number reported. You must also set "
":ref:`contact_monitor<class_RigidBody2D_contact_monitor>` to ``true``. "
"Note that the result of this test is not immediate after moving objects. "
"For performance, list of collisions is updated once per frame and before "
"the physics step. Consider using signals instead."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:221
msgid ""
"void **set_axis_velocity** **(** :ref:`Vector2<class_vector2>` "
"axis_velocity **)**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:223
msgid ""
"Sets the body's velocity on the given axis. The velocity in the given "
"vector axis will be set as the given vector length. This is useful for "
"jumping behavior."
msgstr ""

#: ../../classes/class_rigidbody2d.rst:227
msgid ""
":ref:`bool<class_bool>` **test_motion** **(** "
":ref:`Vector2<class_vector2>` motion, :ref:`float<class_float>` "
"margin=0.08, "
":ref:`Physics2DTestMotionResult<class_physics2dtestmotionresult>` "
"result=null **)**"
msgstr ""

#: ../../classes/class_rigidbody2d.rst:229
msgid ""
"Returns ``true`` if a collision would result from moving in the given "
"vector. ``margin`` increases the size of the shapes involved in the "
"collision detection, and ``result`` is an object of type "
":ref:`Physics2DTestMotionResult<class_physics2dtestmotionresult>`, which "
"contains additional information about the collision (should there be "
"one)."
msgstr ""

