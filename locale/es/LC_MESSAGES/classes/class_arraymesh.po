# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_arraymesh.rst:8
msgid "ArrayMesh"
msgstr ""

#: ../../classes/class_arraymesh.rst:10
msgid ""
"**Inherits:** :ref:`Mesh<class_mesh>` **<** "
":ref:`Resource<class_resource>` **<** :ref:`Reference<class_reference>` "
"**<** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_arraymesh.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_arraymesh.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_arraymesh.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_arraymesh.rst:23 ../../classes/class_arraymesh.rst:25
#: ../../classes/class_arraymesh.rst:27 ../../classes/class_arraymesh.rst:29
#: ../../classes/class_arraymesh.rst:39 ../../classes/class_arraymesh.rst:57
#: ../../classes/class_arraymesh.rst:59 ../../classes/class_arraymesh.rst:61
#: ../../classes/class_arraymesh.rst:63
msgid "void"
msgstr ""

#: ../../classes/class_arraymesh.rst:23
msgid ""
":ref:`add_blend_shape<class_ArrayMesh_add_blend_shape>` **(** "
":ref:`String<class_string>` name **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:25
msgid ""
":ref:`add_surface_from_arrays<class_ArrayMesh_add_surface_from_arrays>` "
"**(** :ref:`int<class_int>` primitive, :ref:`Array<class_array>` arrays, "
":ref:`Array<class_array>` blend_shapes=[  ], :ref:`int<class_int>` "
"compress_flags=97792 **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:27
msgid ":ref:`center_geometry<class_ArrayMesh_center_geometry>` **(** **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:29
msgid ":ref:`clear_blend_shapes<class_ArrayMesh_clear_blend_shapes>` **(** **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:31 ../../classes/class_arraymesh.rst:35
#: ../../classes/class_arraymesh.rst:37 ../../classes/class_arraymesh.rst:41
#: ../../classes/class_arraymesh.rst:43 ../../classes/class_arraymesh.rst:49
#: ../../classes/class_arraymesh.rst:55
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_arraymesh.rst:31
msgid ""
":ref:`get_blend_shape_count<class_ArrayMesh_get_blend_shape_count>` **(**"
" **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:33 ../../classes/class_arraymesh.rst:53
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_arraymesh.rst:33
msgid ""
":ref:`get_blend_shape_name<class_ArrayMesh_get_blend_shape_name>` **(** "
":ref:`int<class_int>` index **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:35
msgid ""
":ref:`get_surface_count<class_ArrayMesh_get_surface_count>` **(** **)** "
"const"
msgstr ""

#: ../../classes/class_arraymesh.rst:37
msgid ""
":ref:`lightmap_unwrap<class_ArrayMesh_lightmap_unwrap>` **(** "
":ref:`Transform<class_transform>` arg0, :ref:`float<class_float>` arg1 "
"**)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:39
msgid ":ref:`regen_normalmaps<class_ArrayMesh_regen_normalmaps>` **(** **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:41
msgid ""
":ref:`surface_get_array_index_len<class_ArrayMesh_surface_get_array_index_len>`"
" **(** :ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:43
msgid ""
":ref:`surface_get_array_len<class_ArrayMesh_surface_get_array_len>` **(**"
" :ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:45 ../../classes/class_arraymesh.rst:47
msgid ":ref:`Array<class_array>`"
msgstr ""

#: ../../classes/class_arraymesh.rst:45
msgid ""
":ref:`surface_get_arrays<class_ArrayMesh_surface_get_arrays>` **(** "
":ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:47
msgid ""
":ref:`surface_get_blend_shape_arrays<class_ArrayMesh_surface_get_blend_shape_arrays>`"
" **(** :ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:49
msgid ""
":ref:`surface_get_format<class_ArrayMesh_surface_get_format>` **(** "
":ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:51
msgid ":ref:`Material<class_material>`"
msgstr ""

#: ../../classes/class_arraymesh.rst:51
msgid ""
":ref:`surface_get_material<class_ArrayMesh_surface_get_material>` **(** "
":ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:53
msgid ""
":ref:`surface_get_name<class_ArrayMesh_surface_get_name>` **(** "
":ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:55
msgid ""
":ref:`surface_get_primitive_type<class_ArrayMesh_surface_get_primitive_type>`"
" **(** :ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:57
msgid ""
":ref:`surface_remove<class_ArrayMesh_surface_remove>` **(** "
":ref:`int<class_int>` surf_idx **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:59
msgid ""
":ref:`surface_set_material<class_ArrayMesh_surface_set_material>` **(** "
":ref:`int<class_int>` surf_idx, :ref:`Material<class_material>` material "
"**)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:61
msgid ""
":ref:`surface_set_name<class_ArrayMesh_surface_set_name>` **(** "
":ref:`int<class_int>` surf_idx, :ref:`String<class_string>` name **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:63
msgid ""
":ref:`surface_update_region<class_ArrayMesh_surface_update_region>` **(**"
" :ref:`int<class_int>` surf_idx, :ref:`int<class_int>` offset, "
":ref:`PoolByteArray<class_poolbytearray>` data **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:67
msgid "Member Variables"
msgstr ""

#: ../../classes/class_arraymesh.rst:71
msgid ":ref:`BlendShapeMode<enum_mesh_blendshapemode>` **blend_shape_mode**"
msgstr ""

#: ../../classes/class_arraymesh.rst:75
msgid ":ref:`AABB<class_aabb>` **custom_aabb**"
msgstr ""

#: ../../classes/class_arraymesh.rst:79
msgid "Numeric Constants"
msgstr ""

#: ../../classes/class_arraymesh.rst:81
msgid ""
"**NO_INDEX_ARRAY** = **-1** --- Default value used for index_array_len "
"when no indices are present."
msgstr ""

#: ../../classes/class_arraymesh.rst:82
msgid ""
"**ARRAY_WEIGHTS_SIZE** = **4** --- Amount of weights/bone indices per "
"vertex (always 4)."
msgstr ""

#: ../../classes/class_arraymesh.rst:85
msgid "Enums"
msgstr ""

#: ../../classes/class_arraymesh.rst:89
msgid "enum **ArrayFormat**"
msgstr ""

#: ../../classes/class_arraymesh.rst:91
msgid ""
"**ARRAY_FORMAT_VERTEX** = **1** --- Array format will include vertices "
"(mandatory)."
msgstr ""

#: ../../classes/class_arraymesh.rst:92
msgid "**ARRAY_FORMAT_NORMAL** = **2** --- Array format will include normals"
msgstr ""

#: ../../classes/class_arraymesh.rst:93
msgid "**ARRAY_FORMAT_TANGENT** = **4** --- Array format will include tangents"
msgstr ""

#: ../../classes/class_arraymesh.rst:94
msgid ""
"**ARRAY_FORMAT_COLOR** = **8** --- Array format will include a color "
"array."
msgstr ""

#: ../../classes/class_arraymesh.rst:95
msgid "**ARRAY_FORMAT_TEX_UV** = **16** --- Array format will include UVs."
msgstr ""

#: ../../classes/class_arraymesh.rst:96
msgid ""
"**ARRAY_FORMAT_TEX_UV2** = **32** --- Array format will include another "
"set of UVs."
msgstr ""

#: ../../classes/class_arraymesh.rst:97
msgid ""
"**ARRAY_FORMAT_BONES** = **64** --- Array format will include bone "
"indices."
msgstr ""

#: ../../classes/class_arraymesh.rst:98
msgid ""
"**ARRAY_FORMAT_WEIGHTS** = **128** --- Array format will include bone "
"weights."
msgstr ""

#: ../../classes/class_arraymesh.rst:99
msgid "**ARRAY_FORMAT_INDEX** = **256** --- Index array will be used."
msgstr ""

#: ../../classes/class_arraymesh.rst:103
msgid "enum **ArrayType**"
msgstr ""

#: ../../classes/class_arraymesh.rst:105
msgid ""
"**ARRAY_VERTEX** = **0** --- Vertex array (array of "
":ref:`Vector3<class_vector3>` vertices)."
msgstr ""

#: ../../classes/class_arraymesh.rst:106
msgid ""
"**ARRAY_NORMAL** = **1** --- Normal array (array of "
":ref:`Vector3<class_vector3>` normals)."
msgstr ""

#: ../../classes/class_arraymesh.rst:107
msgid ""
"**ARRAY_TANGENT** = **2** --- Tangent array, array of groups of 4 floats."
" first 3 floats determine the tangent, and the last the binormal "
"direction as -1 or 1."
msgstr ""

#: ../../classes/class_arraymesh.rst:108
msgid ""
"**ARRAY_COLOR** = **3** --- Vertex array (array of "
":ref:`Color<class_color>` colors)."
msgstr ""

#: ../../classes/class_arraymesh.rst:109
msgid ""
"**ARRAY_TEX_UV** = **4** --- UV array (array of "
":ref:`Vector3<class_vector3>` UVs or float array of groups of 2 floats "
"(u,v))."
msgstr ""

#: ../../classes/class_arraymesh.rst:110
msgid ""
"**ARRAY_TEX_UV2** = **5** --- Second UV array (array of "
":ref:`Vector3<class_vector3>` UVs or float array of groups of 2 floats "
"(u,v))."
msgstr ""

#: ../../classes/class_arraymesh.rst:111
msgid ""
"**ARRAY_BONES** = **6** --- Array of bone indices, as a float array. Each"
" element in groups of 4 floats."
msgstr ""

#: ../../classes/class_arraymesh.rst:112
msgid ""
"**ARRAY_WEIGHTS** = **7** --- Array of bone weights, as a float array. "
"Each element in groups of 4 floats."
msgstr ""

#: ../../classes/class_arraymesh.rst:113
msgid ""
"**ARRAY_INDEX** = **8** --- Array of integers, used as indices "
"referencing vertices. No index can be beyond the vertex array size."
msgstr ""

#: ../../classes/class_arraymesh.rst:114
msgid "**ARRAY_MAX** = **9**"
msgstr ""

#: ../../classes/class_arraymesh.rst:118
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_arraymesh.rst:122
msgid "void **add_blend_shape** **(** :ref:`String<class_string>` name **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:126
msgid ""
"void **add_surface_from_arrays** **(** :ref:`int<class_int>` primitive, "
":ref:`Array<class_array>` arrays, :ref:`Array<class_array>` "
"blend_shapes=[  ], :ref:`int<class_int>` compress_flags=97792 **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:128
msgid ""
"Create a new surface "
"(:ref:`get_surface_count<class_ArrayMesh_get_surface_count>` that will "
"become surf_idx for this."
msgstr ""

#: ../../classes/class_arraymesh.rst:130
msgid ""
"Surfaces are created to be rendered using a \"primitive\", which may be "
"PRIMITIVE_POINTS, PRIMITIVE_LINES, PRIMITIVE_LINE_STRIP, "
"PRIMITIVE_LINE_LOOP, PRIMITIVE_TRIANGLES, PRIMITIVE_TRIANGLE_STRIP, "
"PRIMITIVE_TRIANGLE_FAN. (As a note, when using indices, it is recommended"
" to only use just points, lines or triangles)."
msgstr ""

#: ../../classes/class_arraymesh.rst:134
msgid "void **center_geometry** **(** **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:138
msgid "void **clear_blend_shapes** **(** **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:142
msgid ":ref:`int<class_int>` **get_blend_shape_count** **(** **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:146
msgid ""
":ref:`String<class_string>` **get_blend_shape_name** **(** "
":ref:`int<class_int>` index **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:150
msgid ":ref:`int<class_int>` **get_surface_count** **(** **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:152
msgid "Return the amount of surfaces that the ``ArrayMesh`` holds."
msgstr ""

#: ../../classes/class_arraymesh.rst:156
msgid ""
":ref:`int<class_int>` **lightmap_unwrap** **(** "
":ref:`Transform<class_transform>` arg0, :ref:`float<class_float>` arg1 "
"**)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:160
msgid "void **regen_normalmaps** **(** **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:164
msgid ""
":ref:`int<class_int>` **surface_get_array_index_len** **(** "
":ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:166
msgid ""
"Return the length in indices of the index array in the requested surface "
"(see :ref:`add_surface<class_ArrayMesh_add_surface>`)."
msgstr ""

#: ../../classes/class_arraymesh.rst:170
msgid ""
":ref:`int<class_int>` **surface_get_array_len** **(** "
":ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:172
msgid ""
"Return the length in vertices of the vertex array in the requested "
"surface (see :ref:`add_surface<class_ArrayMesh_add_surface>`)."
msgstr ""

#: ../../classes/class_arraymesh.rst:176
msgid ""
":ref:`Array<class_array>` **surface_get_arrays** **(** "
":ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:180
msgid ""
":ref:`Array<class_array>` **surface_get_blend_shape_arrays** **(** "
":ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:184
msgid ""
":ref:`int<class_int>` **surface_get_format** **(** :ref:`int<class_int>` "
"surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:186
msgid ""
"Return the format mask of the requested surface (see "
":ref:`add_surface<class_ArrayMesh_add_surface>`)."
msgstr ""

#: ../../classes/class_arraymesh.rst:190
msgid ""
":ref:`Material<class_material>` **surface_get_material** **(** "
":ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:192
msgid ""
"Return a :ref:`Material<class_material>` in a given surface. Surface is "
"rendered using this material."
msgstr ""

#: ../../classes/class_arraymesh.rst:196
msgid ""
":ref:`String<class_string>` **surface_get_name** **(** "
":ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:200
msgid ""
":ref:`int<class_int>` **surface_get_primitive_type** **(** "
":ref:`int<class_int>` surf_idx **)** const"
msgstr ""

#: ../../classes/class_arraymesh.rst:202
msgid ""
"Return the primitive type of the requested surface (see "
":ref:`add_surface<class_ArrayMesh_add_surface>`)."
msgstr ""

#: ../../classes/class_arraymesh.rst:206
msgid "void **surface_remove** **(** :ref:`int<class_int>` surf_idx **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:208
msgid ""
"Remove a surface at position surf_idx, shifting greater surfaces one "
"surf_idx slot down."
msgstr ""

#: ../../classes/class_arraymesh.rst:212
msgid ""
"void **surface_set_material** **(** :ref:`int<class_int>` surf_idx, "
":ref:`Material<class_material>` material **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:216
msgid ""
"void **surface_set_name** **(** :ref:`int<class_int>` surf_idx, "
":ref:`String<class_string>` name **)**"
msgstr ""

#: ../../classes/class_arraymesh.rst:218
msgid ""
"Set a :ref:`Material<class_material>` for a given surface. Surface will "
"be rendered using this material."
msgstr ""

#: ../../classes/class_arraymesh.rst:222
msgid ""
"void **surface_update_region** **(** :ref:`int<class_int>` surf_idx, "
":ref:`int<class_int>` offset, :ref:`PoolByteArray<class_poolbytearray>` "
"data **)**"
msgstr ""

