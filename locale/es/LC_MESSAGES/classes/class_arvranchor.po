# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_arvranchor.rst:8
msgid "ARVRAnchor"
msgstr ""

#: ../../classes/class_arvranchor.rst:10
msgid ""
"**Inherits:** :ref:`Spatial<class_spatial>` **<** :ref:`Node<class_node>`"
" **<** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_arvranchor.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_arvranchor.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_arvranchor.rst:17
msgid "Anchor point in AR Space"
msgstr ""

#: ../../classes/class_arvranchor.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_arvranchor.rst:23
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_arvranchor.rst:23
msgid ":ref:`get_anchor_name<class_ARVRAnchor_get_anchor_name>` **(** **)** const"
msgstr ""

#: ../../classes/class_arvranchor.rst:25
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_arvranchor.rst:25
msgid ":ref:`get_is_active<class_ARVRAnchor_get_is_active>` **(** **)** const"
msgstr ""

#: ../../classes/class_arvranchor.rst:27
msgid ":ref:`Plane<class_plane>`"
msgstr ""

#: ../../classes/class_arvranchor.rst:27
msgid ":ref:`get_plane<class_ARVRAnchor_get_plane>` **(** **)** const"
msgstr ""

#: ../../classes/class_arvranchor.rst:29
msgid ":ref:`Vector3<class_vector3>`"
msgstr ""

#: ../../classes/class_arvranchor.rst:29
msgid ":ref:`get_size<class_ARVRAnchor_get_size>` **(** **)** const"
msgstr ""

#: ../../classes/class_arvranchor.rst:33
msgid "Member Variables"
msgstr ""

#: ../../classes/class_arvranchor.rst:37
msgid ""
":ref:`int<class_int>` **anchor_id** - The anchor's id. You can set this "
"before the anchor itself exists. The first anchor gets an id of ``1``, "
"the second an id of ``2``, etc. When anchors get removed, the engine can "
"then assign the corresponding id to new anchors. The most common "
"situation where anchors 'disappear' is when the AR server identifies that"
" two anchors represent different parts of the same plane and merges them."
msgstr ""

#: ../../classes/class_arvranchor.rst:41
msgid "Description"
msgstr ""

#: ../../classes/class_arvranchor.rst:43
msgid ""
"The ARVR Anchor point is a spatial node that maps a real world location "
"identified by the AR platform to a position within the game world. For "
"example, as long as plane detection in ARKit is on, ARKit will identify "
"and update the position of planes (tables, floors, etc) and create "
"anchors for them."
msgstr ""

#: ../../classes/class_arvranchor.rst:45
msgid ""
"This node is mapped to one of the anchors through its unique id. When you"
" receive a signal that a new anchor is available you should add this node"
" to your scene for that anchor. You can predefine nodes and set the id "
"and the nodes will simply remain on 0,0,0 until a plane is recognised."
msgstr ""

#: ../../classes/class_arvranchor.rst:47
msgid ""
"Keep in mind that as long as plane detection is enable the size, placing "
"and orientation of an anchor will be updates as the detection logic "
"learns more about the real world out there especially if only part of the"
" surface is in view."
msgstr ""

#: ../../classes/class_arvranchor.rst:50
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_arvranchor.rst:54
msgid ":ref:`String<class_string>` **get_anchor_name** **(** **)** const"
msgstr ""

#: ../../classes/class_arvranchor.rst:56
msgid "Returns the name given to this anchor."
msgstr ""

#: ../../classes/class_arvranchor.rst:60
msgid ":ref:`bool<class_bool>` **get_is_active** **(** **)** const"
msgstr ""

#: ../../classes/class_arvranchor.rst:62
msgid ""
"Returns true if the anchor is being tracked and false if no anchor with "
"this id is currently known."
msgstr ""

#: ../../classes/class_arvranchor.rst:66
msgid ":ref:`Plane<class_plane>` **get_plane** **(** **)** const"
msgstr ""

#: ../../classes/class_arvranchor.rst:68
msgid "Returns a plane aligned with our anchor, handy for intersection testing"
msgstr ""

#: ../../classes/class_arvranchor.rst:72
msgid ":ref:`Vector3<class_vector3>` **get_size** **(** **)** const"
msgstr ""

#: ../../classes/class_arvranchor.rst:74
msgid ""
"Returns the estimated size of the plane that was detected. Say when the "
"anchor relates to a table in the real world, this is the estimated size "
"of the surface of that table."
msgstr ""

