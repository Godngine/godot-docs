# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_packetpeerudp.rst:8
msgid "PacketPeerUDP"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:10
msgid ""
"**Inherits:** :ref:`PacketPeer<class_packetpeer>` **<** "
":ref:`Reference<class_reference>` **<** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:17
msgid "UDP packet peer."
msgstr ""

#: ../../classes/class_packetpeerudp.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:23
msgid "void"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:23
msgid ":ref:`close<class_PacketPeerUDP_close>` **(** **)**"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:25
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:25
msgid ":ref:`get_packet_ip<class_PacketPeerUDP_get_packet_ip>` **(** **)** const"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:27
#: ../../classes/class_packetpeerudp.rst:31
#: ../../classes/class_packetpeerudp.rst:33
#: ../../classes/class_packetpeerudp.rst:35
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:27
msgid ""
":ref:`get_packet_port<class_PacketPeerUDP_get_packet_port>` **(** **)** "
"const"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:29
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:29
msgid ":ref:`is_listening<class_PacketPeerUDP_is_listening>` **(** **)** const"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:31
msgid ""
":ref:`listen<class_PacketPeerUDP_listen>` **(** :ref:`int<class_int>` "
"port, :ref:`String<class_string>` bind_address=\"*\", "
":ref:`int<class_int>` recv_buf_size=65536 **)**"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:33
msgid ""
":ref:`set_dest_address<class_PacketPeerUDP_set_dest_address>` **(** "
":ref:`String<class_string>` host, :ref:`int<class_int>` port **)**"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:35
msgid ":ref:`wait<class_PacketPeerUDP_wait>` **(** **)**"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:39
msgid "Description"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:41
msgid ""
"UDP packet peer. Can be used to send raw UDP packets as well as "
":ref:`Variant<class_variant>`\\ s."
msgstr ""

#: ../../classes/class_packetpeerudp.rst:44
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:48
msgid "void **close** **(** **)**"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:50
msgid "Close the UDP socket the ``PacketPeerUDP`` is currently listening on."
msgstr ""

#: ../../classes/class_packetpeerudp.rst:54
msgid ":ref:`String<class_string>` **get_packet_ip** **(** **)** const"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:56
msgid ""
"Return the IP of the remote peer that sent the last packet(that was "
"received with :ref:`get_packet<class_PacketPeerUDP_get_packet>` or "
":ref:`get_var<class_PacketPeerUDP_get_var>`)."
msgstr ""

#: ../../classes/class_packetpeerudp.rst:60
msgid ":ref:`int<class_int>` **get_packet_port** **(** **)** const"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:62
msgid ""
"Return the port of the remote peer that sent the last packet(that was "
"received with :ref:`get_packet<class_PacketPeerUDP_get_packet>` or "
":ref:`get_var<class_PacketPeerUDP_get_var>`)."
msgstr ""

#: ../../classes/class_packetpeerudp.rst:66
msgid ":ref:`bool<class_bool>` **is_listening** **(** **)** const"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:68
msgid "Return whether this ``PacketPeerUDP`` is listening."
msgstr ""

#: ../../classes/class_packetpeerudp.rst:72
msgid ""
":ref:`int<class_int>` **listen** **(** :ref:`int<class_int>` port, "
":ref:`String<class_string>` bind_address=\"*\", :ref:`int<class_int>` "
"recv_buf_size=65536 **)**"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:74
msgid ""
"Make this ``PacketPeerUDP`` listen on the \"port\" binding to "
"\"bind_address\" with a buffer size \"recv_buf_size\"."
msgstr ""

#: ../../classes/class_packetpeerudp.rst:76
msgid ""
"If \"bind_address\" is set as \"\\*\" (default), the peer will listen on "
"all available addresses (both IPv4 and IPv6)."
msgstr ""

#: ../../classes/class_packetpeerudp.rst:78
msgid ""
"If \"bind_address\" is set as \"0.0.0.0\" (for IPv4) or \"::\" (for "
"IPv6), the peer will listen on all available addresses matching that IP "
"type."
msgstr ""

#: ../../classes/class_packetpeerudp.rst:80
msgid ""
"If \"bind_address\" is set to any valid address (e.g. \"192.168.1.101\", "
"\"::1\", etc), the peer will only listen on the interface with that "
"addresses (or fail if no interface with the given address exists)."
msgstr ""

#: ../../classes/class_packetpeerudp.rst:84
msgid ""
":ref:`int<class_int>` **set_dest_address** **(** "
":ref:`String<class_string>` host, :ref:`int<class_int>` port **)**"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:86
msgid ""
"Set the destination address and port for sending packets and variables, a"
" hostname will be resolved using if valid."
msgstr ""

#: ../../classes/class_packetpeerudp.rst:90
msgid ":ref:`int<class_int>` **wait** **(** **)**"
msgstr ""

#: ../../classes/class_packetpeerudp.rst:92
msgid ""
"Wait for a packet to arrive on the listening port, see "
":ref:`listen<class_PacketPeerUDP_listen>`."
msgstr ""

