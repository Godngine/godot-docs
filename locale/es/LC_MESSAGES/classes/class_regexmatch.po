# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_regexmatch.rst:8
msgid "RegExMatch"
msgstr ""

#: ../../classes/class_regexmatch.rst:10
msgid ""
"**Inherits:** :ref:`Reference<class_reference>` **<** "
":ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_regexmatch.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_regexmatch.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_regexmatch.rst:17
msgid "Contains the results of a regex search."
msgstr ""

#: ../../classes/class_regexmatch.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_regexmatch.rst:23 ../../classes/class_regexmatch.rst:25
#: ../../classes/class_regexmatch.rst:27
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_regexmatch.rst:23
msgid ""
":ref:`get_end<class_RegExMatch_get_end>` **(** "
":ref:`Variant<class_variant>` name=0 **)** const"
msgstr ""

#: ../../classes/class_regexmatch.rst:25
msgid ":ref:`get_group_count<class_RegExMatch_get_group_count>` **(** **)** const"
msgstr ""

#: ../../classes/class_regexmatch.rst:27
msgid ""
":ref:`get_start<class_RegExMatch_get_start>` **(** "
":ref:`Variant<class_variant>` name=0 **)** const"
msgstr ""

#: ../../classes/class_regexmatch.rst:29
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_regexmatch.rst:29
msgid ""
":ref:`get_string<class_RegExMatch_get_string>` **(** "
":ref:`Variant<class_variant>` name=0 **)** const"
msgstr ""

#: ../../classes/class_regexmatch.rst:33
msgid "Member Variables"
msgstr ""

#: ../../classes/class_regexmatch.rst:37
msgid ""
":ref:`Dictionary<class_dictionary>` **names** - A dictionary of named "
"groups and its corresponding group number. Only groups with that were "
"matched are included. If multiple groups have the same name, that name "
"would refer to the first matching one."
msgstr ""

#: ../../classes/class_regexmatch.rst:41
msgid ""
":ref:`Array<class_array>` **strings** - An :ref:`Array<class_array>` of "
"the match and its capturing groups."
msgstr ""

#: ../../classes/class_regexmatch.rst:45
msgid ""
":ref:`String<class_string>` **subject** - The source string used with the"
" search pattern to find this matching result."
msgstr ""

#: ../../classes/class_regexmatch.rst:49
msgid "Description"
msgstr ""

#: ../../classes/class_regexmatch.rst:51
msgid ""
"Contains the results of a single regex match returned by "
":ref:`RegEx.search<class_RegEx_search>` and "
":ref:`RegEx.search_all<class_RegEx_search_all>`. It can be used to find "
"the position and range of the match and its capturing groups, and it can "
"extract its sub-string for you."
msgstr ""

#: ../../classes/class_regexmatch.rst:54
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_regexmatch.rst:58
msgid ""
":ref:`int<class_int>` **get_end** **(** :ref:`Variant<class_variant>` "
"name=0 **)** const"
msgstr ""

#: ../../classes/class_regexmatch.rst:60
msgid ""
"Returns the end position of the match within the source string. The end "
"position of capturing groups can be retrieved by providing its group "
"number as an integer or its string name (if it's a named group). The "
"default value of 0 refers to the whole pattern."
msgstr ""

#: ../../classes/class_regexmatch.rst:62 ../../classes/class_regexmatch.rst:76
msgid "Returns -1 if the group did not match or doesn't exist."
msgstr ""

#: ../../classes/class_regexmatch.rst:66
msgid ":ref:`int<class_int>` **get_group_count** **(** **)** const"
msgstr ""

#: ../../classes/class_regexmatch.rst:68
msgid "Returns the number of capturing groups."
msgstr ""

#: ../../classes/class_regexmatch.rst:72
msgid ""
":ref:`int<class_int>` **get_start** **(** :ref:`Variant<class_variant>` "
"name=0 **)** const"
msgstr ""

#: ../../classes/class_regexmatch.rst:74
msgid ""
"Returns the starting position of the match within the source string. The "
"starting position of capturing groups can be retrieved by providing its "
"group number as an integer or its string name (if it's a named group). "
"The default value of 0 refers to the whole pattern."
msgstr ""

#: ../../classes/class_regexmatch.rst:80
msgid ""
":ref:`String<class_string>` **get_string** **(** "
":ref:`Variant<class_variant>` name=0 **)** const"
msgstr ""

#: ../../classes/class_regexmatch.rst:82
msgid ""
"Returns the substring of the match from the source string. Capturing "
"groups can be retrieved by providing its group number as an integer or "
"its string name (if it's a named group). The default value of 0 refers to"
" the whole pattern."
msgstr ""

#: ../../classes/class_regexmatch.rst:84
msgid "Returns an empty string if the group did not match or doesn't exist."
msgstr ""

