# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_performance.rst:8
msgid "Performance"
msgstr ""

#: ../../classes/class_performance.rst:10
msgid "**Inherits:** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_performance.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_performance.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_performance.rst:17
msgid "Exposes performance related data."
msgstr ""

#: ../../classes/class_performance.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_performance.rst:23
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../../classes/class_performance.rst:23
msgid ""
":ref:`get_monitor<class_Performance_get_monitor>` **(** "
":ref:`int<class_int>` monitor **)** const"
msgstr ""

#: ../../classes/class_performance.rst:27
msgid "Enums"
msgstr ""

#: ../../classes/class_performance.rst:31
msgid "enum **Monitor**"
msgstr ""

#: ../../classes/class_performance.rst:33
msgid "**TIME_FPS** = **0** --- Frames per second."
msgstr ""

#: ../../classes/class_performance.rst:34
msgid "**TIME_PROCESS** = **1** --- Time it took to complete one frame."
msgstr ""

#: ../../classes/class_performance.rst:35
msgid ""
"**TIME_PHYSICS_PROCESS** = **2** --- Time it took to complete one physics"
" frame."
msgstr ""

#: ../../classes/class_performance.rst:36
msgid ""
"**MEMORY_STATIC** = **3** --- Static memory currently used, in bytes. Not"
" available in release builds."
msgstr ""

#: ../../classes/class_performance.rst:37
msgid ""
"**MEMORY_DYNAMIC** = **4** --- Dynamic memory currently used, in bytes. "
"Not available in release builds."
msgstr ""

#: ../../classes/class_performance.rst:38
msgid ""
"**MEMORY_STATIC_MAX** = **5** --- Available static memory. Not available "
"in release builds."
msgstr ""

#: ../../classes/class_performance.rst:39
msgid ""
"**MEMORY_DYNAMIC_MAX** = **6** --- Available dynamic memory. Not "
"available in release builds."
msgstr ""

#: ../../classes/class_performance.rst:40
msgid ""
"**MEMORY_MESSAGE_BUFFER_MAX** = **7** --- Largest amount of memory the "
"message queue buffer has used, in bytes. The message queue is used for "
"deferred functions calls and notifications."
msgstr ""

#: ../../classes/class_performance.rst:41
msgid ""
"**OBJECT_COUNT** = **8** --- Number of objects currently instanced "
"(including nodes)."
msgstr ""

#: ../../classes/class_performance.rst:42
msgid "**OBJECT_RESOURCE_COUNT** = **9** --- Number of resources currently used."
msgstr ""

#: ../../classes/class_performance.rst:43
msgid ""
"**OBJECT_NODE_COUNT** = **10** --- Number of nodes currently instanced. "
"This also includes the root node, as well as any nodes not in the scene "
"tree."
msgstr ""

#: ../../classes/class_performance.rst:44
msgid "**RENDER_OBJECTS_IN_FRAME** = **11** --- 3D objects drawn per frame."
msgstr ""

#: ../../classes/class_performance.rst:45
msgid ""
"**RENDER_VERTICES_IN_FRAME** = **12** --- Vertices drawn per frame. 3D "
"only."
msgstr ""

#: ../../classes/class_performance.rst:46
msgid ""
"**RENDER_MATERIAL_CHANGES_IN_FRAME** = **13** --- Material changes per "
"frame. 3D only"
msgstr ""

#: ../../classes/class_performance.rst:47
msgid ""
"**RENDER_SHADER_CHANGES_IN_FRAME** = **14** --- Shader changes per frame."
" 3D only."
msgstr ""

#: ../../classes/class_performance.rst:48
msgid ""
"**RENDER_SURFACE_CHANGES_IN_FRAME** = **15** --- Render surface changes "
"per frame. 3D only."
msgstr ""

#: ../../classes/class_performance.rst:49
msgid "**RENDER_DRAW_CALLS_IN_FRAME** = **16** --- Draw calls per frame. 3D only."
msgstr ""

#: ../../classes/class_performance.rst:50
msgid ""
"**RENDER_VIDEO_MEM_USED** = **17** --- Video memory used. Includes both "
"texture and vertex memory."
msgstr ""

#: ../../classes/class_performance.rst:51
msgid "**RENDER_TEXTURE_MEM_USED** = **18** --- Texture memory used."
msgstr ""

#: ../../classes/class_performance.rst:52
msgid "**RENDER_VERTEX_MEM_USED** = **19** --- Vertex memory used."
msgstr ""

#: ../../classes/class_performance.rst:53
msgid "**RENDER_USAGE_VIDEO_MEM_TOTAL** = **20**"
msgstr ""

#: ../../classes/class_performance.rst:54
msgid ""
"**PHYSICS_2D_ACTIVE_OBJECTS** = **21** --- Number of active "
":ref:`RigidBody2D<class_rigidbody2d>` nodes in the game."
msgstr ""

#: ../../classes/class_performance.rst:55
msgid ""
"**PHYSICS_2D_COLLISION_PAIRS** = **22** --- Number of collision pairs in "
"the 2D physics engine."
msgstr ""

#: ../../classes/class_performance.rst:56
msgid ""
"**PHYSICS_2D_ISLAND_COUNT** = **23** --- Number of islands in the 2D "
"physics engine."
msgstr ""

#: ../../classes/class_performance.rst:57
msgid ""
"**PHYSICS_3D_ACTIVE_OBJECTS** = **24** --- Number of active "
":ref:`RigidBody<class_rigidbody>` and "
":ref:`VehicleBody<class_vehiclebody>` nodes in the game."
msgstr ""

#: ../../classes/class_performance.rst:58
msgid ""
"**PHYSICS_3D_COLLISION_PAIRS** = **25** --- Number of collision pairs in "
"the 3D physics engine."
msgstr ""

#: ../../classes/class_performance.rst:59
msgid ""
"**PHYSICS_3D_ISLAND_COUNT** = **26** --- Number of islands in the 3D "
"physics engine."
msgstr ""

#: ../../classes/class_performance.rst:60
msgid "**MONITOR_MAX** = **27**"
msgstr ""

#: ../../classes/class_performance.rst:64
msgid "Description"
msgstr ""

#: ../../classes/class_performance.rst:66
msgid ""
"This class provides access to a number of different monitors related to "
"performance, such as memory usage, draw calls, and FPS. These are the "
"same as the values displayed in the *Monitor* tab in the editor's "
"*Debugger* panel. By using the "
":ref:`get_monitor<class_Performance_get_monitor>` method of this class, "
"you can access this data from your code. Note that a few of these "
"monitors are only available in debug mode and will always return 0 when "
"used in a release build."
msgstr ""

#: ../../classes/class_performance.rst:68
msgid ""
"Many of these monitors are not updated in real-time, so there may be a "
"short delay between changes."
msgstr ""

#: ../../classes/class_performance.rst:71
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_performance.rst:75
msgid ""
":ref:`float<class_float>` **get_monitor** **(** :ref:`int<class_int>` "
"monitor **)** const"
msgstr ""

#: ../../classes/class_performance.rst:77
msgid ""
"Returns the value of one of the available monitors. You should provide "
"one of this class's constants as the argument, like this:"
msgstr ""

