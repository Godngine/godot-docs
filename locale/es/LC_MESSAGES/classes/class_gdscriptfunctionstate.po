# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_gdscriptfunctionstate.rst:8
msgid "GDScriptFunctionState"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:10
msgid ""
"**Inherits:** :ref:`Reference<class_reference>` **<** "
":ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:17
msgid "State of a function call after yielding."
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:23
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:23
msgid ""
":ref:`is_valid<class_GDScriptFunctionState_is_valid>` **(** "
":ref:`bool<class_bool>` extended_check=false **)** const"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:25
msgid ":ref:`Variant<class_variant>`"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:25
msgid ""
":ref:`resume<class_GDScriptFunctionState_resume>` **(** "
":ref:`Variant<class_variant>` arg=null **)**"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:29
msgid "Signals"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:33
msgid "**completed** **(** :ref:`Nil<class_nil>` result **)**"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:37
msgid "Description"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:39
msgid ""
"Calling :ref:`@GDScript.yield<class_@GDScript_yield>` within a function "
"will cause that function to yield and return its current state as an "
"object of this type. The yielded function call can then be resumed later "
"by calling :ref:`resume<class_GDScriptFunctionState_resume>` on this "
"state object."
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:42
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:46
msgid ""
":ref:`bool<class_bool>` **is_valid** **(** :ref:`bool<class_bool>` "
"extended_check=false **)** const"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:48
msgid ""
"Check whether the function call may be resumed. This is not the case if "
"the function state was already resumed."
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:50
msgid ""
"If ``extended_check`` is enabled, it also checks if the associated script"
" and object still exist. The extended check is done in debug mode as part"
" of "
":ref:`GDScriptFunctionState.resume<class_GDScriptFunctionState_resume>`, "
"but you can use this if you know you may be trying to resume without "
"knowing for sure the object and/or script have survived up to that point."
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:54
msgid ""
":ref:`Variant<class_variant>` **resume** **(** "
":ref:`Variant<class_variant>` arg=null **)**"
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:56
msgid "Resume execution of the yielded function call."
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:58
msgid ""
"If handed an argument, return the argument from the "
":ref:`@GDScript.yield<class_@GDScript_yield>` call in the yielded "
"function call. You can pass e.g. an :ref:`Array<class_array>` to hand "
"multiple arguments."
msgstr ""

#: ../../classes/class_gdscriptfunctionstate.rst:60
msgid ""
"This function returns what the resumed function call returns, possibly "
"another function state if yielded again."
msgstr ""

