# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_arvrinterface.rst:8
msgid "ARVRInterface"
msgstr ""

#: ../../classes/class_arvrinterface.rst:10
msgid ""
"**Inherits:** :ref:`Reference<class_reference>` **<** "
":ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_arvrinterface.rst:12
msgid ""
"**Inherited By:** "
":ref:`ARVRInterfaceGDNative<class_arvrinterfacegdnative>`, "
":ref:`MobileVRInterface<class_mobilevrinterface>`"
msgstr ""

#: ../../classes/class_arvrinterface.rst:14
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_arvrinterface.rst:17
msgid "Brief Description"
msgstr ""

#: ../../classes/class_arvrinterface.rst:19
msgid "Base class for ARVR interface implementation."
msgstr ""

#: ../../classes/class_arvrinterface.rst:22
msgid "Member Functions"
msgstr ""

#: ../../classes/class_arvrinterface.rst:25
#: ../../classes/class_arvrinterface.rst:31
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_arvrinterface.rst:25
msgid ""
":ref:`get_capabilities<class_ARVRInterface_get_capabilities>` **(** **)**"
" const"
msgstr ""

#: ../../classes/class_arvrinterface.rst:27
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_arvrinterface.rst:27
msgid ":ref:`get_name<class_ARVRInterface_get_name>` **(** **)** const"
msgstr ""

#: ../../classes/class_arvrinterface.rst:29
msgid ":ref:`Vector2<class_vector2>`"
msgstr ""

#: ../../classes/class_arvrinterface.rst:29
msgid ""
":ref:`get_render_targetsize<class_ARVRInterface_get_render_targetsize>` "
"**(** **)**"
msgstr ""

#: ../../classes/class_arvrinterface.rst:31
msgid ""
":ref:`get_tracking_status<class_ARVRInterface_get_tracking_status>` **(**"
" **)** const"
msgstr ""

#: ../../classes/class_arvrinterface.rst:33
#: ../../classes/class_arvrinterface.rst:35
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_arvrinterface.rst:33
msgid ":ref:`initialize<class_ARVRInterface_initialize>` **(** **)**"
msgstr ""

#: ../../classes/class_arvrinterface.rst:35
msgid ":ref:`is_stereo<class_ARVRInterface_is_stereo>` **(** **)**"
msgstr ""

#: ../../classes/class_arvrinterface.rst:37
msgid "void"
msgstr ""

#: ../../classes/class_arvrinterface.rst:37
msgid ":ref:`uninitialize<class_ARVRInterface_uninitialize>` **(** **)**"
msgstr ""

#: ../../classes/class_arvrinterface.rst:41
msgid "Member Variables"
msgstr ""

#: ../../classes/class_arvrinterface.rst:45
msgid ""
":ref:`bool<class_bool>` **ar_is_anchor_detection_enabled** - On an AR "
"interface, is our anchor detection enabled?"
msgstr ""

#: ../../classes/class_arvrinterface.rst:49
msgid ""
":ref:`bool<class_bool>` **interface_is_initialized** - Has this interface"
" been initialized?"
msgstr ""

#: ../../classes/class_arvrinterface.rst:53
msgid ""
":ref:`bool<class_bool>` **interface_is_primary** - Is this our primary "
"interface?"
msgstr ""

#: ../../classes/class_arvrinterface.rst:57
msgid "Enums"
msgstr ""

#: ../../classes/class_arvrinterface.rst:61
msgid "enum **Eyes**"
msgstr ""

#: ../../classes/class_arvrinterface.rst:63
msgid ""
"**EYE_MONO** = **0** --- Mono output, this is mostly used internally when"
" retrieving positioning information for our camera node or when stereo "
"scopic rendering is not supported."
msgstr ""

#: ../../classes/class_arvrinterface.rst:64
msgid ""
"**EYE_LEFT** = **1** --- Left eye output, this is mostly used internally "
"when rendering the image for the left eye and obtaining positioning and "
"projection information."
msgstr ""

#: ../../classes/class_arvrinterface.rst:65
msgid ""
"**EYE_RIGHT** = **2** --- Right eye output, this is mostly used "
"internally when rendering the image for the right eye and obtaining "
"positioning and projection information."
msgstr ""

#: ../../classes/class_arvrinterface.rst:69
msgid "enum **Tracking_status**"
msgstr ""

#: ../../classes/class_arvrinterface.rst:71
msgid "**ARVR_NORMAL_TRACKING** = **0** --- Tracking is behaving as expected."
msgstr ""

#: ../../classes/class_arvrinterface.rst:72
msgid ""
"**ARVR_EXCESSIVE_MOTION** = **1** --- Tracking is hindered by excessive "
"motion, player is moving faster then tracking can keep up."
msgstr ""

#: ../../classes/class_arvrinterface.rst:73
msgid ""
"**ARVR_INSUFFICIENT_FEATURES** = **2** --- Tracking is hindered by "
"insufficient features, it's too dark (for camera based tracking), player "
"is blocked, etc."
msgstr ""

#: ../../classes/class_arvrinterface.rst:74
msgid ""
"**ARVR_UNKNOWN_TRACKING** = **3** --- We don't know the status of the "
"tracking or this interface does not provide feedback."
msgstr ""

#: ../../classes/class_arvrinterface.rst:75
msgid ""
"**ARVR_NOT_TRACKING** = **4** --- Tracking is not functional (camera not "
"plugged in or obscured, lighthouses turned off, etc.)"
msgstr ""

#: ../../classes/class_arvrinterface.rst:79
msgid "enum **Capabilities**"
msgstr ""

#: ../../classes/class_arvrinterface.rst:81
msgid "**ARVR_NONE** = **0** --- No ARVR capabilities."
msgstr ""

#: ../../classes/class_arvrinterface.rst:82
msgid ""
"**ARVR_MONO** = **1** --- This interface can work with normal rendering "
"output (non-HMD based AR)."
msgstr ""

#: ../../classes/class_arvrinterface.rst:83
msgid ""
"**ARVR_STEREO** = **2** --- This interface supports stereoscopic "
"rendering."
msgstr ""

#: ../../classes/class_arvrinterface.rst:84
msgid ""
"**ARVR_AR** = **4** --- This interface support AR (video background and "
"real world tracking)."
msgstr ""

#: ../../classes/class_arvrinterface.rst:85
msgid ""
"**ARVR_EXTERNAL** = **8** --- This interface outputs to an external "
"device, if the main viewport is used the on screen output is an "
"unmodified buffer of either the left or right eye (stretched if the "
"viewport size is not changed to the same aspect ratio of "
"get_render_targetsize. Using a separate viewport node frees up the main "
"viewport for other purposes."
msgstr ""

#: ../../classes/class_arvrinterface.rst:89
msgid "Description"
msgstr ""

#: ../../classes/class_arvrinterface.rst:91
msgid ""
"This class needs to be implemented to make an AR or VR platform available"
" to Godot and these should be implemented as C++ modules or GDNative "
"modules (note that for GDNative the subclass ARVRScriptInterface should "
"be used). Part of the interface is exposed to GDScript so you can detect,"
" enable and configure an AR or VR platform."
msgstr ""

#: ../../classes/class_arvrinterface.rst:93
msgid ""
"Interfaces should be written in such a way that simply enabling them will"
" give us a working setup. You can query the available interfaces through "
"ARVRServer."
msgstr ""

#: ../../classes/class_arvrinterface.rst:96
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_arvrinterface.rst:100
msgid ":ref:`int<class_int>` **get_capabilities** **(** **)** const"
msgstr ""

#: ../../classes/class_arvrinterface.rst:102
msgid ""
"Returns a combination of flags providing information about the "
"capabilities of this interface."
msgstr ""

#: ../../classes/class_arvrinterface.rst:106
msgid ":ref:`String<class_string>` **get_name** **(** **)** const"
msgstr ""

#: ../../classes/class_arvrinterface.rst:108
msgid "Returns the name of this interface (OpenVR, OpenHMD, ARKit, etc)."
msgstr ""

#: ../../classes/class_arvrinterface.rst:112
msgid ":ref:`Vector2<class_vector2>` **get_render_targetsize** **(** **)**"
msgstr ""

#: ../../classes/class_arvrinterface.rst:114
msgid ""
"Returns the resolution at which we should render our intermediate results"
" before things like lens distortion are applied by the VR platform."
msgstr ""

#: ../../classes/class_arvrinterface.rst:118
msgid ":ref:`int<class_int>` **get_tracking_status** **(** **)** const"
msgstr ""

#: ../../classes/class_arvrinterface.rst:120
msgid ""
"If supported, returns the status of our tracking. This will allow you to "
"provide feedback to the user whether there are issues with positional "
"tracking."
msgstr ""

#: ../../classes/class_arvrinterface.rst:124
msgid ":ref:`bool<class_bool>` **initialize** **(** **)**"
msgstr ""

#: ../../classes/class_arvrinterface.rst:126
msgid ""
"Call this to initialize this interface. The first interface that is "
"initialized is identified as the primary interface and it will be used "
"for rendering output."
msgstr ""

#: ../../classes/class_arvrinterface.rst:128
msgid ""
"After initializing the interface you want to use you then need to enable "
"the AR/VR mode of a viewport and rendering should commence."
msgstr ""

#: ../../classes/class_arvrinterface.rst:130
msgid ""
"Note that you must enable the AR/VR mode on the main viewport for any "
"device that uses the main output of Godot such as for mobile VR."
msgstr ""

#: ../../classes/class_arvrinterface.rst:132
msgid ""
"If you do this for a platform that handles its own output (such as "
"OpenVR) Godot will show just one eye without distortion on screen. "
"Alternatively you can add a separate viewport node to your scene and "
"enable AR/VR on that viewport and it will be used to output to the HMD "
"leaving you free to do anything you like in the main window such as using"
" a separate camera as a spectator camera or render out something "
"completely different."
msgstr ""

#: ../../classes/class_arvrinterface.rst:134
msgid ""
"While currently not used you can activate additional interfaces, you may "
"wish to do this if you want to track controllers from other platforms. "
"However at this point in time only one interface can render to an HMD."
msgstr ""

#: ../../classes/class_arvrinterface.rst:138
msgid ":ref:`bool<class_bool>` **is_stereo** **(** **)**"
msgstr ""

#: ../../classes/class_arvrinterface.rst:140
msgid "Returns true if the current output of this interface is in stereo."
msgstr ""

#: ../../classes/class_arvrinterface.rst:144
msgid "void **uninitialize** **(** **)**"
msgstr ""

#: ../../classes/class_arvrinterface.rst:146
msgid "Turns the interface off."
msgstr ""

