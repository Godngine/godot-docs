# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_shape2d.rst:8
msgid "Shape2D"
msgstr ""

#: ../../classes/class_shape2d.rst:10
msgid ""
"**Inherits:** :ref:`Resource<class_resource>` **<** "
":ref:`Reference<class_reference>` **<** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_shape2d.rst:12
msgid ""
"**Inherited By:** :ref:`RayShape2D<class_rayshape2d>`, "
":ref:`CapsuleShape2D<class_capsuleshape2d>`, "
":ref:`LineShape2D<class_lineshape2d>`, "
":ref:`CircleShape2D<class_circleshape2d>`, "
":ref:`ConcavePolygonShape2D<class_concavepolygonshape2d>`, "
":ref:`ConvexPolygonShape2D<class_convexpolygonshape2d>`, "
":ref:`RectangleShape2D<class_rectangleshape2d>`, "
":ref:`SegmentShape2D<class_segmentshape2d>`"
msgstr ""

#: ../../classes/class_shape2d.rst:14
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_shape2d.rst:17
msgid "Brief Description"
msgstr ""

#: ../../classes/class_shape2d.rst:19
msgid "Base class for all 2D Shapes."
msgstr ""

#: ../../classes/class_shape2d.rst:22
msgid "Member Functions"
msgstr ""

#: ../../classes/class_shape2d.rst:25 ../../classes/class_shape2d.rst:29
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_shape2d.rst:25
msgid ""
":ref:`collide<class_Shape2D_collide>` **(** "
":ref:`Transform2D<class_transform2d>` local_xform, "
":ref:`Shape2D<class_shape2d>` with_shape, "
":ref:`Transform2D<class_transform2d>` shape_xform **)**"
msgstr ""

#: ../../classes/class_shape2d.rst:27 ../../classes/class_shape2d.rst:31
msgid ":ref:`Variant<class_variant>`"
msgstr ""

#: ../../classes/class_shape2d.rst:27
msgid ""
":ref:`collide_and_get_contacts<class_Shape2D_collide_and_get_contacts>` "
"**(** :ref:`Transform2D<class_transform2d>` local_xform, "
":ref:`Shape2D<class_shape2d>` with_shape, "
":ref:`Transform2D<class_transform2d>` shape_xform **)**"
msgstr ""

#: ../../classes/class_shape2d.rst:29
msgid ""
":ref:`collide_with_motion<class_Shape2D_collide_with_motion>` **(** "
":ref:`Transform2D<class_transform2d>` local_xform, "
":ref:`Vector2<class_vector2>` local_motion, :ref:`Shape2D<class_shape2d>`"
" with_shape, :ref:`Transform2D<class_transform2d>` shape_xform, "
":ref:`Vector2<class_vector2>` shape_motion **)**"
msgstr ""

#: ../../classes/class_shape2d.rst:31
msgid ""
":ref:`collide_with_motion_and_get_contacts<class_Shape2D_collide_with_motion_and_get_contacts>`"
" **(** :ref:`Transform2D<class_transform2d>` local_xform, "
":ref:`Vector2<class_vector2>` local_motion, :ref:`Shape2D<class_shape2d>`"
" with_shape, :ref:`Transform2D<class_transform2d>` shape_xform, "
":ref:`Vector2<class_vector2>` shape_motion **)**"
msgstr ""

#: ../../classes/class_shape2d.rst:35
msgid "Member Variables"
msgstr ""

#: ../../classes/class_shape2d.rst:39
msgid ":ref:`float<class_float>` **custom_solver_bias**"
msgstr ""

#: ../../classes/class_shape2d.rst:43
msgid "Description"
msgstr ""

#: ../../classes/class_shape2d.rst:45
msgid "Base class for all 2D Shapes. All 2D shape types inherit from this."
msgstr ""

#: ../../classes/class_shape2d.rst:48
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_shape2d.rst:52
msgid ""
":ref:`bool<class_bool>` **collide** **(** "
":ref:`Transform2D<class_transform2d>` local_xform, "
":ref:`Shape2D<class_shape2d>` with_shape, "
":ref:`Transform2D<class_transform2d>` shape_xform **)**"
msgstr ""

#: ../../classes/class_shape2d.rst:54
msgid "Return whether this shape is colliding with another."
msgstr ""

#: ../../classes/class_shape2d.rst:56 ../../classes/class_shape2d.rst:64
msgid ""
"This method needs the transformation matrix for this shape "
"(``local_xform``), the shape to check collisions with (``with_shape``), "
"and the transformation matrix of that shape (``shape_xform``)."
msgstr ""

#: ../../classes/class_shape2d.rst:60
msgid ""
":ref:`Variant<class_variant>` **collide_and_get_contacts** **(** "
":ref:`Transform2D<class_transform2d>` local_xform, "
":ref:`Shape2D<class_shape2d>` with_shape, "
":ref:`Transform2D<class_transform2d>` shape_xform **)**"
msgstr ""

#: ../../classes/class_shape2d.rst:62
msgid ""
"Return a list of the points where this shape touches another. If there "
"are no collisions, the list is empty."
msgstr ""

#: ../../classes/class_shape2d.rst:68
msgid ""
":ref:`bool<class_bool>` **collide_with_motion** **(** "
":ref:`Transform2D<class_transform2d>` local_xform, "
":ref:`Vector2<class_vector2>` local_motion, :ref:`Shape2D<class_shape2d>`"
" with_shape, :ref:`Transform2D<class_transform2d>` shape_xform, "
":ref:`Vector2<class_vector2>` shape_motion **)**"
msgstr ""

#: ../../classes/class_shape2d.rst:70
msgid ""
"Return whether this shape would collide with another, if a given movement"
" was applied."
msgstr ""

#: ../../classes/class_shape2d.rst:72 ../../classes/class_shape2d.rst:80
msgid ""
"This method needs the transformation matrix for this shape "
"(``local_xform``), the movement to test on this shape (``local_motion``),"
" the shape to check collisions with (``with_shape``), the transformation "
"matrix of that shape (``shape_xform``), and the movement to test onto the"
" other object (``shape_motion``)."
msgstr ""

#: ../../classes/class_shape2d.rst:76
msgid ""
":ref:`Variant<class_variant>` **collide_with_motion_and_get_contacts** "
"**(** :ref:`Transform2D<class_transform2d>` local_xform, "
":ref:`Vector2<class_vector2>` local_motion, :ref:`Shape2D<class_shape2d>`"
" with_shape, :ref:`Transform2D<class_transform2d>` shape_xform, "
":ref:`Vector2<class_vector2>` shape_motion **)**"
msgstr ""

#: ../../classes/class_shape2d.rst:78
msgid ""
"Return a list of the points where this shape would touch another, if a "
"given movement was applied. If there are no collisions, the list is "
"empty."
msgstr ""

