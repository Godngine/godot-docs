# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_tween.rst:8
msgid "Tween"
msgstr ""

#: ../../classes/class_tween.rst:10
msgid "**Inherits:** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_tween.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_tween.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_tween.rst:17
msgid "Node useful for animations with unknown start and end points."
msgstr ""

#: ../../classes/class_tween.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_tween.rst:23 ../../classes/class_tween.rst:25
#: ../../classes/class_tween.rst:29 ../../classes/class_tween.rst:31
#: ../../classes/class_tween.rst:33 ../../classes/class_tween.rst:35
#: ../../classes/class_tween.rst:37 ../../classes/class_tween.rst:39
#: ../../classes/class_tween.rst:41 ../../classes/class_tween.rst:43
#: ../../classes/class_tween.rst:45 ../../classes/class_tween.rst:47
#: ../../classes/class_tween.rst:49 ../../classes/class_tween.rst:51
#: ../../classes/class_tween.rst:55 ../../classes/class_tween.rst:57
#: ../../classes/class_tween.rst:59 ../../classes/class_tween.rst:61
#: ../../classes/class_tween.rst:63
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_tween.rst:23
msgid ""
":ref:`follow_method<class_Tween_follow_method>` **(** "
":ref:`Object<class_object>` object, :ref:`String<class_string>` method, "
":ref:`Variant<class_variant>` initial_val, :ref:`Object<class_object>` "
"target, :ref:`String<class_string>` target_method, "
":ref:`float<class_float>` duration, :ref:`int<class_int>` trans_type, "
":ref:`int<class_int>` ease_type, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../../classes/class_tween.rst:25
msgid ""
":ref:`follow_property<class_Tween_follow_property>` **(** "
":ref:`Object<class_object>` object, :ref:`NodePath<class_nodepath>` "
"property, :ref:`Variant<class_variant>` initial_val, "
":ref:`Object<class_object>` target, :ref:`NodePath<class_nodepath>` "
"target_property, :ref:`float<class_float>` duration, "
":ref:`int<class_int>` trans_type, :ref:`int<class_int>` ease_type, "
":ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../../classes/class_tween.rst:27 ../../classes/class_tween.rst:65
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../../classes/class_tween.rst:27
msgid ":ref:`get_runtime<class_Tween_get_runtime>` **(** **)** const"
msgstr ""

#: ../../classes/class_tween.rst:29
msgid ""
":ref:`interpolate_callback<class_Tween_interpolate_callback>` **(** "
":ref:`Object<class_object>` object, :ref:`float<class_float>` duration, "
":ref:`String<class_string>` callback, :ref:`Variant<class_variant>` "
"arg1=null, :ref:`Variant<class_variant>` arg2=null, "
":ref:`Variant<class_variant>` arg3=null, :ref:`Variant<class_variant>` "
"arg4=null, :ref:`Variant<class_variant>` arg5=null **)**"
msgstr ""

#: ../../classes/class_tween.rst:31
msgid ""
":ref:`interpolate_deferred_callback<class_Tween_interpolate_deferred_callback>`"
" **(** :ref:`Object<class_object>` object, :ref:`float<class_float>` "
"duration, :ref:`String<class_string>` callback, "
":ref:`Variant<class_variant>` arg1=null, :ref:`Variant<class_variant>` "
"arg2=null, :ref:`Variant<class_variant>` arg3=null, "
":ref:`Variant<class_variant>` arg4=null, :ref:`Variant<class_variant>` "
"arg5=null **)**"
msgstr ""

#: ../../classes/class_tween.rst:33
msgid ""
":ref:`interpolate_method<class_Tween_interpolate_method>` **(** "
":ref:`Object<class_object>` object, :ref:`String<class_string>` method, "
":ref:`Variant<class_variant>` initial_val, :ref:`Variant<class_variant>` "
"final_val, :ref:`float<class_float>` duration, :ref:`int<class_int>` "
"trans_type, :ref:`int<class_int>` ease_type, :ref:`float<class_float>` "
"delay=0 **)**"
msgstr ""

#: ../../classes/class_tween.rst:35
msgid ""
":ref:`interpolate_property<class_Tween_interpolate_property>` **(** "
":ref:`Object<class_object>` object, :ref:`NodePath<class_nodepath>` "
"property, :ref:`Variant<class_variant>` initial_val, "
":ref:`Variant<class_variant>` final_val, :ref:`float<class_float>` "
"duration, :ref:`int<class_int>` trans_type, :ref:`int<class_int>` "
"ease_type, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../../classes/class_tween.rst:37
msgid ":ref:`is_active<class_Tween_is_active>` **(** **)** const"
msgstr ""

#: ../../classes/class_tween.rst:39
msgid ""
":ref:`remove<class_Tween_remove>` **(** :ref:`Object<class_object>` "
"object, :ref:`String<class_string>` key=\"\" **)**"
msgstr ""

#: ../../classes/class_tween.rst:41
msgid ":ref:`remove_all<class_Tween_remove_all>` **(** **)**"
msgstr ""

#: ../../classes/class_tween.rst:43
msgid ""
":ref:`reset<class_Tween_reset>` **(** :ref:`Object<class_object>` object,"
" :ref:`String<class_string>` key=\"\" **)**"
msgstr ""

#: ../../classes/class_tween.rst:45
msgid ":ref:`reset_all<class_Tween_reset_all>` **(** **)**"
msgstr ""

#: ../../classes/class_tween.rst:47
msgid ""
":ref:`resume<class_Tween_resume>` **(** :ref:`Object<class_object>` "
"object, :ref:`String<class_string>` key=\"\" **)**"
msgstr ""

#: ../../classes/class_tween.rst:49
msgid ":ref:`resume_all<class_Tween_resume_all>` **(** **)**"
msgstr ""

#: ../../classes/class_tween.rst:51
msgid ":ref:`seek<class_Tween_seek>` **(** :ref:`float<class_float>` time **)**"
msgstr ""

#: ../../classes/class_tween.rst:53
msgid "void"
msgstr ""

#: ../../classes/class_tween.rst:53
msgid ""
":ref:`set_active<class_Tween_set_active>` **(** :ref:`bool<class_bool>` "
"active **)**"
msgstr ""

#: ../../classes/class_tween.rst:55
msgid ":ref:`start<class_Tween_start>` **(** **)**"
msgstr ""

#: ../../classes/class_tween.rst:57
msgid ""
":ref:`stop<class_Tween_stop>` **(** :ref:`Object<class_object>` object, "
":ref:`String<class_string>` key=\"\" **)**"
msgstr ""

#: ../../classes/class_tween.rst:59
msgid ":ref:`stop_all<class_Tween_stop_all>` **(** **)**"
msgstr ""

#: ../../classes/class_tween.rst:61
msgid ""
":ref:`targeting_method<class_Tween_targeting_method>` **(** "
":ref:`Object<class_object>` object, :ref:`String<class_string>` method, "
":ref:`Object<class_object>` initial, :ref:`String<class_string>` "
"initial_method, :ref:`Variant<class_variant>` final_val, "
":ref:`float<class_float>` duration, :ref:`int<class_int>` trans_type, "
":ref:`int<class_int>` ease_type, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../../classes/class_tween.rst:63
msgid ""
":ref:`targeting_property<class_Tween_targeting_property>` **(** "
":ref:`Object<class_object>` object, :ref:`NodePath<class_nodepath>` "
"property, :ref:`Object<class_object>` initial, "
":ref:`NodePath<class_nodepath>` initial_val, "
":ref:`Variant<class_variant>` final_val, :ref:`float<class_float>` "
"duration, :ref:`int<class_int>` trans_type, :ref:`int<class_int>` "
"ease_type, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../../classes/class_tween.rst:65
msgid ":ref:`tell<class_Tween_tell>` **(** **)** const"
msgstr ""

#: ../../classes/class_tween.rst:69
msgid "Signals"
msgstr ""

#: ../../classes/class_tween.rst:73
msgid ""
"**tween_completed** **(** :ref:`Object<class_object>` object, "
":ref:`NodePath<class_nodepath>` key **)**"
msgstr ""

#: ../../classes/class_tween.rst:75
msgid "This signal is emitted when a tween ends."
msgstr ""

#: ../../classes/class_tween.rst:79
msgid ""
"**tween_started** **(** :ref:`Object<class_object>` object, "
":ref:`NodePath<class_nodepath>` key **)**"
msgstr ""

#: ../../classes/class_tween.rst:81
msgid "This signal is emitted when a tween starts."
msgstr ""

#: ../../classes/class_tween.rst:85
msgid ""
"**tween_step** **(** :ref:`Object<class_object>` object, "
":ref:`NodePath<class_nodepath>` key, :ref:`float<class_float>` elapsed, "
":ref:`Object<class_object>` value **)**"
msgstr ""

#: ../../classes/class_tween.rst:87
msgid "This signal is emitted each step of the tweening."
msgstr ""

#: ../../classes/class_tween.rst:91
msgid "Member Variables"
msgstr ""

#: ../../classes/class_tween.rst:95
msgid ""
":ref:`TweenProcessMode<enum_tween_tweenprocessmode>` "
"**playback_process_mode**"
msgstr ""

#: ../../classes/class_tween.rst:99
msgid ""
":ref:`float<class_float>` **playback_speed** - The speed multiplier of "
"the tween. Set it to 1 for normal speed, 2 for two times nromal speed, "
"and 0.5 for half of the normal speed. Setting it to 0 would pause the "
"animation, but you might consider using "
":ref:`set_active<class_Tween_set_active>` or "
":ref:`stop_all<class_Tween_stop_all>` and "
":ref:`resume_all<class_Tween_resume_all>` for this."
msgstr ""

#: ../../classes/class_tween.rst:103
msgid ":ref:`bool<class_bool>` **repeat** - If ``true``, the tween will repeat."
msgstr ""

#: ../../classes/class_tween.rst:107
msgid "Enums"
msgstr ""

#: ../../classes/class_tween.rst:111
msgid "enum **TweenProcessMode**"
msgstr ""

#: ../../classes/class_tween.rst:113
msgid ""
"**TWEEN_PROCESS_PHYSICS** = **0** --- The ``Tween`` should use "
"``_physics_process`` for timekeeping when this is enabled."
msgstr ""

#: ../../classes/class_tween.rst:114
msgid ""
"**TWEEN_PROCESS_IDLE** = **1** --- The ``Tween`` should use ``_process`` "
"for timekeeping when this is enabled (default)."
msgstr ""

#: ../../classes/class_tween.rst:118
msgid "enum **EaseType**"
msgstr ""

#: ../../classes/class_tween.rst:120
msgid ""
"**EASE_IN** = **0** --- Signifies that the interpolation should be "
"focused in the beginning."
msgstr ""

#: ../../classes/class_tween.rst:121
msgid ""
"**EASE_OUT** = **1** --- Signifies that the interpolation should be "
"focused in the end."
msgstr ""

#: ../../classes/class_tween.rst:122
msgid ""
"**EASE_IN_OUT** = **2** --- Signifies that the interpolation should be "
"focused in both ends."
msgstr ""

#: ../../classes/class_tween.rst:123
msgid ""
"**EASE_OUT_IN** = **3** --- Signifies that the interpolation should be "
"focused in both ends, but they should be switched (a bit hard to explain,"
" try it for yourself to be sure)."
msgstr ""

#: ../../classes/class_tween.rst:127
msgid "enum **TransitionType**"
msgstr ""

#: ../../classes/class_tween.rst:129
msgid ""
"**TRANS_LINEAR** = **0** --- Means that the animation is interpolated "
"linearly."
msgstr ""

#: ../../classes/class_tween.rst:130
msgid ""
"**TRANS_SINE** = **1** --- Means that the animation is interpolated using"
" a sine wave."
msgstr ""

#: ../../classes/class_tween.rst:131
msgid ""
"**TRANS_QUINT** = **2** --- Means that the animation is interpolated with"
" a quinary (to the power of 5) function."
msgstr ""

#: ../../classes/class_tween.rst:132
msgid ""
"**TRANS_QUART** = **3** --- Means that the animation is interpolated with"
" a quartic (to the power of 4) function."
msgstr ""

#: ../../classes/class_tween.rst:133
msgid ""
"**TRANS_QUAD** = **4** --- Means that the animation is interpolated with "
"a quadratic (to the power of 2) function."
msgstr ""

#: ../../classes/class_tween.rst:134
msgid ""
"**TRANS_EXPO** = **5** --- Means that the animation is interpolated with "
"an exponential (some number to the power of x) function."
msgstr ""

#: ../../classes/class_tween.rst:135
msgid ""
"**TRANS_ELASTIC** = **6** --- Means that the animation is interpolated "
"with elasticity, wiggling around the edges."
msgstr ""

#: ../../classes/class_tween.rst:136
msgid ""
"**TRANS_CUBIC** = **7** --- Means that the animation is interpolated with"
" a cubic (to the power of 3) function."
msgstr ""

#: ../../classes/class_tween.rst:137
msgid ""
"**TRANS_CIRC** = **8** --- Means that the animation is interpolated with "
"a function using square roots."
msgstr ""

#: ../../classes/class_tween.rst:138
msgid ""
"**TRANS_BOUNCE** = **9** --- Means that the animation is interpolated by "
"bouncing at, but never surpassing, the end."
msgstr ""

#: ../../classes/class_tween.rst:139
msgid ""
"**TRANS_BACK** = **10** --- Means that the animation is interpolated "
"backing out at edges."
msgstr ""

#: ../../classes/class_tween.rst:143
msgid "Description"
msgstr ""

#: ../../classes/class_tween.rst:145
msgid ""
"Node useful for animations with unknown start and end points, procedural "
"animations, making one node follow another, and other simple behavior."
msgstr ""

#: ../../classes/class_tween.rst:147
msgid "Because it is easy to get it wrong, here is a quick usage example:"
msgstr ""

#: ../../classes/class_tween.rst:155
msgid ""
"Some of the methods of this class require a property name. You can get "
"the property name by hovering over the property in the inspector of the "
"editor."
msgstr ""

#: ../../classes/class_tween.rst:157
msgid ""
"Many of the methods accept ``trans_type`` and ``ease_type``. The first "
"accepts an TRANS\\_\\* constant, and refers to the way the timing of the "
"animation is handled (you might want to see ``http://easings.net/`` for "
"some examples). The second accepts an EASE\\_\\* constant, and controls "
"the where ``trans_type`` is applied to the interpolation (in the "
"beginning, the end, or both). If you don't know which transition and "
"easing to pick, you can try different TRANS\\_\\* constants with "
"EASE_IN_OUT, and use the one that looks best."
msgstr ""

#: ../../classes/class_tween.rst:160
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_tween.rst:164
msgid ""
":ref:`bool<class_bool>` **follow_method** **(** "
":ref:`Object<class_object>` object, :ref:`String<class_string>` method, "
":ref:`Variant<class_variant>` initial_val, :ref:`Object<class_object>` "
"target, :ref:`String<class_string>` target_method, "
":ref:`float<class_float>` duration, :ref:`int<class_int>` trans_type, "
":ref:`int<class_int>` ease_type, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../../classes/class_tween.rst:166
msgid ""
"Follow ``method`` of ``object`` and apply the returned value on "
"``target_method`` of ``target``, beginning from ``initial_val`` for "
"``duration`` seconds, ``delay`` later. Methods are animated by calling "
"them with consequitive values."
msgstr ""

#: ../../classes/class_tween.rst:168 ../../classes/class_tween.rst:176
#: ../../classes/class_tween.rst:202 ../../classes/class_tween.rst:210
#: ../../classes/class_tween.rst:290 ../../classes/class_tween.rst:298
msgid ""
"``trans_type`` accepts TRANS\\_\\* constants, and is the way the "
"animation is interpolated, while ``ease_type`` accepts EASE\\_\\* "
"constants, and controls the place of the interpolation (the beginning, "
"the end, or both). You can read more about them in the class description."
msgstr ""

#: ../../classes/class_tween.rst:172
msgid ""
":ref:`bool<class_bool>` **follow_property** **(** "
":ref:`Object<class_object>` object, :ref:`NodePath<class_nodepath>` "
"property, :ref:`Variant<class_variant>` initial_val, "
":ref:`Object<class_object>` target, :ref:`NodePath<class_nodepath>` "
"target_property, :ref:`float<class_float>` duration, "
":ref:`int<class_int>` trans_type, :ref:`int<class_int>` ease_type, "
":ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../../classes/class_tween.rst:174
msgid ""
"Follow ``property`` of ``object`` and apply it on ``target_property`` of "
"``target``, beginning from ``initial_val`` for ``duration`` seconds, "
"``delay`` seconds later. Note that ``target:target_property`` would equal"
" ``object:property`` at the end of the tween."
msgstr ""

#: ../../classes/class_tween.rst:180
msgid ":ref:`float<class_float>` **get_runtime** **(** **)** const"
msgstr ""

#: ../../classes/class_tween.rst:182
msgid ""
"Returns the time needed for all tweens to end in seconds, measured from "
"the start. Thus, if you have two tweens, one ending 10 seconds after the "
"start and the other - 20 seconds, it would return 20 seconds, as by that "
"time all tweens would have finished."
msgstr ""

#: ../../classes/class_tween.rst:186
msgid ""
":ref:`bool<class_bool>` **interpolate_callback** **(** "
":ref:`Object<class_object>` object, :ref:`float<class_float>` duration, "
":ref:`String<class_string>` callback, :ref:`Variant<class_variant>` "
"arg1=null, :ref:`Variant<class_variant>` arg2=null, "
":ref:`Variant<class_variant>` arg3=null, :ref:`Variant<class_variant>` "
"arg4=null, :ref:`Variant<class_variant>` arg5=null **)**"
msgstr ""

#: ../../classes/class_tween.rst:188
msgid ""
"Call ``callback`` of ``object`` after ``duration``. ``arg1``-``arg5`` are"
" arguments to be passed to the callback."
msgstr ""

#: ../../classes/class_tween.rst:192
msgid ""
":ref:`bool<class_bool>` **interpolate_deferred_callback** **(** "
":ref:`Object<class_object>` object, :ref:`float<class_float>` duration, "
":ref:`String<class_string>` callback, :ref:`Variant<class_variant>` "
"arg1=null, :ref:`Variant<class_variant>` arg2=null, "
":ref:`Variant<class_variant>` arg3=null, :ref:`Variant<class_variant>` "
"arg4=null, :ref:`Variant<class_variant>` arg5=null **)**"
msgstr ""

#: ../../classes/class_tween.rst:194
msgid ""
"Call ``callback`` of ``object`` after ``duration`` on the main thread "
"(similar to :ref:`Object.call_deferred<class_Object_call_deferred>`). "
"``arg1``-``arg5`` are arguments to be passed to the callback."
msgstr ""

#: ../../classes/class_tween.rst:198
msgid ""
":ref:`bool<class_bool>` **interpolate_method** **(** "
":ref:`Object<class_object>` object, :ref:`String<class_string>` method, "
":ref:`Variant<class_variant>` initial_val, :ref:`Variant<class_variant>` "
"final_val, :ref:`float<class_float>` duration, :ref:`int<class_int>` "
"trans_type, :ref:`int<class_int>` ease_type, :ref:`float<class_float>` "
"delay=0 **)**"
msgstr ""

#: ../../classes/class_tween.rst:200
msgid ""
"Animate ``method`` of ``object`` from ``initial_val`` to ``final_val`` "
"for ``duration`` seconds, ``delay`` seconds later. Methods are animated "
"by calling them with consecutive values."
msgstr ""

#: ../../classes/class_tween.rst:206
msgid ""
":ref:`bool<class_bool>` **interpolate_property** **(** "
":ref:`Object<class_object>` object, :ref:`NodePath<class_nodepath>` "
"property, :ref:`Variant<class_variant>` initial_val, "
":ref:`Variant<class_variant>` final_val, :ref:`float<class_float>` "
"duration, :ref:`int<class_int>` trans_type, :ref:`int<class_int>` "
"ease_type, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../../classes/class_tween.rst:208
msgid ""
"Animate ``property`` of ``object`` from ``initial_val`` to ``final_val`` "
"for ``duration`` seconds, ``delay`` seconds later."
msgstr ""

#: ../../classes/class_tween.rst:214
msgid ":ref:`bool<class_bool>` **is_active** **(** **)** const"
msgstr ""

#: ../../classes/class_tween.rst:216
msgid ""
"Returns true if any tweens are currently running, and false otherwise. "
"Note that this method doesn't consider tweens that have ended."
msgstr ""

#: ../../classes/class_tween.rst:220
msgid ""
":ref:`bool<class_bool>` **remove** **(** :ref:`Object<class_object>` "
"object, :ref:`String<class_string>` key=\"\" **)**"
msgstr ""

#: ../../classes/class_tween.rst:222
msgid ""
"Stop animating and completely remove a tween, given its object and "
"property/method pair. Passing empty String as key will remove all tweens "
"for given object."
msgstr ""

#: ../../classes/class_tween.rst:226
msgid ":ref:`bool<class_bool>` **remove_all** **(** **)**"
msgstr ""

#: ../../classes/class_tween.rst:228
msgid "Stop animating and completely remove all tweens."
msgstr ""

#: ../../classes/class_tween.rst:232
msgid ""
":ref:`bool<class_bool>` **reset** **(** :ref:`Object<class_object>` "
"object, :ref:`String<class_string>` key=\"\" **)**"
msgstr ""

#: ../../classes/class_tween.rst:234
msgid ""
"Resets a tween to the initial value (the one given, not the one before "
"the tween), given its object and property/method pair. Passing empty "
"String as key will reset all tweens for given object."
msgstr ""

#: ../../classes/class_tween.rst:238
msgid ":ref:`bool<class_bool>` **reset_all** **(** **)**"
msgstr ""

#: ../../classes/class_tween.rst:240
msgid ""
"Resets all tweens to their initial values (the ones given, not those "
"before the tween)."
msgstr ""

#: ../../classes/class_tween.rst:244
msgid ""
":ref:`bool<class_bool>` **resume** **(** :ref:`Object<class_object>` "
"object, :ref:`String<class_string>` key=\"\" **)**"
msgstr ""

#: ../../classes/class_tween.rst:246
msgid ""
"Continue animating a stopped tween, given its object and property/method "
"pair. Passing empty String as key will resume all tweens for given "
"object."
msgstr ""

#: ../../classes/class_tween.rst:250
msgid ":ref:`bool<class_bool>` **resume_all** **(** **)**"
msgstr ""

#: ../../classes/class_tween.rst:252
msgid "Continue animating all stopped tweens."
msgstr ""

#: ../../classes/class_tween.rst:256
msgid ""
":ref:`bool<class_bool>` **seek** **(** :ref:`float<class_float>` time "
"**)**"
msgstr ""

#: ../../classes/class_tween.rst:258
msgid "Seek the animation to the given ``time`` in seconds."
msgstr ""

#: ../../classes/class_tween.rst:262
msgid "void **set_active** **(** :ref:`bool<class_bool>` active **)**"
msgstr ""

#: ../../classes/class_tween.rst:264
msgid ""
"Activate/deactivate the tween. You can use this for pausing animations, "
"though :ref:`stop_all<class_Tween_stop_all>` and "
":ref:`resume_all<class_Tween_resume_all>` might be more fit for this."
msgstr ""

#: ../../classes/class_tween.rst:268
msgid ":ref:`bool<class_bool>` **start** **(** **)**"
msgstr ""

#: ../../classes/class_tween.rst:270
msgid "Start the tween node. You can define tweens both before and after this."
msgstr ""

#: ../../classes/class_tween.rst:274
msgid ""
":ref:`bool<class_bool>` **stop** **(** :ref:`Object<class_object>` "
"object, :ref:`String<class_string>` key=\"\" **)**"
msgstr ""

#: ../../classes/class_tween.rst:276
msgid ""
"Stop animating a tween, given its object and property/method pair. "
"Passing empty String as key will stop all tweens for given object."
msgstr ""

#: ../../classes/class_tween.rst:280
msgid ":ref:`bool<class_bool>` **stop_all** **(** **)**"
msgstr ""

#: ../../classes/class_tween.rst:282
msgid "Stop animating all tweens."
msgstr ""

#: ../../classes/class_tween.rst:286
msgid ""
":ref:`bool<class_bool>` **targeting_method** **(** "
":ref:`Object<class_object>` object, :ref:`String<class_string>` method, "
":ref:`Object<class_object>` initial, :ref:`String<class_string>` "
"initial_method, :ref:`Variant<class_variant>` final_val, "
":ref:`float<class_float>` duration, :ref:`int<class_int>` trans_type, "
":ref:`int<class_int>` ease_type, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../../classes/class_tween.rst:288
msgid ""
"Animate ``method`` of ``object`` from the value returned by "
"``initial.initial_method`` to ``final_val`` for ``duration`` seconds, "
"``delay`` seconds later. Methods are animated by calling them with "
"consecutive values."
msgstr ""

#: ../../classes/class_tween.rst:294
msgid ""
":ref:`bool<class_bool>` **targeting_property** **(** "
":ref:`Object<class_object>` object, :ref:`NodePath<class_nodepath>` "
"property, :ref:`Object<class_object>` initial, "
":ref:`NodePath<class_nodepath>` initial_val, "
":ref:`Variant<class_variant>` final_val, :ref:`float<class_float>` "
"duration, :ref:`int<class_int>` trans_type, :ref:`int<class_int>` "
"ease_type, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../../classes/class_tween.rst:296
msgid ""
"Animate ``property`` of ``object`` from the current value of the "
"``initial_val`` property of ``initial`` to ``final_val`` for ``duration``"
" seconds, ``delay`` seconds later."
msgstr ""

#: ../../classes/class_tween.rst:302
msgid ":ref:`float<class_float>` **tell** **(** **)** const"
msgstr ""

#: ../../classes/class_tween.rst:304
msgid "Returns the current time of the tween."
msgstr ""

