# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_object.rst:8
msgid "Object"
msgstr ""

#: ../../classes/class_object.rst:10
msgid ""
"**Inherited By:** :ref:`Reference<class_reference>`, "
":ref:`Physics2DServer<class_physics2dserver>`, "
":ref:`MainLoop<class_mainloop>`, :ref:`Input<class_input>`, "
":ref:`Node<class_node>`, :ref:`Geometry<class_geometry>`, "
":ref:`ARVRPositionalTracker<class_arvrpositionaltracker>`, "
":ref:`TreeItem<class_treeitem>`, "
":ref:`PhysicsDirectBodyState<class_physicsdirectbodystate>`, "
":ref:`JavaScript<class_javascript>`, :ref:`ARVRServer<class_arvrserver>`,"
" :ref:`PhysicsDirectSpaceState<class_physicsdirectspacestate>`, "
":ref:`Engine<class_engine>`, "
":ref:`Physics2DDirectSpaceState<class_physics2ddirectspacestate>`, "
":ref:`InputMap<class_inputmap>`, :ref:`UndoRedo<class_undoredo>`, "
":ref:`PhysicsServer<class_physicsserver>`, "
":ref:`ProjectSettings<class_projectsettings>`, "
":ref:`ResourceSaver<class_resourcesaver>`, "
":ref:`Performance<class_performance>`, "
":ref:`ResourceLoader<class_resourceloader>`, :ref:`JSON<class_json>`, "
":ref:`AudioServer<class_audioserver>`, :ref:`IP<class_ip>`, "
":ref:`ClassDB<class_classdb>`, :ref:`VisualServer<class_visualserver>`, "
":ref:`OS<class_os>`, :ref:`GodotSharp<class_godotsharp>`, "
":ref:`EditorSelection<class_editorselection>`, "
":ref:`Physics2DDirectBodyState<class_physics2ddirectbodystate>`, "
":ref:`VisualScriptEditor<class_visualscripteditor>`, "
":ref:`TranslationServer<class_translationserver>`, "
":ref:`EditorFileSystemDirectory<class_editorfilesystemdirectory>`"
msgstr ""

#: ../../classes/class_object.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_object.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_object.rst:17
msgid "Base class for all non built-in types."
msgstr ""

#: ../../classes/class_object.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_object.rst:23 ../../classes/class_object.rst:27
#: ../../classes/class_object.rst:29 ../../classes/class_object.rst:33
#: ../../classes/class_object.rst:45 ../../classes/class_object.rst:49
#: ../../classes/class_object.rst:89 ../../classes/class_object.rst:91
#: ../../classes/class_object.rst:93 ../../classes/class_object.rst:95
#: ../../classes/class_object.rst:97 ../../classes/class_object.rst:99
#: ../../classes/class_object.rst:101 ../../classes/class_object.rst:103
msgid "void"
msgstr ""

#: ../../classes/class_object.rst:23
msgid ""
":ref:`_get<class_Object__get>` **(** :ref:`String<class_string>` property"
" **)** virtual"
msgstr ""

#: ../../classes/class_object.rst:25 ../../classes/class_object.rst:55
#: ../../classes/class_object.rst:65 ../../classes/class_object.rst:67
#: ../../classes/class_object.rst:71 ../../classes/class_object.rst:73
msgid ":ref:`Array<class_array>`"
msgstr ""

#: ../../classes/class_object.rst:25
msgid ""
":ref:`_get_property_list<class_Object__get_property_list>` **(** **)** "
"virtual"
msgstr ""

#: ../../classes/class_object.rst:27
msgid ":ref:`_init<class_Object__init>` **(** **)** virtual"
msgstr ""

#: ../../classes/class_object.rst:29
msgid ""
":ref:`_notification<class_Object__notification>` **(** "
":ref:`int<class_int>` what **)** virtual"
msgstr ""

#: ../../classes/class_object.rst:31 ../../classes/class_object.rst:41
#: ../../classes/class_object.rst:75 ../../classes/class_object.rst:77
#: ../../classes/class_object.rst:79 ../../classes/class_object.rst:81
#: ../../classes/class_object.rst:83 ../../classes/class_object.rst:85
#: ../../classes/class_object.rst:87
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_object.rst:31
msgid ""
":ref:`_set<class_Object__set>` **(** :ref:`String<class_string>` "
"property, :ref:`Variant<class_variant>` value **)** virtual"
msgstr ""

#: ../../classes/class_object.rst:33
msgid ""
":ref:`add_user_signal<class_Object_add_user_signal>` **(** "
":ref:`String<class_string>` signal, :ref:`Array<class_array>` arguments=["
"  ] **)**"
msgstr ""

#: ../../classes/class_object.rst:35 ../../classes/class_object.rst:37
#: ../../classes/class_object.rst:39 ../../classes/class_object.rst:47
#: ../../classes/class_object.rst:51 ../../classes/class_object.rst:57
#: ../../classes/class_object.rst:61
msgid ":ref:`Variant<class_variant>`"
msgstr ""

#: ../../classes/class_object.rst:35
msgid ""
":ref:`call<class_Object_call>` **(** :ref:`String<class_string>` method "
"**)** vararg"
msgstr ""

#: ../../classes/class_object.rst:37
msgid ""
":ref:`call_deferred<class_Object_call_deferred>` **(** "
":ref:`String<class_string>` method **)** vararg"
msgstr ""

#: ../../classes/class_object.rst:39
msgid ""
":ref:`callv<class_Object_callv>` **(** :ref:`String<class_string>` "
"method, :ref:`Array<class_array>` arg_array **)**"
msgstr ""

#: ../../classes/class_object.rst:41
msgid ""
":ref:`can_translate_messages<class_Object_can_translate_messages>` **(** "
"**)** const"
msgstr ""

#: ../../classes/class_object.rst:43 ../../classes/class_object.rst:59
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_object.rst:43
msgid ""
":ref:`connect<class_Object_connect>` **(** :ref:`String<class_string>` "
"signal, :ref:`Object<class_object>` target, :ref:`String<class_string>` "
"method, :ref:`Array<class_array>` binds=[  ], :ref:`int<class_int>` "
"flags=0 **)**"
msgstr ""

#: ../../classes/class_object.rst:45
msgid ""
":ref:`disconnect<class_Object_disconnect>` **(** "
":ref:`String<class_string>` signal, :ref:`Object<class_object>` target, "
":ref:`String<class_string>` method **)**"
msgstr ""

#: ../../classes/class_object.rst:47
msgid ""
":ref:`emit_signal<class_Object_emit_signal>` **(** "
":ref:`String<class_string>` signal **)** vararg"
msgstr ""

#: ../../classes/class_object.rst:49
msgid ":ref:`free<class_Object_free>` **(** **)**"
msgstr ""

#: ../../classes/class_object.rst:51
msgid ""
":ref:`get<class_Object_get>` **(** :ref:`String<class_string>` property "
"**)** const"
msgstr ""

#: ../../classes/class_object.rst:53 ../../classes/class_object.rst:105
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_object.rst:53
msgid ":ref:`get_class<class_Object_get_class>` **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:55
msgid ""
":ref:`get_incoming_connections<class_Object_get_incoming_connections>` "
"**(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:57
msgid ""
":ref:`get_indexed<class_Object_get_indexed>` **(** "
":ref:`NodePath<class_nodepath>` property **)** const"
msgstr ""

#: ../../classes/class_object.rst:59
msgid ":ref:`get_instance_id<class_Object_get_instance_id>` **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:61
msgid ""
":ref:`get_meta<class_Object_get_meta>` **(** :ref:`String<class_string>` "
"name **)** const"
msgstr ""

#: ../../classes/class_object.rst:63
msgid ":ref:`PoolStringArray<class_poolstringarray>`"
msgstr ""

#: ../../classes/class_object.rst:63
msgid ":ref:`get_meta_list<class_Object_get_meta_list>` **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:65
msgid ":ref:`get_method_list<class_Object_get_method_list>` **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:67
msgid ":ref:`get_property_list<class_Object_get_property_list>` **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:69
msgid ":ref:`Reference<class_reference>`"
msgstr ""

#: ../../classes/class_object.rst:69
msgid ":ref:`get_script<class_Object_get_script>` **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:71
msgid ""
":ref:`get_signal_connection_list<class_Object_get_signal_connection_list>`"
" **(** :ref:`String<class_string>` signal **)** const"
msgstr ""

#: ../../classes/class_object.rst:73
msgid ":ref:`get_signal_list<class_Object_get_signal_list>` **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:75
msgid ""
":ref:`has_meta<class_Object_has_meta>` **(** :ref:`String<class_string>` "
"name **)** const"
msgstr ""

#: ../../classes/class_object.rst:77
msgid ""
":ref:`has_method<class_Object_has_method>` **(** "
":ref:`String<class_string>` method **)** const"
msgstr ""

#: ../../classes/class_object.rst:79
msgid ""
":ref:`has_user_signal<class_Object_has_user_signal>` **(** "
":ref:`String<class_string>` signal **)** const"
msgstr ""

#: ../../classes/class_object.rst:81
msgid ""
":ref:`is_blocking_signals<class_Object_is_blocking_signals>` **(** **)** "
"const"
msgstr ""

#: ../../classes/class_object.rst:83
msgid ""
":ref:`is_class<class_Object_is_class>` **(** :ref:`String<class_string>` "
"type **)** const"
msgstr ""

#: ../../classes/class_object.rst:85
msgid ""
":ref:`is_connected<class_Object_is_connected>` **(** "
":ref:`String<class_string>` signal, :ref:`Object<class_object>` target, "
":ref:`String<class_string>` method **)** const"
msgstr ""

#: ../../classes/class_object.rst:87
msgid ""
":ref:`is_queued_for_deletion<class_Object_is_queued_for_deletion>` **(** "
"**)** const"
msgstr ""

#: ../../classes/class_object.rst:89
msgid ""
":ref:`notification<class_Object_notification>` **(** "
":ref:`int<class_int>` what, :ref:`bool<class_bool>` reversed=false **)**"
msgstr ""

#: ../../classes/class_object.rst:91
msgid ""
":ref:`property_list_changed_notify<class_Object_property_list_changed_notify>`"
" **(** **)**"
msgstr ""

#: ../../classes/class_object.rst:93
msgid ""
":ref:`set<class_Object_set>` **(** :ref:`String<class_string>` property, "
":ref:`Variant<class_variant>` value **)**"
msgstr ""

#: ../../classes/class_object.rst:95
msgid ""
":ref:`set_block_signals<class_Object_set_block_signals>` **(** "
":ref:`bool<class_bool>` enable **)**"
msgstr ""

#: ../../classes/class_object.rst:97
msgid ""
":ref:`set_indexed<class_Object_set_indexed>` **(** "
":ref:`NodePath<class_nodepath>` property, :ref:`Variant<class_variant>` "
"value **)**"
msgstr ""

#: ../../classes/class_object.rst:99
msgid ""
":ref:`set_message_translation<class_Object_set_message_translation>` "
"**(** :ref:`bool<class_bool>` enable **)**"
msgstr ""

#: ../../classes/class_object.rst:101
msgid ""
":ref:`set_meta<class_Object_set_meta>` **(** :ref:`String<class_string>` "
"name, :ref:`Variant<class_variant>` value **)**"
msgstr ""

#: ../../classes/class_object.rst:103
msgid ""
":ref:`set_script<class_Object_set_script>` **(** "
":ref:`Reference<class_reference>` script **)**"
msgstr ""

#: ../../classes/class_object.rst:105
msgid ""
":ref:`tr<class_Object_tr>` **(** :ref:`String<class_string>` message "
"**)** const"
msgstr ""

#: ../../classes/class_object.rst:109
msgid "Signals"
msgstr ""

#: ../../classes/class_object.rst:113
msgid "**script_changed** **(** **)**"
msgstr ""

#: ../../classes/class_object.rst:117
msgid "Numeric Constants"
msgstr ""

#: ../../classes/class_object.rst:119
msgid ""
"**NOTIFICATION_POSTINITIALIZE** = **0** --- Called right when the object "
"is initialized. Not available in script."
msgstr ""

#: ../../classes/class_object.rst:120
msgid ""
"**NOTIFICATION_PREDELETE** = **1** --- Called before the object is about "
"to be deleted."
msgstr ""

#: ../../classes/class_object.rst:123
msgid "Enums"
msgstr ""

#: ../../classes/class_object.rst:127
msgid "enum **ConnectFlags**"
msgstr ""

#: ../../classes/class_object.rst:129
msgid ""
"**CONNECT_DEFERRED** = **1** --- Connect a signal in deferred mode. This "
"way, signal emissions are stored in a queue, then set on idle time."
msgstr ""

#: ../../classes/class_object.rst:130
msgid ""
"**CONNECT_PERSIST** = **2** --- Persisting connections are saved when the"
" object is serialized to file."
msgstr ""

#: ../../classes/class_object.rst:131
msgid ""
"**CONNECT_ONESHOT** = **4** --- One shot connections disconnect "
"themselves after emission."
msgstr ""

#: ../../classes/class_object.rst:135
msgid "Description"
msgstr ""

#: ../../classes/class_object.rst:137
msgid ""
"Base class for all non built-in types. Everything not a built-in type "
"starts the inheritance chain from this class."
msgstr ""

#: ../../classes/class_object.rst:139
msgid ""
"Objects do not manage memory, if inheriting from one the object will most"
" likely have to be deleted manually (call the "
":ref:`free<class_Object_free>` function from the script or delete from "
"C++)."
msgstr ""

#: ../../classes/class_object.rst:141
msgid ""
"Some derivatives add memory management, such as "
":ref:`Reference<class_reference>` (which keeps a reference count and "
"deletes itself automatically when no longer referenced) and "
":ref:`Node<class_node>`, which deletes the children tree when deleted."
msgstr ""

#: ../../classes/class_object.rst:143
msgid ""
"Objects export properties, which are mainly useful for storage and "
"editing, but not really so much in programming. Properties are exported "
"in :ref:`_get_property_list<class_Object__get_property_list>` and handled"
" in :ref:`_get<class_Object__get>` and :ref:`_set<class_Object__set>`. "
"However, scripting languages and C++ have simpler means to export them."
msgstr ""

#: ../../classes/class_object.rst:145
msgid ""
"Objects also receive notifications "
"(:ref:`_notification<class_Object__notification>`). Notifications are a "
"simple way to notify the object about simple events, so they can all be "
"handled together."
msgstr ""

#: ../../classes/class_object.rst:148
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_object.rst:152
msgid "void **_get** **(** :ref:`String<class_string>` property **)** virtual"
msgstr ""

#: ../../classes/class_object.rst:154
msgid ""
"Returns the given property. Returns ``null`` if the ``property`` does not"
" exist."
msgstr ""

#: ../../classes/class_object.rst:158
msgid ":ref:`Array<class_array>` **_get_property_list** **(** **)** virtual"
msgstr ""

#: ../../classes/class_object.rst:160
msgid ""
"Returns the object's property list as an :ref:`Array<class_array>` of "
"dictionaries. Dictionaries must contain: name:String, type:int (see "
"TYPE\\_\\* enum in :ref:`@GlobalScope<class_@globalscope>`) and "
"optionally: hint:int (see PROPERTY_HINT\\_\\* in "
":ref:`@GlobalScope<class_@globalscope>`), hint_string:String, usage:int "
"(see PROPERTY_USAGE\\_\\* in :ref:`@GlobalScope<class_@globalscope>`)."
msgstr ""

#: ../../classes/class_object.rst:164
msgid "void **_init** **(** **)** virtual"
msgstr ""

#: ../../classes/class_object.rst:166
msgid "The virtual method called upon initialization."
msgstr ""

#: ../../classes/class_object.rst:170
msgid "void **_notification** **(** :ref:`int<class_int>` what **)** virtual"
msgstr ""

#: ../../classes/class_object.rst:172
msgid "Notify the object internally using an ID."
msgstr ""

#: ../../classes/class_object.rst:176
msgid ""
":ref:`bool<class_bool>` **_set** **(** :ref:`String<class_string>` "
"property, :ref:`Variant<class_variant>` value **)** virtual"
msgstr ""

#: ../../classes/class_object.rst:178
msgid "Sets a property. Returns ``true`` if the ``property`` exists."
msgstr ""

#: ../../classes/class_object.rst:182
msgid ""
"void **add_user_signal** **(** :ref:`String<class_string>` signal, "
":ref:`Array<class_array>` arguments=[  ] **)**"
msgstr ""

#: ../../classes/class_object.rst:184
msgid ""
"Adds a user-defined ``signal``. Arguments are optional, but can be added "
"as an :ref:`Array<class_array>` of dictionaries, each containing \"name\""
" and \"type\" (from :ref:`@GlobalScope<class_@globalscope>` TYPE\\_\\*)."
msgstr ""

#: ../../classes/class_object.rst:188
msgid ""
":ref:`Variant<class_variant>` **call** **(** :ref:`String<class_string>` "
"method **)** vararg"
msgstr ""

#: ../../classes/class_object.rst:190
msgid ""
"Calls the ``method`` on the object and returns a result. Pass parameters "
"as a comma separated list."
msgstr ""

#: ../../classes/class_object.rst:194
msgid ""
":ref:`Variant<class_variant>` **call_deferred** **(** "
":ref:`String<class_string>` method **)** vararg"
msgstr ""

#: ../../classes/class_object.rst:196
msgid ""
"Calls the ``method`` on the object during idle time and returns a result."
" Pass parameters as a comma separated list."
msgstr ""

#: ../../classes/class_object.rst:200
msgid ""
":ref:`Variant<class_variant>` **callv** **(** :ref:`String<class_string>`"
" method, :ref:`Array<class_array>` arg_array **)**"
msgstr ""

#: ../../classes/class_object.rst:202
msgid ""
"Calls the ``method`` on the object and returns a result. Pass parameters "
"as an :ref:`Array<class_array>`."
msgstr ""

#: ../../classes/class_object.rst:206
msgid ":ref:`bool<class_bool>` **can_translate_messages** **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:208
msgid "Returns ``true`` if the object can translate strings."
msgstr ""

#: ../../classes/class_object.rst:212
msgid ""
":ref:`int<class_int>` **connect** **(** :ref:`String<class_string>` "
"signal, :ref:`Object<class_object>` target, :ref:`String<class_string>` "
"method, :ref:`Array<class_array>` binds=[  ], :ref:`int<class_int>` "
"flags=0 **)**"
msgstr ""

#: ../../classes/class_object.rst:214
msgid ""
"Connects a ``signal`` to a ``method`` on a ``target`` object. Pass "
"optional ``binds`` to the call. Use ``flags`` to set deferred or one shot"
" connections. See ``CONNECT_*`` constants. A ``signal`` can only be "
"connected once to a ``method``. It will throw an error if already "
"connected. To avoid this, first use "
":ref:`is_connected<class_Object_is_connected>` to check for existing "
"connections."
msgstr ""

#: ../../classes/class_object.rst:218
msgid ""
"void **disconnect** **(** :ref:`String<class_string>` signal, "
":ref:`Object<class_object>` target, :ref:`String<class_string>` method "
"**)**"
msgstr ""

#: ../../classes/class_object.rst:220
msgid "Disconnects a ``signal`` from a ``method`` on the given ``target``."
msgstr ""

#: ../../classes/class_object.rst:224
msgid ""
":ref:`Variant<class_variant>` **emit_signal** **(** "
":ref:`String<class_string>` signal **)** vararg"
msgstr ""

#: ../../classes/class_object.rst:226
msgid "Emits the given ``signal``."
msgstr ""

#: ../../classes/class_object.rst:230
msgid "void **free** **(** **)**"
msgstr ""

#: ../../classes/class_object.rst:232
msgid "Deletes the object from memory."
msgstr ""

#: ../../classes/class_object.rst:236
msgid ""
":ref:`Variant<class_variant>` **get** **(** :ref:`String<class_string>` "
"property **)** const"
msgstr ""

#: ../../classes/class_object.rst:238
msgid "Returns a :ref:`Variant<class_variant>` for a ``property``."
msgstr ""

#: ../../classes/class_object.rst:242
msgid ":ref:`String<class_string>` **get_class** **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:244
msgid "Returns the object's class as a :ref:`String<class_string>`."
msgstr ""

#: ../../classes/class_object.rst:248
msgid ":ref:`Array<class_array>` **get_incoming_connections** **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:250
msgid ""
"Returns an :ref:`Array<class_array>` of dictionaries with information "
"about signals that are connected to the object."
msgstr ""

#: ../../classes/class_object.rst:252
msgid "Inside each :ref:`Dictionary<class_dictionary>` there are 3 fields:"
msgstr ""

#: ../../classes/class_object.rst:254
msgid "\"source\" is a reference to signal emitter."
msgstr ""

#: ../../classes/class_object.rst:256
msgid "\"signal_name\" is name of connected signal."
msgstr ""

#: ../../classes/class_object.rst:258
msgid "\"method_name\" is a name of method to which signal is connected."
msgstr ""

#: ../../classes/class_object.rst:262
msgid ""
":ref:`Variant<class_variant>` **get_indexed** **(** "
":ref:`NodePath<class_nodepath>` property **)** const"
msgstr ""

#: ../../classes/class_object.rst:266
msgid ":ref:`int<class_int>` **get_instance_id** **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:268
msgid "Returns the object's unique instance ID."
msgstr ""

#: ../../classes/class_object.rst:272
msgid ""
":ref:`Variant<class_variant>` **get_meta** **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_object.rst:274
msgid "Returns the object's metadata for the given ``name``."
msgstr ""

#: ../../classes/class_object.rst:278
msgid ""
":ref:`PoolStringArray<class_poolstringarray>` **get_meta_list** **(** "
"**)** const"
msgstr ""

#: ../../classes/class_object.rst:280
msgid ""
"Returns the object's metadata as a "
":ref:`PoolStringArray<class_poolstringarray>`."
msgstr ""

#: ../../classes/class_object.rst:284
msgid ":ref:`Array<class_array>` **get_method_list** **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:286
msgid ""
"Returns the object's methods and their signatures as an "
":ref:`Array<class_array>`."
msgstr ""

#: ../../classes/class_object.rst:290
msgid ":ref:`Array<class_array>` **get_property_list** **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:292
msgid ""
"Returns the list of properties as an :ref:`Array<class_array>` of "
"dictionaries. Dictionaries contain: name:String, type:int (see TYPE\\_\\*"
" enum in :ref:`@GlobalScope<class_@globalscope>`) and optionally: "
"hint:int (see PROPERTY_HINT\\_\\* in "
":ref:`@GlobalScope<class_@globalscope>`), hint_string:String, usage:int "
"(see PROPERTY_USAGE\\_\\* in :ref:`@GlobalScope<class_@globalscope>`)."
msgstr ""

#: ../../classes/class_object.rst:296
msgid ":ref:`Reference<class_reference>` **get_script** **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:298
msgid ""
"Returns the object's :ref:`Script<class_script>` or ``null`` if one "
"doesn't exist."
msgstr ""

#: ../../classes/class_object.rst:302
msgid ""
":ref:`Array<class_array>` **get_signal_connection_list** **(** "
":ref:`String<class_string>` signal **)** const"
msgstr ""

#: ../../classes/class_object.rst:304
msgid ""
"Returns an :ref:`Array<class_array>` of connections for the given "
"``signal``."
msgstr ""

#: ../../classes/class_object.rst:308
msgid ":ref:`Array<class_array>` **get_signal_list** **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:310
msgid ""
"Returns the list of signals as an :ref:`Array<class_array>` of "
"dictionaries."
msgstr ""

#: ../../classes/class_object.rst:314
msgid ""
":ref:`bool<class_bool>` **has_meta** **(** :ref:`String<class_string>` "
"name **)** const"
msgstr ""

#: ../../classes/class_object.rst:316
msgid "Returns ``true`` if a metadata is found with the given ``name``."
msgstr ""

#: ../../classes/class_object.rst:320
msgid ""
":ref:`bool<class_bool>` **has_method** **(** :ref:`String<class_string>` "
"method **)** const"
msgstr ""

#: ../../classes/class_object.rst:322
msgid "Returns ``true`` if the object contains the given ``method``."
msgstr ""

#: ../../classes/class_object.rst:326
msgid ""
":ref:`bool<class_bool>` **has_user_signal** **(** "
":ref:`String<class_string>` signal **)** const"
msgstr ""

#: ../../classes/class_object.rst:328
msgid "Returns ``true`` if the given user-defined ``signal`` exists."
msgstr ""

#: ../../classes/class_object.rst:332
msgid ":ref:`bool<class_bool>` **is_blocking_signals** **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:334
msgid "Returns ``true`` if signal emission blocking is enabled."
msgstr ""

#: ../../classes/class_object.rst:338
msgid ""
":ref:`bool<class_bool>` **is_class** **(** :ref:`String<class_string>` "
"type **)** const"
msgstr ""

#: ../../classes/class_object.rst:340
msgid "Returns ``true`` if the object inherits from the given ``type``."
msgstr ""

#: ../../classes/class_object.rst:344
msgid ""
":ref:`bool<class_bool>` **is_connected** **(** "
":ref:`String<class_string>` signal, :ref:`Object<class_object>` target, "
":ref:`String<class_string>` method **)** const"
msgstr ""

#: ../../classes/class_object.rst:346
msgid ""
"Returns ``true`` if a connection exists for a given ``signal``, "
"``target``, and ``method``."
msgstr ""

#: ../../classes/class_object.rst:350
msgid ":ref:`bool<class_bool>` **is_queued_for_deletion** **(** **)** const"
msgstr ""

#: ../../classes/class_object.rst:352
msgid "Returns ``true`` if the ``queue_free`` method was called for the object."
msgstr ""

#: ../../classes/class_object.rst:356
msgid ""
"void **notification** **(** :ref:`int<class_int>` what, "
":ref:`bool<class_bool>` reversed=false **)**"
msgstr ""

#: ../../classes/class_object.rst:358
msgid "Notify the object of something."
msgstr ""

#: ../../classes/class_object.rst:362
msgid "void **property_list_changed_notify** **(** **)**"
msgstr ""

#: ../../classes/class_object.rst:366
msgid ""
"void **set** **(** :ref:`String<class_string>` property, "
":ref:`Variant<class_variant>` value **)**"
msgstr ""

#: ../../classes/class_object.rst:368
msgid "Set property into the object."
msgstr ""

#: ../../classes/class_object.rst:372
msgid "void **set_block_signals** **(** :ref:`bool<class_bool>` enable **)**"
msgstr ""

#: ../../classes/class_object.rst:374
msgid "If set to true, signal emission is blocked."
msgstr ""

#: ../../classes/class_object.rst:378
msgid ""
"void **set_indexed** **(** :ref:`NodePath<class_nodepath>` property, "
":ref:`Variant<class_variant>` value **)**"
msgstr ""

#: ../../classes/class_object.rst:382
msgid ""
"void **set_message_translation** **(** :ref:`bool<class_bool>` enable "
"**)**"
msgstr ""

#: ../../classes/class_object.rst:384
msgid ""
"Define whether the object can translate strings (with calls to "
":ref:`tr<class_Object_tr>`). Default is true."
msgstr ""

#: ../../classes/class_object.rst:388
msgid ""
"void **set_meta** **(** :ref:`String<class_string>` name, "
":ref:`Variant<class_variant>` value **)**"
msgstr ""

#: ../../classes/class_object.rst:390
msgid ""
"Set a metadata into the object. Metadata is serialized. Metadata can be "
"*anything*."
msgstr ""

#: ../../classes/class_object.rst:394
msgid "void **set_script** **(** :ref:`Reference<class_reference>` script **)**"
msgstr ""

#: ../../classes/class_object.rst:396
msgid "Set a script into the object, scripts extend the object functionality."
msgstr ""

#: ../../classes/class_object.rst:400
msgid ""
":ref:`String<class_string>` **tr** **(** :ref:`String<class_string>` "
"message **)** const"
msgstr ""

#: ../../classes/class_object.rst:402
msgid ""
"Translate a message. Only works if message translation is enabled (which "
"it is by default). See "
":ref:`set_message_translation<class_Object_set_message_translation>`."
msgstr ""

