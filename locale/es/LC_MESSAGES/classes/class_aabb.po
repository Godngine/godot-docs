# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_aabb.rst:8
msgid "AABB"
msgstr ""

#: ../../classes/class_aabb.rst:10
msgid "**Category:** Built-In Types"
msgstr ""

#: ../../classes/class_aabb.rst:13
msgid "Brief Description"
msgstr ""

#: ../../classes/class_aabb.rst:15
msgid "Axis-Aligned Bounding Box."
msgstr ""

#: ../../classes/class_aabb.rst:18
msgid "Member Functions"
msgstr ""

#: ../../classes/class_aabb.rst:21 ../../classes/class_aabb.rst:25
#: ../../classes/class_aabb.rst:45 ../../classes/class_aabb.rst:53
#: ../../classes/class_aabb.rst:61
msgid ":ref:`AABB<class_aabb>`"
msgstr ""

#: ../../classes/class_aabb.rst:21
msgid ""
":ref:`AABB<class_AABB_AABB>` **(** :ref:`Vector3<class_vector3>` "
"position, :ref:`Vector3<class_vector3>` size **)**"
msgstr ""

#: ../../classes/class_aabb.rst:23 ../../classes/class_aabb.rst:47
#: ../../classes/class_aabb.rst:49 ../../classes/class_aabb.rst:51
#: ../../classes/class_aabb.rst:55 ../../classes/class_aabb.rst:57
#: ../../classes/class_aabb.rst:59
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_aabb.rst:23
msgid ""
":ref:`encloses<class_AABB_encloses>` **(** :ref:`AABB<class_aabb>` with "
"**)**"
msgstr ""

#: ../../classes/class_aabb.rst:25
msgid ""
":ref:`expand<class_AABB_expand>` **(** :ref:`Vector3<class_vector3>` "
"to_point **)**"
msgstr ""

#: ../../classes/class_aabb.rst:27 ../../classes/class_aabb.rst:35
#: ../../classes/class_aabb.rst:41
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../../classes/class_aabb.rst:27
msgid ":ref:`get_area<class_AABB_get_area>` **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:29 ../../classes/class_aabb.rst:31
#: ../../classes/class_aabb.rst:37 ../../classes/class_aabb.rst:43
msgid ":ref:`Vector3<class_vector3>`"
msgstr ""

#: ../../classes/class_aabb.rst:29
msgid ""
":ref:`get_endpoint<class_AABB_get_endpoint>` **(** :ref:`int<class_int>` "
"idx **)**"
msgstr ""

#: ../../classes/class_aabb.rst:31
msgid ":ref:`get_longest_axis<class_AABB_get_longest_axis>` **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:33 ../../classes/class_aabb.rst:39
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_aabb.rst:33
msgid ""
":ref:`get_longest_axis_index<class_AABB_get_longest_axis_index>` **(** "
"**)**"
msgstr ""

#: ../../classes/class_aabb.rst:35
msgid ":ref:`get_longest_axis_size<class_AABB_get_longest_axis_size>` **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:37
msgid ":ref:`get_shortest_axis<class_AABB_get_shortest_axis>` **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:39
msgid ""
":ref:`get_shortest_axis_index<class_AABB_get_shortest_axis_index>` **(** "
"**)**"
msgstr ""

#: ../../classes/class_aabb.rst:41
msgid ""
":ref:`get_shortest_axis_size<class_AABB_get_shortest_axis_size>` **(** "
"**)**"
msgstr ""

#: ../../classes/class_aabb.rst:43
msgid ""
":ref:`get_support<class_AABB_get_support>` **(** "
":ref:`Vector3<class_vector3>` dir **)**"
msgstr ""

#: ../../classes/class_aabb.rst:45
msgid ":ref:`grow<class_AABB_grow>` **(** :ref:`float<class_float>` by **)**"
msgstr ""

#: ../../classes/class_aabb.rst:47
msgid ":ref:`has_no_area<class_AABB_has_no_area>` **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:49
msgid ":ref:`has_no_surface<class_AABB_has_no_surface>` **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:51
msgid ""
":ref:`has_point<class_AABB_has_point>` **(** "
":ref:`Vector3<class_vector3>` point **)**"
msgstr ""

#: ../../classes/class_aabb.rst:53
msgid ""
":ref:`intersection<class_AABB_intersection>` **(** "
":ref:`AABB<class_aabb>` with **)**"
msgstr ""

#: ../../classes/class_aabb.rst:55
msgid ""
":ref:`intersects<class_AABB_intersects>` **(** :ref:`AABB<class_aabb>` "
"with **)**"
msgstr ""

#: ../../classes/class_aabb.rst:57
msgid ""
":ref:`intersects_plane<class_AABB_intersects_plane>` **(** "
":ref:`Plane<class_plane>` plane **)**"
msgstr ""

#: ../../classes/class_aabb.rst:59
msgid ""
":ref:`intersects_segment<class_AABB_intersects_segment>` **(** "
":ref:`Vector3<class_vector3>` from, :ref:`Vector3<class_vector3>` to "
"**)**"
msgstr ""

#: ../../classes/class_aabb.rst:61
msgid ":ref:`merge<class_AABB_merge>` **(** :ref:`AABB<class_aabb>` with **)**"
msgstr ""

#: ../../classes/class_aabb.rst:65
msgid "Member Variables"
msgstr ""

#: ../../classes/class_aabb.rst:69
msgid ":ref:`Vector3<class_vector3>` **end** - Ending corner."
msgstr ""

#: ../../classes/class_aabb.rst:73
msgid ":ref:`Vector3<class_vector3>` **position** - Beginning corner."
msgstr ""

#: ../../classes/class_aabb.rst:77
msgid ":ref:`Vector3<class_vector3>` **size** - Size from position to end."
msgstr ""

#: ../../classes/class_aabb.rst:81
msgid "Description"
msgstr ""

#: ../../classes/class_aabb.rst:83
msgid ""
"AABB consists of a position, a size, and several utility functions. It is"
" typically used for fast overlap tests."
msgstr ""

#: ../../classes/class_aabb.rst:86
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_aabb.rst:90
msgid ""
":ref:`AABB<class_aabb>` **AABB** **(** :ref:`Vector3<class_vector3>` "
"position, :ref:`Vector3<class_vector3>` size **)**"
msgstr ""

#: ../../classes/class_aabb.rst:92
msgid "Optional constructor, accepts position and size."
msgstr ""

#: ../../classes/class_aabb.rst:96
msgid ""
":ref:`bool<class_bool>` **encloses** **(** :ref:`AABB<class_aabb>` with "
"**)**"
msgstr ""

#: ../../classes/class_aabb.rst:98
msgid "Returns ``true`` if this ``AABB`` completely encloses another one."
msgstr ""

#: ../../classes/class_aabb.rst:102
msgid ""
":ref:`AABB<class_aabb>` **expand** **(** :ref:`Vector3<class_vector3>` "
"to_point **)**"
msgstr ""

#: ../../classes/class_aabb.rst:104
msgid "Returns this ``AABB`` expanded to include a given point."
msgstr ""

#: ../../classes/class_aabb.rst:108
msgid ":ref:`float<class_float>` **get_area** **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:110
msgid "Gets the area of the ``AABB``."
msgstr ""

#: ../../classes/class_aabb.rst:114
msgid ""
":ref:`Vector3<class_vector3>` **get_endpoint** **(** "
":ref:`int<class_int>` idx **)**"
msgstr ""

#: ../../classes/class_aabb.rst:116
msgid "Gets the position of the 8 endpoints of the ``AABB`` in space."
msgstr ""

#: ../../classes/class_aabb.rst:120
msgid ":ref:`Vector3<class_vector3>` **get_longest_axis** **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:122
msgid "Returns the normalized longest axis of the ``AABB``."
msgstr ""

#: ../../classes/class_aabb.rst:126
msgid ":ref:`int<class_int>` **get_longest_axis_index** **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:128
msgid ""
"Returns the index of the longest axis of the ``AABB`` (according to "
":ref:`Vector3<class_vector3>`::AXIS\\* enum)."
msgstr ""

#: ../../classes/class_aabb.rst:132
msgid ":ref:`float<class_float>` **get_longest_axis_size** **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:134
msgid "Returns the scalar length of the longest axis of the ``AABB``."
msgstr ""

#: ../../classes/class_aabb.rst:138
msgid ":ref:`Vector3<class_vector3>` **get_shortest_axis** **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:140
msgid "Returns the normalized shortest axis of the ``AABB``."
msgstr ""

#: ../../classes/class_aabb.rst:144
msgid ":ref:`int<class_int>` **get_shortest_axis_index** **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:146
msgid ""
"Returns the index of the shortest axis of the ``AABB`` (according to "
":ref:`Vector3<class_vector3>`::AXIS\\* enum)."
msgstr ""

#: ../../classes/class_aabb.rst:150
msgid ":ref:`float<class_float>` **get_shortest_axis_size** **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:152
msgid "Returns the scalar length of the shortest axis of the ``AABB``."
msgstr ""

#: ../../classes/class_aabb.rst:156
msgid ""
":ref:`Vector3<class_vector3>` **get_support** **(** "
":ref:`Vector3<class_vector3>` dir **)**"
msgstr ""

#: ../../classes/class_aabb.rst:158
msgid ""
"Returns the support point in a given direction. This is useful for "
"collision detection algorithms."
msgstr ""

#: ../../classes/class_aabb.rst:162
msgid ":ref:`AABB<class_aabb>` **grow** **(** :ref:`float<class_float>` by **)**"
msgstr ""

#: ../../classes/class_aabb.rst:164
msgid ""
"Returns a copy of the ``AABB`` grown a given amount of units towards all "
"the sides."
msgstr ""

#: ../../classes/class_aabb.rst:168
msgid ":ref:`bool<class_bool>` **has_no_area** **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:170
msgid "Returns ``true`` if the ``AABB`` is flat or empty."
msgstr ""

#: ../../classes/class_aabb.rst:174
msgid ":ref:`bool<class_bool>` **has_no_surface** **(** **)**"
msgstr ""

#: ../../classes/class_aabb.rst:176
msgid "Returns ``true`` if the ``AABB`` is empty."
msgstr ""

#: ../../classes/class_aabb.rst:180
msgid ""
":ref:`bool<class_bool>` **has_point** **(** :ref:`Vector3<class_vector3>`"
" point **)**"
msgstr ""

#: ../../classes/class_aabb.rst:182
msgid "Returns ``true`` if the ``AABB`` contains a point."
msgstr ""

#: ../../classes/class_aabb.rst:186
msgid ""
":ref:`AABB<class_aabb>` **intersection** **(** :ref:`AABB<class_aabb>` "
"with **)**"
msgstr ""

#: ../../classes/class_aabb.rst:188
msgid ""
"Returns the intersection between two ``AABB``. An empty AABB (size 0,0,0)"
" is returned on failure."
msgstr ""

#: ../../classes/class_aabb.rst:192
msgid ""
":ref:`bool<class_bool>` **intersects** **(** :ref:`AABB<class_aabb>` with"
" **)**"
msgstr ""

#: ../../classes/class_aabb.rst:194
msgid "Returns ``true`` if the ``AABB`` overlaps with another."
msgstr ""

#: ../../classes/class_aabb.rst:198
msgid ""
":ref:`bool<class_bool>` **intersects_plane** **(** "
":ref:`Plane<class_plane>` plane **)**"
msgstr ""

#: ../../classes/class_aabb.rst:200
msgid "Returns ``true`` if the ``AABB`` is on both sides of a plane."
msgstr ""

#: ../../classes/class_aabb.rst:204
msgid ""
":ref:`bool<class_bool>` **intersects_segment** **(** "
":ref:`Vector3<class_vector3>` from, :ref:`Vector3<class_vector3>` to "
"**)**"
msgstr ""

#: ../../classes/class_aabb.rst:206
msgid ""
"Returns ``true`` if the ``AABB`` intersects the line segment between "
"``from`` and ``to``."
msgstr ""

#: ../../classes/class_aabb.rst:210
msgid ":ref:`AABB<class_aabb>` **merge** **(** :ref:`AABB<class_aabb>` with **)**"
msgstr ""

#: ../../classes/class_aabb.rst:212
msgid "Returns a larger AABB that contains this AABB and ``with``."
msgstr ""

