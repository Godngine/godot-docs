# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_viewport.rst:8
msgid "Viewport"
msgstr ""

#: ../../classes/class_viewport.rst:10
msgid "**Inherits:** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_viewport.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_viewport.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_viewport.rst:17
msgid "Creates a sub-view into the screen."
msgstr ""

#: ../../classes/class_viewport.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_viewport.rst:23
msgid ":ref:`World<class_world>`"
msgstr ""

#: ../../classes/class_viewport.rst:23
msgid ":ref:`find_world<class_Viewport_find_world>` **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:25
msgid ":ref:`World2D<class_world2d>`"
msgstr ""

#: ../../classes/class_viewport.rst:25
msgid ":ref:`find_world_2d<class_Viewport_find_world_2d>` **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:27
msgid ":ref:`Camera<class_camera>`"
msgstr ""

#: ../../classes/class_viewport.rst:27
msgid ":ref:`get_camera<class_Viewport_get_camera>` **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:29
msgid ":ref:`Transform2D<class_transform2d>`"
msgstr ""

#: ../../classes/class_viewport.rst:29
msgid ""
":ref:`get_final_transform<class_Viewport_get_final_transform>` **(** "
"**)** const"
msgstr ""

#: ../../classes/class_viewport.rst:31 ../../classes/class_viewport.rst:35
msgid ":ref:`Vector2<class_vector2>`"
msgstr ""

#: ../../classes/class_viewport.rst:31
msgid ""
":ref:`get_mouse_position<class_Viewport_get_mouse_position>` **(** **)** "
"const"
msgstr ""

#: ../../classes/class_viewport.rst:33
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_viewport.rst:33
msgid ""
":ref:`get_render_info<class_Viewport_get_render_info>` **(** "
":ref:`int<class_int>` info **)**"
msgstr ""

#: ../../classes/class_viewport.rst:35
msgid ""
":ref:`get_size_override<class_Viewport_get_size_override>` **(** **)** "
"const"
msgstr ""

#: ../../classes/class_viewport.rst:37
msgid ":ref:`ViewportTexture<class_viewporttexture>`"
msgstr ""

#: ../../classes/class_viewport.rst:37
msgid ":ref:`get_texture<class_Viewport_get_texture>` **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:39
msgid ":ref:`RID<class_rid>`"
msgstr ""

#: ../../classes/class_viewport.rst:39
msgid ":ref:`get_viewport_rid<class_Viewport_get_viewport_rid>` **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:41
msgid ":ref:`Rect2<class_rect2>`"
msgstr ""

#: ../../classes/class_viewport.rst:41
msgid ":ref:`get_visible_rect<class_Viewport_get_visible_rect>` **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:43
msgid ":ref:`Variant<class_variant>`"
msgstr ""

#: ../../classes/class_viewport.rst:43
msgid ""
":ref:`gui_get_drag_data<class_Viewport_gui_get_drag_data>` **(** **)** "
"const"
msgstr ""

#: ../../classes/class_viewport.rst:45 ../../classes/class_viewport.rst:49
#: ../../classes/class_viewport.rst:51
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_viewport.rst:45
msgid ""
":ref:`gui_has_modal_stack<class_Viewport_gui_has_modal_stack>` **(** "
"**)** const"
msgstr ""

#: ../../classes/class_viewport.rst:47 ../../classes/class_viewport.rst:53
#: ../../classes/class_viewport.rst:55 ../../classes/class_viewport.rst:57
#: ../../classes/class_viewport.rst:59 ../../classes/class_viewport.rst:61
#: ../../classes/class_viewport.rst:63
msgid "void"
msgstr ""

#: ../../classes/class_viewport.rst:47
msgid ""
":ref:`input<class_Viewport_input>` **(** "
":ref:`InputEvent<class_inputevent>` local_event **)**"
msgstr ""

#: ../../classes/class_viewport.rst:49
msgid ""
":ref:`is_size_override_enabled<class_Viewport_is_size_override_enabled>` "
"**(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:51
msgid ""
":ref:`is_size_override_stretch_enabled<class_Viewport_is_size_override_stretch_enabled>`"
" **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:53
msgid ""
":ref:`set_attach_to_screen_rect<class_Viewport_set_attach_to_screen_rect>`"
" **(** :ref:`Rect2<class_rect2>` rect **)**"
msgstr ""

#: ../../classes/class_viewport.rst:55
msgid ""
":ref:`set_size_override<class_Viewport_set_size_override>` **(** "
":ref:`bool<class_bool>` enable, :ref:`Vector2<class_vector2>` "
"size=Vector2( -1, -1 ), :ref:`Vector2<class_vector2>` margin=Vector2( 0, "
"0 ) **)**"
msgstr ""

#: ../../classes/class_viewport.rst:57
msgid ""
":ref:`set_size_override_stretch<class_Viewport_set_size_override_stretch>`"
" **(** :ref:`bool<class_bool>` enabled **)**"
msgstr ""

#: ../../classes/class_viewport.rst:59
msgid ""
":ref:`unhandled_input<class_Viewport_unhandled_input>` **(** "
":ref:`InputEvent<class_inputevent>` local_event **)**"
msgstr ""

#: ../../classes/class_viewport.rst:61
msgid ":ref:`update_worlds<class_Viewport_update_worlds>` **(** **)**"
msgstr ""

#: ../../classes/class_viewport.rst:63
msgid ""
":ref:`warp_mouse<class_Viewport_warp_mouse>` **(** "
":ref:`Vector2<class_vector2>` to_position **)**"
msgstr ""

#: ../../classes/class_viewport.rst:67
msgid "Signals"
msgstr ""

#: ../../classes/class_viewport.rst:71
msgid "**size_changed** **(** **)**"
msgstr ""

#: ../../classes/class_viewport.rst:73
msgid ""
"Emitted when the size of the viewport is changed, whether by "
":ref:`set_size_override<class_Viewport_set_size_override>`, resize of "
"window, or some other means."
msgstr ""

#: ../../classes/class_viewport.rst:77
msgid "Member Variables"
msgstr ""

#: ../../classes/class_viewport.rst:81
msgid ""
":ref:`bool<class_bool>` **arvr** - If ``true`` the viewport will be used "
"in AR/VR process. Default value: ``false``."
msgstr ""

#: ../../classes/class_viewport.rst:85
msgid ""
":ref:`bool<class_bool>` **audio_listener_enable_2d** - If ``true`` the "
"viewport will process 2D audio streams. Default value: ``false``."
msgstr ""

#: ../../classes/class_viewport.rst:89
msgid ""
":ref:`bool<class_bool>` **audio_listener_enable_3d** - If ``true`` the "
"viewport will process 3D audio streams. Default value: ``false``."
msgstr ""

#: ../../classes/class_viewport.rst:93
msgid ""
":ref:`Transform2D<class_transform2d>` **canvas_transform** - The canvas "
"transform of the viewport, useful for changing the on-screen positions of"
" all child :ref:`CanvasItem<class_canvasitem>`\\ s. This is relative to "
"the global canvas transform of the viewport."
msgstr ""

#: ../../classes/class_viewport.rst:97
msgid ""
":ref:`DebugDraw<enum_viewport_debugdraw>` **debug_draw** - The overlay "
"mode for test rendered geometry in debug purposes. Default value: "
"``DEBUG_DRAW_DISABLED``."
msgstr ""

#: ../../classes/class_viewport.rst:101
msgid ""
":ref:`bool<class_bool>` **disable_3d** - If ``true`` the viewport will "
"disable 3D rendering. For actual disabling use ``usage``. Default value: "
"``false``."
msgstr ""

#: ../../classes/class_viewport.rst:105
msgid ""
":ref:`Transform2D<class_transform2d>` **global_canvas_transform** - The "
"global canvas transform of the viewport. The canvas transform is relative"
" to this."
msgstr ""

#: ../../classes/class_viewport.rst:109
msgid ""
":ref:`bool<class_bool>` **gui_disable_input** - If ``true`` the viewport "
"will not receive input event. Default value: ``false``."
msgstr ""

#: ../../classes/class_viewport.rst:113
msgid ""
":ref:`bool<class_bool>` **gui_snap_controls_to_pixels** - If ``true`` the"
" GUI controls on the viewport will lay pixel perfectly. Default value: "
"``true``."
msgstr ""

#: ../../classes/class_viewport.rst:117
msgid ""
":ref:`bool<class_bool>` **hdr** - If ``true`` the viewport rendering will"
" receive benefits from High Dynamic Range algorithm. Default value: "
"``true``."
msgstr ""

#: ../../classes/class_viewport.rst:121
msgid ""
":ref:`MSAA<enum_viewport_msaa>` **msaa** - The multisample anti-aliasing "
"mode. Default value: ``MSAA_DISABLED``."
msgstr ""

#: ../../classes/class_viewport.rst:125
msgid ""
":ref:`bool<class_bool>` **own_world** - If ``true`` the viewport will use"
" :ref:`World<class_world>` defined in ``world`` property. Default value: "
"``false``."
msgstr ""

#: ../../classes/class_viewport.rst:129
msgid ""
":ref:`bool<class_bool>` **physics_object_picking** - If ``true`` the "
"objects rendered by viewport become subjects of mouse picking process. "
"Default value: ``false``."
msgstr ""

#: ../../classes/class_viewport.rst:133
msgid ""
":ref:`ClearMode<enum_viewport_clearmode>` **render_target_clear_mode** - "
"The clear mode when viewport used as a render target. Default value: "
"``CLEAR_MODE_ALWAYS``."
msgstr ""

#: ../../classes/class_viewport.rst:137
msgid ""
":ref:`UpdateMode<enum_viewport_updatemode>` **render_target_update_mode**"
" - The update mode when viewport used as a render target. Default value: "
"``UPDATE_WHEN_VISIBLE``."
msgstr ""

#: ../../classes/class_viewport.rst:141
msgid ""
":ref:`bool<class_bool>` **render_target_v_flip** - If ``true`` the result"
" of rendering will be flipped vertically. Default value: ``false``."
msgstr ""

#: ../../classes/class_viewport.rst:145
msgid ""
":ref:`ShadowAtlasQuadrantSubdiv<enum_viewport_shadowatlasquadrantsubdiv>`"
" **shadow_atlas_quad_0** - The subdivision amount of first quadrant on "
"shadow atlas. Default value: ``SHADOW_ATLAS_QUADRANT_SUBDIV_4``."
msgstr ""

#: ../../classes/class_viewport.rst:149
msgid ""
":ref:`ShadowAtlasQuadrantSubdiv<enum_viewport_shadowatlasquadrantsubdiv>`"
" **shadow_atlas_quad_1** - The subdivision amount of second quadrant on "
"shadow atlas. Default value: ``SHADOW_ATLAS_QUADRANT_SUBDIV_4``."
msgstr ""

#: ../../classes/class_viewport.rst:153
msgid ""
":ref:`ShadowAtlasQuadrantSubdiv<enum_viewport_shadowatlasquadrantsubdiv>`"
" **shadow_atlas_quad_2** - The subdivision amount of third quadrant on "
"shadow atlas. Default value: ``SHADOW_ATLAS_QUADRANT_SUBDIV_16``."
msgstr ""

#: ../../classes/class_viewport.rst:157
msgid ""
":ref:`ShadowAtlasQuadrantSubdiv<enum_viewport_shadowatlasquadrantsubdiv>`"
" **shadow_atlas_quad_3** - The subdivision amount of fourth quadrant on "
"shadow atlas. Default value: ``SHADOW_ATLAS_QUADRANT_SUBDIV_64``."
msgstr ""

#: ../../classes/class_viewport.rst:161
msgid ""
":ref:`int<class_int>` **shadow_atlas_size** - The resolution of shadow "
"atlas. Both width and height is equal to one value."
msgstr ""

#: ../../classes/class_viewport.rst:165
msgid ":ref:`Vector2<class_vector2>` **size** - The width and height of viewport."
msgstr ""

#: ../../classes/class_viewport.rst:169
msgid ""
":ref:`bool<class_bool>` **transparent_bg** - If ``true`` the viewport "
"should render its background as transparent. Default value: ``false``."
msgstr ""

#: ../../classes/class_viewport.rst:173
msgid ""
":ref:`Usage<enum_viewport_usage>` **usage** - The rendering mode of "
"viewport. Default value: ``USAGE_3D``."
msgstr ""

#: ../../classes/class_viewport.rst:177
msgid ""
":ref:`World<class_world>` **world** - The custom "
":ref:`World<class_world>` which can be used as 3D environment source."
msgstr ""

#: ../../classes/class_viewport.rst:181
msgid ""
":ref:`World2D<class_world2d>` **world_2d** - The custom "
":ref:`World2D<class_world2d>` which can be used as 2D environment source."
msgstr ""

#: ../../classes/class_viewport.rst:185
msgid "Enums"
msgstr ""

#: ../../classes/class_viewport.rst:189
msgid "enum **UpdateMode**"
msgstr ""

#: ../../classes/class_viewport.rst:191
msgid "**UPDATE_DISABLED** = **0** --- Do not update the render target."
msgstr ""

#: ../../classes/class_viewport.rst:192
msgid ""
"**UPDATE_ONCE** = **1** --- Update the render target once, then switch to"
" ``UPDATE_DISABLED``"
msgstr ""

#: ../../classes/class_viewport.rst:193
msgid ""
"**UPDATE_WHEN_VISIBLE** = **2** --- Update the render target only when it"
" is visible. This is the default value."
msgstr ""

#: ../../classes/class_viewport.rst:194
msgid "**UPDATE_ALWAYS** = **3** --- Always update the render target."
msgstr ""

#: ../../classes/class_viewport.rst:198
msgid "enum **RenderInfo**"
msgstr ""

#: ../../classes/class_viewport.rst:200
msgid "**RENDER_INFO_OBJECTS_IN_FRAME** = **0** --- Amount of objects in frame."
msgstr ""

#: ../../classes/class_viewport.rst:201
msgid "**RENDER_INFO_VERTICES_IN_FRAME** = **1** --- Amount of vertices in frame."
msgstr ""

#: ../../classes/class_viewport.rst:202
msgid ""
"**RENDER_INFO_MATERIAL_CHANGES_IN_FRAME** = **2** --- Amount of material "
"changes in frame."
msgstr ""

#: ../../classes/class_viewport.rst:203
msgid ""
"**RENDER_INFO_SHADER_CHANGES_IN_FRAME** = **3** --- Amount of shader "
"changes in frame."
msgstr ""

#: ../../classes/class_viewport.rst:204
msgid ""
"**RENDER_INFO_SURFACE_CHANGES_IN_FRAME** = **4** --- Amount of surface "
"changes in frame."
msgstr ""

#: ../../classes/class_viewport.rst:205
msgid ""
"**RENDER_INFO_DRAW_CALLS_IN_FRAME** = **5** --- Amount of draw calls in "
"frame."
msgstr ""

#: ../../classes/class_viewport.rst:206
msgid "**RENDER_INFO_MAX** = **6** --- Enum limiter. Do not use it directly."
msgstr ""

#: ../../classes/class_viewport.rst:210
msgid "enum **MSAA**"
msgstr ""

#: ../../classes/class_viewport.rst:212
msgid ""
"**MSAA_DISABLED** = **0** --- Multisample anti-aliasing mode disabled. "
"This is the default value."
msgstr ""

#: ../../classes/class_viewport.rst:213
msgid "**MSAA_2X** = **1**"
msgstr ""

#: ../../classes/class_viewport.rst:214
msgid "**MSAA_4X** = **2**"
msgstr ""

#: ../../classes/class_viewport.rst:215
msgid "**MSAA_8X** = **3**"
msgstr ""

#: ../../classes/class_viewport.rst:216
msgid "**MSAA_16X** = **4**"
msgstr ""

#: ../../classes/class_viewport.rst:220
msgid "enum **ClearMode**"
msgstr ""

#: ../../classes/class_viewport.rst:222
msgid "**CLEAR_MODE_ALWAYS** = **0**"
msgstr ""

#: ../../classes/class_viewport.rst:223
msgid "**CLEAR_MODE_NEVER** = **1**"
msgstr ""

#: ../../classes/class_viewport.rst:224
msgid "**CLEAR_MODE_ONLY_NEXT_FRAME** = **2**"
msgstr ""

#: ../../classes/class_viewport.rst:228
msgid "enum **Usage**"
msgstr ""

#: ../../classes/class_viewport.rst:230
msgid "**USAGE_2D** = **0**"
msgstr ""

#: ../../classes/class_viewport.rst:231
msgid "**USAGE_2D_NO_SAMPLING** = **1**"
msgstr ""

#: ../../classes/class_viewport.rst:232
msgid "**USAGE_3D** = **2**"
msgstr ""

#: ../../classes/class_viewport.rst:233
msgid "**USAGE_3D_NO_EFFECTS** = **3**"
msgstr ""

#: ../../classes/class_viewport.rst:237
msgid "enum **DebugDraw**"
msgstr ""

#: ../../classes/class_viewport.rst:239
msgid "**DEBUG_DRAW_DISABLED** = **0** --- Objects are displayed normally."
msgstr ""

#: ../../classes/class_viewport.rst:240
msgid ""
"**DEBUG_DRAW_UNSHADED** = **1** --- Objects are displayed without light "
"information."
msgstr ""

#: ../../classes/class_viewport.rst:241
msgid "**DEBUG_DRAW_OVERDRAW** = **2**"
msgstr ""

#: ../../classes/class_viewport.rst:242
msgid ""
"**DEBUG_DRAW_WIREFRAME** = **3** --- Objects are displayed in wireframe "
"style."
msgstr ""

#: ../../classes/class_viewport.rst:246
msgid "enum **ShadowAtlasQuadrantSubdiv**"
msgstr ""

#: ../../classes/class_viewport.rst:248
msgid "**SHADOW_ATLAS_QUADRANT_SUBDIV_DISABLED** = **0**"
msgstr ""

#: ../../classes/class_viewport.rst:249
msgid "**SHADOW_ATLAS_QUADRANT_SUBDIV_1** = **1**"
msgstr ""

#: ../../classes/class_viewport.rst:250
msgid "**SHADOW_ATLAS_QUADRANT_SUBDIV_4** = **2**"
msgstr ""

#: ../../classes/class_viewport.rst:251
msgid "**SHADOW_ATLAS_QUADRANT_SUBDIV_16** = **3**"
msgstr ""

#: ../../classes/class_viewport.rst:252
msgid "**SHADOW_ATLAS_QUADRANT_SUBDIV_64** = **4**"
msgstr ""

#: ../../classes/class_viewport.rst:253
msgid "**SHADOW_ATLAS_QUADRANT_SUBDIV_256** = **5**"
msgstr ""

#: ../../classes/class_viewport.rst:254
msgid "**SHADOW_ATLAS_QUADRANT_SUBDIV_1024** = **6**"
msgstr ""

#: ../../classes/class_viewport.rst:255
msgid ""
"**SHADOW_ATLAS_QUADRANT_SUBDIV_MAX** = **7** --- Enum limiter. Do not use"
" it directly."
msgstr ""

#: ../../classes/class_viewport.rst:259
msgid "Description"
msgstr ""

#: ../../classes/class_viewport.rst:261
msgid ""
"A Viewport creates a different view into the screen, or a sub-view inside"
" another viewport. Children 2D Nodes will display on it, and children "
"Camera 3D nodes will render on it too."
msgstr ""

#: ../../classes/class_viewport.rst:263
msgid ""
"Optionally, a viewport can have its own 2D or 3D world, so they don't "
"share what they draw with other viewports."
msgstr ""

#: ../../classes/class_viewport.rst:265
msgid ""
"If a viewport is a child of a :ref:`Control<class_control>`, it will "
"automatically take up its same rect and position, otherwise they must be "
"set manually."
msgstr ""

#: ../../classes/class_viewport.rst:267
msgid ""
"Viewports can also choose to be audio listeners, so they generate "
"positional audio depending on a 2D or 3D camera child of it."
msgstr ""

#: ../../classes/class_viewport.rst:269
msgid ""
"Also, viewports can be assigned to different screens in case the devices "
"have multiple screens."
msgstr ""

#: ../../classes/class_viewport.rst:271
msgid ""
"Finally, viewports can also behave as render targets, in which case they "
"will not be visible unless the associated texture is used to draw."
msgstr ""

#: ../../classes/class_viewport.rst:274
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_viewport.rst:278
msgid ":ref:`World<class_world>` **find_world** **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:280
msgid ""
"Return the 3D world of the viewport, or if no such present, the one of "
"the parent viewport."
msgstr ""

#: ../../classes/class_viewport.rst:284
msgid ":ref:`World2D<class_world2d>` **find_world_2d** **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:286
msgid "Return the 2D world of the viewport."
msgstr ""

#: ../../classes/class_viewport.rst:290
msgid ":ref:`Camera<class_camera>` **get_camera** **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:292
msgid "Return the active 3D camera."
msgstr ""

#: ../../classes/class_viewport.rst:296
msgid ""
":ref:`Transform2D<class_transform2d>` **get_final_transform** **(** **)**"
" const"
msgstr ""

#: ../../classes/class_viewport.rst:298
msgid "Get the total transform of the viewport."
msgstr ""

#: ../../classes/class_viewport.rst:302
msgid ":ref:`Vector2<class_vector2>` **get_mouse_position** **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:304
msgid "Get the mouse position, relative to the viewport."
msgstr ""

#: ../../classes/class_viewport.rst:308
msgid ""
":ref:`int<class_int>` **get_render_info** **(** :ref:`int<class_int>` "
"info **)**"
msgstr ""

#: ../../classes/class_viewport.rst:310
msgid "Get the specific information about the viewport from rendering pipeline."
msgstr ""

#: ../../classes/class_viewport.rst:314
msgid ":ref:`Vector2<class_vector2>` **get_size_override** **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:316
msgid ""
"Get the size override set with "
":ref:`set_size_override<class_Viewport_set_size_override>`."
msgstr ""

#: ../../classes/class_viewport.rst:320
msgid ""
":ref:`ViewportTexture<class_viewporttexture>` **get_texture** **(** **)**"
" const"
msgstr ""

#: ../../classes/class_viewport.rst:322
msgid ""
"Get the viewport's texture, for use with various objects that you want to"
" texture with the viewport."
msgstr ""

#: ../../classes/class_viewport.rst:326
msgid ":ref:`RID<class_rid>` **get_viewport_rid** **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:328
msgid "Get the viewport RID from the :ref:`VisualServer<class_visualserver>`."
msgstr ""

#: ../../classes/class_viewport.rst:332
msgid ":ref:`Rect2<class_rect2>` **get_visible_rect** **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:334
msgid "Return the final, visible rect in global screen coordinates."
msgstr ""

#: ../../classes/class_viewport.rst:338
msgid ":ref:`Variant<class_variant>` **gui_get_drag_data** **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:340
msgid ""
"Returns the drag data from the GUI, that was previously returned by "
":ref:`Control.get_drag_data<class_Control_get_drag_data>`."
msgstr ""

#: ../../classes/class_viewport.rst:344
msgid ":ref:`bool<class_bool>` **gui_has_modal_stack** **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:346
msgid "Returns whether there are shown modals on-screen."
msgstr ""

#: ../../classes/class_viewport.rst:350
msgid "void **input** **(** :ref:`InputEvent<class_inputevent>` local_event **)**"
msgstr ""

#: ../../classes/class_viewport.rst:354
msgid ":ref:`bool<class_bool>` **is_size_override_enabled** **(** **)** const"
msgstr ""

#: ../../classes/class_viewport.rst:356
msgid ""
"Get the enabled status of the size override set with "
":ref:`set_size_override<class_Viewport_set_size_override>`."
msgstr ""

#: ../../classes/class_viewport.rst:360
msgid ""
":ref:`bool<class_bool>` **is_size_override_stretch_enabled** **(** **)** "
"const"
msgstr ""

#: ../../classes/class_viewport.rst:362
msgid ""
"Get the enabled status of the size strech override set with "
":ref:`set_size_override_stretch<class_Viewport_set_size_override_stretch>`."
msgstr ""

#: ../../classes/class_viewport.rst:366
msgid ""
"void **set_attach_to_screen_rect** **(** :ref:`Rect2<class_rect2>` rect "
"**)**"
msgstr ""

#: ../../classes/class_viewport.rst:370
msgid ""
"void **set_size_override** **(** :ref:`bool<class_bool>` enable, "
":ref:`Vector2<class_vector2>` size=Vector2( -1, -1 ), "
":ref:`Vector2<class_vector2>` margin=Vector2( 0, 0 ) **)**"
msgstr ""

#: ../../classes/class_viewport.rst:372
msgid ""
"Set the size override of the viewport. If the enable parameter is true, "
"it would use the override, otherwise it would use the default size. If "
"the size parameter is equal to ``(-1, -1)``, it won't update the size."
msgstr ""

#: ../../classes/class_viewport.rst:376
msgid ""
"void **set_size_override_stretch** **(** :ref:`bool<class_bool>` enabled "
"**)**"
msgstr ""

#: ../../classes/class_viewport.rst:378
msgid "Set whether the size override affects stretch as well."
msgstr ""

#: ../../classes/class_viewport.rst:382
msgid ""
"void **unhandled_input** **(** :ref:`InputEvent<class_inputevent>` "
"local_event **)**"
msgstr ""

#: ../../classes/class_viewport.rst:386
msgid "void **update_worlds** **(** **)**"
msgstr ""

#: ../../classes/class_viewport.rst:388
msgid "Force update of the 2D and 3D worlds."
msgstr ""

#: ../../classes/class_viewport.rst:392
msgid "void **warp_mouse** **(** :ref:`Vector2<class_vector2>` to_position **)**"
msgstr ""

#: ../../classes/class_viewport.rst:394
msgid "Warp the mouse to a position, relative to the viewport."
msgstr ""

