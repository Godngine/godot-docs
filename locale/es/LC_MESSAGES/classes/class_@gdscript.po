# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_@gdscript.rst:8
msgid "@GDScript"
msgstr ""

#: ../../classes/class_@gdscript.rst:10
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_@gdscript.rst:13
msgid "Brief Description"
msgstr ""

#: ../../classes/class_@gdscript.rst:15
msgid "Built-in GDScript functions."
msgstr ""

#: ../../classes/class_@gdscript.rst:18
msgid "Member Functions"
msgstr ""

#: ../../classes/class_@gdscript.rst:21 ../../classes/class_@gdscript.rst:23
msgid ":ref:`Color<class_color>`"
msgstr ""

#: ../../classes/class_@gdscript.rst:21
msgid ""
":ref:`Color8<class_@GDScript_Color8>` **(** :ref:`int<class_int>` r8, "
":ref:`int<class_int>` g8, :ref:`int<class_int>` b8, :ref:`int<class_int>`"
" a8=255 **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:23
msgid ""
":ref:`ColorN<class_@GDScript_ColorN>` **(** :ref:`String<class_string>` "
"name, :ref:`float<class_float>` alpha=1.0 **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:25 ../../classes/class_@gdscript.rst:27
#: ../../classes/class_@gdscript.rst:29 ../../classes/class_@gdscript.rst:33
#: ../../classes/class_@gdscript.rst:35 ../../classes/class_@gdscript.rst:41
#: ../../classes/class_@gdscript.rst:45 ../../classes/class_@gdscript.rst:49
#: ../../classes/class_@gdscript.rst:51 ../../classes/class_@gdscript.rst:53
#: ../../classes/class_@gdscript.rst:55 ../../classes/class_@gdscript.rst:57
#: ../../classes/class_@gdscript.rst:59 ../../classes/class_@gdscript.rst:63
#: ../../classes/class_@gdscript.rst:65 ../../classes/class_@gdscript.rst:67
#: ../../classes/class_@gdscript.rst:69 ../../classes/class_@gdscript.rst:71
#: ../../classes/class_@gdscript.rst:81 ../../classes/class_@gdscript.rst:89
#: ../../classes/class_@gdscript.rst:91 ../../classes/class_@gdscript.rst:95
#: ../../classes/class_@gdscript.rst:97 ../../classes/class_@gdscript.rst:99
#: ../../classes/class_@gdscript.rst:107 ../../classes/class_@gdscript.rst:123
#: ../../classes/class_@gdscript.rst:125 ../../classes/class_@gdscript.rst:129
#: ../../classes/class_@gdscript.rst:137 ../../classes/class_@gdscript.rst:139
#: ../../classes/class_@gdscript.rst:143 ../../classes/class_@gdscript.rst:145
#: ../../classes/class_@gdscript.rst:147 ../../classes/class_@gdscript.rst:149
#: ../../classes/class_@gdscript.rst:151 ../../classes/class_@gdscript.rst:157
#: ../../classes/class_@gdscript.rst:159 ../../classes/class_@gdscript.rst:175
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../../classes/class_@gdscript.rst:25
msgid ":ref:`abs<class_@GDScript_abs>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:27
msgid ":ref:`acos<class_@GDScript_acos>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:29
msgid ":ref:`asin<class_@GDScript_asin>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:31 ../../classes/class_@gdscript.rst:111
#: ../../classes/class_@gdscript.rst:113 ../../classes/class_@gdscript.rst:115
#: ../../classes/class_@gdscript.rst:117 ../../classes/class_@gdscript.rst:119
#: ../../classes/class_@gdscript.rst:121 ../../classes/class_@gdscript.rst:133
#: ../../classes/class_@gdscript.rst:141
msgid "void"
msgstr ""

#: ../../classes/class_@gdscript.rst:31
msgid ""
":ref:`assert<class_@GDScript_assert>` **(** :ref:`bool<class_bool>` "
"condition **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:33
msgid ":ref:`atan<class_@GDScript_atan>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:35
msgid ""
":ref:`atan2<class_@GDScript_atan2>` **(** :ref:`float<class_float>` x, "
":ref:`float<class_float>` y **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:37 ../../classes/class_@gdscript.rst:103
#: ../../classes/class_@gdscript.rst:155
msgid ":ref:`Variant<class_variant>`"
msgstr ""

#: ../../classes/class_@gdscript.rst:37
msgid ""
":ref:`bytes2var<class_@GDScript_bytes2var>` **(** "
":ref:`PoolByteArray<class_poolbytearray>` bytes **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:39 ../../classes/class_@gdscript.rst:105
msgid ":ref:`Vector2<class_vector2>`"
msgstr ""

#: ../../classes/class_@gdscript.rst:39
msgid ""
":ref:`cartesian2polar<class_@GDScript_cartesian2polar>` **(** "
":ref:`float<class_float>` x, :ref:`float<class_float>` y **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:41
msgid ":ref:`ceil<class_@GDScript_ceil>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:43 ../../classes/class_@gdscript.rst:153
#: ../../classes/class_@gdscript.rst:161 ../../classes/class_@gdscript.rst:167
#: ../../classes/class_@gdscript.rst:171
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_@gdscript.rst:43
msgid ":ref:`char<class_@GDScript_char>` **(** :ref:`int<class_int>` ascii **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:45
msgid ""
":ref:`clamp<class_@GDScript_clamp>` **(** :ref:`float<class_float>` "
"value, :ref:`float<class_float>` min, :ref:`float<class_float>` max **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:47 ../../classes/class_@gdscript.rst:61
#: ../../classes/class_@gdscript.rst:73 ../../classes/class_@gdscript.rst:79
#: ../../classes/class_@gdscript.rst:93 ../../classes/class_@gdscript.rst:173
msgid ":ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_@gdscript.rst:47
msgid ""
":ref:`convert<class_@GDScript_convert>` **(** "
":ref:`Variant<class_variant>` what, :ref:`int<class_int>` type **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:49
msgid ":ref:`cos<class_@GDScript_cos>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:51
msgid ":ref:`cosh<class_@GDScript_cosh>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:53
msgid ""
":ref:`db2linear<class_@GDScript_db2linear>` **(** "
":ref:`float<class_float>` db **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:55
msgid ""
":ref:`decimals<class_@GDScript_decimals>` **(** :ref:`float<class_float>`"
" step **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:57
msgid ""
":ref:`dectime<class_@GDScript_dectime>` **(** :ref:`float<class_float>` "
"value, :ref:`float<class_float>` amount, :ref:`float<class_float>` step "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:59
msgid ""
":ref:`deg2rad<class_@GDScript_deg2rad>` **(** :ref:`float<class_float>` "
"deg **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:61
msgid ""
":ref:`dict2inst<class_@GDScript_dict2inst>` **(** "
":ref:`Dictionary<class_dictionary>` dict **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:63
msgid ""
":ref:`ease<class_@GDScript_ease>` **(** :ref:`float<class_float>` s, "
":ref:`float<class_float>` curve **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:65
msgid ":ref:`exp<class_@GDScript_exp>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:67
msgid ""
":ref:`floor<class_@GDScript_floor>` **(** :ref:`float<class_float>` s "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:69
msgid ""
":ref:`fmod<class_@GDScript_fmod>` **(** :ref:`float<class_float>` x, "
":ref:`float<class_float>` y **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:71
msgid ""
":ref:`fposmod<class_@GDScript_fposmod>` **(** :ref:`float<class_float>` "
"x, :ref:`float<class_float>` y **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:73
msgid ""
":ref:`funcref<class_@GDScript_funcref>` **(** :ref:`Object<class_object>`"
" instance, :ref:`String<class_string>` funcname **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:75 ../../classes/class_@gdscript.rst:87
#: ../../classes/class_@gdscript.rst:101 ../../classes/class_@gdscript.rst:131
#: ../../classes/class_@gdscript.rst:165 ../../classes/class_@gdscript.rst:177
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_@gdscript.rst:75
msgid ""
":ref:`hash<class_@GDScript_hash>` **(** :ref:`Variant<class_variant>` var"
" **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:77
msgid ":ref:`Dictionary<class_dictionary>`"
msgstr ""

#: ../../classes/class_@gdscript.rst:77
msgid ""
":ref:`inst2dict<class_@GDScript_inst2dict>` **(** "
":ref:`Object<class_object>` inst **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:79
msgid ""
":ref:`instance_from_id<class_@GDScript_instance_from_id>` **(** "
":ref:`int<class_int>` instance_id **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:81
msgid ""
":ref:`inverse_lerp<class_@GDScript_inverse_lerp>` **(** "
":ref:`float<class_float>` from, :ref:`float<class_float>` to, "
":ref:`float<class_float>` weight **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:83 ../../classes/class_@gdscript.rst:85
#: ../../classes/class_@gdscript.rst:163
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_@gdscript.rst:83
msgid ""
":ref:`is_inf<class_@GDScript_is_inf>` **(** :ref:`float<class_float>` s "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:85
msgid ""
":ref:`is_nan<class_@GDScript_is_nan>` **(** :ref:`float<class_float>` s "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:87
msgid ""
":ref:`len<class_@GDScript_len>` **(** :ref:`Variant<class_variant>` var "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:89
msgid ""
":ref:`lerp<class_@GDScript_lerp>` **(** :ref:`float<class_float>` from, "
":ref:`float<class_float>` to, :ref:`float<class_float>` weight **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:91
msgid ""
":ref:`linear2db<class_@GDScript_linear2db>` **(** "
":ref:`float<class_float>` nrg **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:93
msgid ""
":ref:`load<class_@GDScript_load>` **(** :ref:`String<class_string>` path "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:95
msgid ":ref:`log<class_@GDScript_log>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:97
msgid ""
":ref:`max<class_@GDScript_max>` **(** :ref:`float<class_float>` a, "
":ref:`float<class_float>` b **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:99
msgid ""
":ref:`min<class_@GDScript_min>` **(** :ref:`float<class_float>` a, "
":ref:`float<class_float>` b **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:101
msgid ""
":ref:`nearest_po2<class_@GDScript_nearest_po2>` **(** "
":ref:`int<class_int>` value **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:103
msgid ""
":ref:`parse_json<class_@GDScript_parse_json>` **(** "
":ref:`String<class_string>` json **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:105
msgid ""
":ref:`polar2cartesian<class_@GDScript_polar2cartesian>` **(** "
":ref:`float<class_float>` r, :ref:`float<class_float>` th **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:107
msgid ""
":ref:`pow<class_@GDScript_pow>` **(** :ref:`float<class_float>` x, "
":ref:`float<class_float>` y **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:109
msgid ":ref:`Resource<class_resource>`"
msgstr ""

#: ../../classes/class_@gdscript.rst:109
msgid ""
":ref:`preload<class_@GDScript_preload>` **(** :ref:`String<class_string>`"
" path **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:111
msgid ":ref:`print<class_@GDScript_print>` **(** **)** vararg"
msgstr ""

#: ../../classes/class_@gdscript.rst:113
msgid ":ref:`print_stack<class_@GDScript_print_stack>` **(** **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:115
msgid ":ref:`printerr<class_@GDScript_printerr>` **(** **)** vararg"
msgstr ""

#: ../../classes/class_@gdscript.rst:117
msgid ":ref:`printraw<class_@GDScript_printraw>` **(** **)** vararg"
msgstr ""

#: ../../classes/class_@gdscript.rst:119
msgid ":ref:`prints<class_@GDScript_prints>` **(** **)** vararg"
msgstr ""

#: ../../classes/class_@gdscript.rst:121
msgid ":ref:`printt<class_@GDScript_printt>` **(** **)** vararg"
msgstr ""

#: ../../classes/class_@gdscript.rst:123
msgid ""
":ref:`rad2deg<class_@GDScript_rad2deg>` **(** :ref:`float<class_float>` "
"rad **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:125
msgid ""
":ref:`rand_range<class_@GDScript_rand_range>` **(** "
":ref:`float<class_float>` from, :ref:`float<class_float>` to **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:127 ../../classes/class_@gdscript.rst:135
msgid ":ref:`Array<class_array>`"
msgstr ""

#: ../../classes/class_@gdscript.rst:127
msgid ""
":ref:`rand_seed<class_@GDScript_rand_seed>` **(** :ref:`int<class_int>` "
"seed **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:129
msgid ":ref:`randf<class_@GDScript_randf>` **(** **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:131
msgid ":ref:`randi<class_@GDScript_randi>` **(** **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:133
msgid ":ref:`randomize<class_@GDScript_randomize>` **(** **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:135
msgid ":ref:`range<class_@GDScript_range>` **(** **)** vararg"
msgstr ""

#: ../../classes/class_@gdscript.rst:137
msgid ""
":ref:`range_lerp<class_@GDScript_range_lerp>` **(** "
":ref:`float<class_float>` value, :ref:`float<class_float>` istart, "
":ref:`float<class_float>` istop, :ref:`float<class_float>` ostart, "
":ref:`float<class_float>` ostop **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:139
msgid ""
":ref:`round<class_@GDScript_round>` **(** :ref:`float<class_float>` s "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:141
msgid ":ref:`seed<class_@GDScript_seed>` **(** :ref:`int<class_int>` seed **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:143
msgid ":ref:`sign<class_@GDScript_sign>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:145
msgid ":ref:`sin<class_@GDScript_sin>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:147
msgid ":ref:`sinh<class_@GDScript_sinh>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:149
msgid ":ref:`sqrt<class_@GDScript_sqrt>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:151
msgid ""
":ref:`stepify<class_@GDScript_stepify>` **(** :ref:`float<class_float>` "
"s, :ref:`float<class_float>` step **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:153
msgid ":ref:`str<class_@GDScript_str>` **(** **)** vararg"
msgstr ""

#: ../../classes/class_@gdscript.rst:155
msgid ""
":ref:`str2var<class_@GDScript_str2var>` **(** :ref:`String<class_string>`"
" string **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:157
msgid ":ref:`tan<class_@GDScript_tan>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:159
msgid ":ref:`tanh<class_@GDScript_tanh>` **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:161
msgid ""
":ref:`to_json<class_@GDScript_to_json>` **(** "
":ref:`Variant<class_variant>` var **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:163
msgid ""
":ref:`type_exists<class_@GDScript_type_exists>` **(** "
":ref:`String<class_string>` type **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:165
msgid ""
":ref:`typeof<class_@GDScript_typeof>` **(** :ref:`Variant<class_variant>`"
" what **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:167
msgid ""
":ref:`validate_json<class_@GDScript_validate_json>` **(** "
":ref:`String<class_string>` json **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:169
msgid ":ref:`PoolByteArray<class_poolbytearray>`"
msgstr ""

#: ../../classes/class_@gdscript.rst:169
msgid ""
":ref:`var2bytes<class_@GDScript_var2bytes>` **(** "
":ref:`Variant<class_variant>` var **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:171
msgid ""
":ref:`var2str<class_@GDScript_var2str>` **(** "
":ref:`Variant<class_variant>` var **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:173
msgid ""
":ref:`weakref<class_@GDScript_weakref>` **(** :ref:`Object<class_object>`"
" obj **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:175
msgid ""
":ref:`wrapf<class_@GDScript_wrapf>` **(** :ref:`float<class_float>` "
"value, :ref:`float<class_float>` min, :ref:`float<class_float>` max **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:177
msgid ""
":ref:`wrapi<class_@GDScript_wrapi>` **(** :ref:`int<class_int>` value, "
":ref:`int<class_int>` min, :ref:`int<class_int>` max **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:179
msgid ":ref:`GDScriptFunctionState<class_gdscriptfunctionstate>`"
msgstr ""

#: ../../classes/class_@gdscript.rst:179
msgid ""
":ref:`yield<class_@GDScript_yield>` **(** :ref:`Object<class_object>` "
"object=null, :ref:`String<class_string>` signal=\"\" **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:183
msgid "Numeric Constants"
msgstr ""

#: ../../classes/class_@gdscript.rst:185
msgid ""
"**PI** = **3.141593** --- Constant that represents how many times the "
"diameter of a circle fits around its perimeter."
msgstr ""

#: ../../classes/class_@gdscript.rst:186
msgid ""
"**TAU** = **6.283185** --- The circle constant, the circumference of the "
"unit circle."
msgstr ""

#: ../../classes/class_@gdscript.rst:187
msgid ""
"**INF** = **inf** --- A positive infinity. (For negative infinity, use "
"-INF)."
msgstr ""

#: ../../classes/class_@gdscript.rst:188
msgid ""
"**NAN** = **nan** --- Macro constant that expands to an expression of "
"type float that represents a NaN."
msgstr ""

#: ../../classes/class_@gdscript.rst:190
msgid ""
"The NaN values are used to identify undefined or non-representable values"
" for floating-point elements, such as the square root of negative numbers"
" or the result of 0/0."
msgstr ""

#: ../../classes/class_@gdscript.rst:193
msgid "Description"
msgstr ""

#: ../../classes/class_@gdscript.rst:195
msgid ""
"This contains the list of built-in gdscript functions. Mostly math "
"functions and other utilities. Everything else is expanded by objects."
msgstr ""

#: ../../classes/class_@gdscript.rst:198
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_@gdscript.rst:202
msgid ""
":ref:`Color<class_color>` **Color8** **(** :ref:`int<class_int>` r8, "
":ref:`int<class_int>` g8, :ref:`int<class_int>` b8, :ref:`int<class_int>`"
" a8=255 **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:204
msgid ""
"Returns a 32 bit color with red, green, blue and alpha channels. Each "
"channel has 8 bits of information ranging from 0 to 255."
msgstr ""

#: ../../classes/class_@gdscript.rst:206
msgid "``r8`` red channel"
msgstr ""

#: ../../classes/class_@gdscript.rst:208
msgid "``g8`` green channel"
msgstr ""

#: ../../classes/class_@gdscript.rst:210
msgid "``b8`` blue channel"
msgstr ""

#: ../../classes/class_@gdscript.rst:212
msgid "``a8`` alpha channel"
msgstr ""

#: ../../classes/class_@gdscript.rst:220
msgid ""
":ref:`Color<class_color>` **ColorN** **(** :ref:`String<class_string>` "
"name, :ref:`float<class_float>` alpha=1.0 **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:222
msgid ""
"Returns a color according to the standardised ``name`` with ``alpha`` "
"ranging from 0 to 1."
msgstr ""

#: ../../classes/class_@gdscript.rst:228
msgid "Supported color names:"
msgstr ""

#: ../../classes/class_@gdscript.rst:230
msgid ""
"\"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", "
"\"beige\", \"bisque\", \"black\", \"blanchedalmond\", \"blue\", "
"\"blueviolet\", \"brown\", \"burlywood\", \"cadetblue\", \"chartreuse\", "
"\"chocolate\", \"coral\", \"cornflower\", \"cornsilk\", \"crimson\", "
"\"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\", \"darkgray\", "
"\"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\", "
"\"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", "
"\"darkseagreen\", \"darkslateblue\", \"darkslategray\", "
"\"darkturquoise\", \"darkviolet\", \"deeppink\", \"deepskyblue\", "
"\"dimgray\", \"dodgerblue\", \"firebrick\", \"floralwhite\", "
"\"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\", \"gold\", "
"\"goldenrod\", \"gray\", \"webgray\", \"green\", \"webgreen\", "
"\"greenyellow\", \"honeydew\", \"hotpink\", \"indianred\", \"indigo\", "
"\"ivory\", \"khaki\", \"lavender\", \"lavenderblush\", \"lawngreen\", "
"\"lemonchiffon\", \"lightblue\", \"lightcoral\", \"lightcyan\", "
"\"lightgoldenrod\", \"lightgray\", \"lightgreen\", \"lightpink\", "
"\"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\","
" \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\","
" \"magenta\", \"maroon\", \"webmaroon\", \"mediumaquamarine\", "
"\"mediumblue\", \"mediumorchid\", \"mediumpurple\", \"mediumseagreen\", "
"\"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\", "
"\"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", "
"\"moccasin\", \"navajowhite\", \"navyblue\", \"oldlace\", \"olive\", "
"\"olivedrab\", \"orange\", \"orangered\", \"orchid\", \"palegoldenrod\", "
"\"palegreen\", \"paleturquoise\", \"palevioletred\", \"papayawhip\", "
"\"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\", \"purple\", "
"\"webpurple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", "
"\"saddlebrown\", \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", "
"\"sienna\", \"silver\", \"skyblue\", \"slateblue\", \"slategray\", "
"\"snow\", \"springgreen\", \"steelblue\", \"tan\", \"teal\", \"thistle\","
" \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\", "
"\"whitesmoke\", \"yellow\", \"yellowgreen\"."
msgstr ""

#: ../../classes/class_@gdscript.rst:234
msgid ":ref:`float<class_float>` **abs** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:236
msgid ""
"Returns the absolute value of parameter ``s``  (i.e. unsigned value, "
"works for integer and float)."
msgstr ""

#: ../../classes/class_@gdscript.rst:245
msgid ":ref:`float<class_float>` **acos** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:247
msgid ""
"Returns the arc cosine of ``s`` in radians. Use to get the angle of "
"cosine ``s``."
msgstr ""

#: ../../classes/class_@gdscript.rst:256
msgid ":ref:`float<class_float>` **asin** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:258
msgid ""
"Returns the arc sine of ``s`` in radians. Use to get the angle of sine "
"``s``."
msgstr ""

#: ../../classes/class_@gdscript.rst:267
msgid "void **assert** **(** :ref:`bool<class_bool>` condition **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:269
msgid ""
"Assert that the ``condition`` is true. If the ``condition`` is false a "
"fatal error is generated and the program is halted. Useful for debugging "
"to make sure a value is always true."
msgstr ""

#: ../../classes/class_@gdscript.rst:281
msgid ":ref:`float<class_float>` **atan** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:283
msgid ""
"Returns the arc tangent of ``s`` in radians. Use it to get the angle from"
" an angle's tangent in trigonometry: ``atan(tan(angle)) == angle``."
msgstr ""

#: ../../classes/class_@gdscript.rst:285
msgid ""
"The method cannot know in which quadrant the angle should fall. See "
":ref:`atan2<class_@GDScript_atan2>` if you always want an exact angle."
msgstr ""

#: ../../classes/class_@gdscript.rst:293
msgid ""
":ref:`float<class_float>` **atan2** **(** :ref:`float<class_float>` x, "
":ref:`float<class_float>` y **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:295
msgid ""
"Returns the arc tangent of ``y/x`` in radians. Use to get the angle of "
"tangent ``y/x``. To compute the value, the method takes into account the "
"sign of both arguments in order to determine the quadrant."
msgstr ""

#: ../../classes/class_@gdscript.rst:303
msgid ""
":ref:`Variant<class_variant>` **bytes2var** **(** "
":ref:`PoolByteArray<class_poolbytearray>` bytes **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:305
msgid "Decodes a byte array back to a value."
msgstr ""

#: ../../classes/class_@gdscript.rst:309
msgid ""
":ref:`Vector2<class_vector2>` **cartesian2polar** **(** "
":ref:`float<class_float>` x, :ref:`float<class_float>` y **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:311
msgid ""
"Converts a 2D point expressed in the cartesian coordinate system (x and y"
" axis) to the polar coordinate system (a distance from the origin and an "
"angle)."
msgstr ""

#: ../../classes/class_@gdscript.rst:315
msgid ":ref:`float<class_float>` **ceil** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:317
msgid ""
"Rounds ``s`` upward, returning the smallest integral value that is not "
"less than ``s``."
msgstr ""

#: ../../classes/class_@gdscript.rst:326
msgid ""
":ref:`String<class_string>` **char** **(** :ref:`int<class_int>` ascii "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:328
msgid "Returns a character as a String of the given ASCII code."
msgstr ""

#: ../../classes/class_@gdscript.rst:339
msgid ""
":ref:`float<class_float>` **clamp** **(** :ref:`float<class_float>` "
"value, :ref:`float<class_float>` min, :ref:`float<class_float>` max **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:341
msgid ""
"Clamps ``value`` and returns a value not less than ``min`` and not more "
"than ``max``."
msgstr ""

#: ../../classes/class_@gdscript.rst:355
msgid ""
":ref:`Object<class_object>` **convert** **(** "
":ref:`Variant<class_variant>` what, :ref:`int<class_int>` type **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:357
msgid ""
"Converts from a type to another in the best way possible. The ``type`` "
"parameter uses the enum TYPE\\_\\* in "
":ref:`@GlobalScope<class_@globalscope>`."
msgstr ""

#: ../../classes/class_@gdscript.rst:371
msgid ":ref:`float<class_float>` **cos** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:373
msgid "Returns the cosine of angle ``s`` in radians."
msgstr ""

#: ../../classes/class_@gdscript.rst:383
msgid ":ref:`float<class_float>` **cosh** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:385
msgid "Returns the hyperbolic cosine of ``s`` in radians."
msgstr ""

#: ../../classes/class_@gdscript.rst:394
msgid ""
":ref:`float<class_float>` **db2linear** **(** :ref:`float<class_float>` "
"db **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:396
msgid "Converts from decibels to linear energy (audio)."
msgstr ""

#: ../../classes/class_@gdscript.rst:400
msgid ""
":ref:`float<class_float>` **decimals** **(** :ref:`float<class_float>` "
"step **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:402
msgid "Returns the position of the first non-zero digit, after the decimal point."
msgstr ""

#: ../../classes/class_@gdscript.rst:411
msgid ""
":ref:`float<class_float>` **dectime** **(** :ref:`float<class_float>` "
"value, :ref:`float<class_float>` amount, :ref:`float<class_float>` step "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:413
msgid "Returns the result of ``value`` decreased by ``step`` \\* ``amount``."
msgstr ""

#: ../../classes/class_@gdscript.rst:422
msgid ""
":ref:`float<class_float>` **deg2rad** **(** :ref:`float<class_float>` deg"
" **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:424
msgid "Returns degrees converted to radians."
msgstr ""

#: ../../classes/class_@gdscript.rst:433
msgid ""
":ref:`Object<class_object>` **dict2inst** **(** "
":ref:`Dictionary<class_dictionary>` dict **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:435
msgid ""
"Converts a previously converted instance to a dictionary, back into an "
"instance. Useful for deserializing."
msgstr ""

#: ../../classes/class_@gdscript.rst:439
msgid ""
":ref:`float<class_float>` **ease** **(** :ref:`float<class_float>` s, "
":ref:`float<class_float>` curve **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:441
msgid ""
"Easing function, based on exponent. 0 is constant, 1 is linear, 0 to 1 is"
" ease-in, 1+ is ease out. Negative values are in-out/out in."
msgstr ""

#: ../../classes/class_@gdscript.rst:445
msgid ":ref:`float<class_float>` **exp** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:447
msgid ""
"Raises the Euler's constant **e** to the power of ``s`` and returns it. "
"**e** has an approximate value of 2.71828."
msgstr ""

#: ../../classes/class_@gdscript.rst:455
msgid ""
":ref:`float<class_float>` **floor** **(** :ref:`float<class_float>` s "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:457
msgid "Rounds ``s`` to the closest smaller integer and returns it."
msgstr ""

#: ../../classes/class_@gdscript.rst:468
msgid ""
":ref:`float<class_float>` **fmod** **(** :ref:`float<class_float>` x, "
":ref:`float<class_float>` y **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:470
msgid "Returns the floating-point remainder of ``x/y``."
msgstr ""

#: ../../classes/class_@gdscript.rst:479
msgid ""
":ref:`float<class_float>` **fposmod** **(** :ref:`float<class_float>` x, "
":ref:`float<class_float>` y **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:481
msgid ""
"Returns the floating-point remainder of ``x/y`` that wraps equally in "
"positive and negative."
msgstr ""

#: ../../classes/class_@gdscript.rst:490
msgid "Produces:"
msgstr ""

#: ../../classes/class_@gdscript.rst:507
msgid ""
":ref:`Object<class_object>` **funcref** **(** :ref:`Object<class_object>`"
" instance, :ref:`String<class_string>` funcname **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:509
msgid ""
"Returns a reference to the specified function ``funcname`` in the "
"``instance`` node. As functions aren't first-class objects in GDscript, "
"use ``funcref`` to store a :ref:`FuncRef<class_funcref>` in a variable "
"and call it later."
msgstr ""

#: ../../classes/class_@gdscript.rst:521
msgid ""
":ref:`int<class_int>` **hash** **(** :ref:`Variant<class_variant>` var "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:523
msgid "Returns the integer hash of the variable passed."
msgstr ""

#: ../../classes/class_@gdscript.rst:531
msgid ""
":ref:`Dictionary<class_dictionary>` **inst2dict** **(** "
":ref:`Object<class_object>` inst **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:533
msgid ""
"Returns the passed instance converted to a dictionary (useful for "
"serializing)."
msgstr ""

#: ../../classes/class_@gdscript.rst:543
msgid "Prints out:"
msgstr ""

#: ../../classes/class_@gdscript.rst:552
msgid ""
":ref:`Object<class_object>` **instance_from_id** **(** "
":ref:`int<class_int>` instance_id **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:554
msgid ""
"Returns the Object that corresponds to ``instance_id``. All Objects have "
"a unique instance ID."
msgstr ""

#: ../../classes/class_@gdscript.rst:566
msgid ""
":ref:`float<class_float>` **inverse_lerp** **(** "
":ref:`float<class_float>` from, :ref:`float<class_float>` to, "
":ref:`float<class_float>` weight **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:568
msgid "Returns a normalized value considering the given range."
msgstr ""

#: ../../classes/class_@gdscript.rst:576
msgid ":ref:`bool<class_bool>` **is_inf** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:578
msgid ""
"Returns True/False whether ``s`` is an infinity value (either positive "
"infinity or negative infinity)."
msgstr ""

#: ../../classes/class_@gdscript.rst:582
msgid ":ref:`bool<class_bool>` **is_nan** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:584
msgid "Returns True/False whether ``s`` is a NaN (Not-A-Number) value."
msgstr ""

#: ../../classes/class_@gdscript.rst:588
msgid ""
":ref:`int<class_int>` **len** **(** :ref:`Variant<class_variant>` var "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:590
msgid ""
"Returns length of Variant ``var``. Length is the character count of "
"String, element count of Array, size of Dictionary, etc. Note: Generates "
"a fatal error if Variant can not provide a length."
msgstr ""

#: ../../classes/class_@gdscript.rst:599
msgid ""
":ref:`float<class_float>` **lerp** **(** :ref:`float<class_float>` from, "
":ref:`float<class_float>` to, :ref:`float<class_float>` weight **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:601
msgid "Linearly interpolates between two values by a normalized value."
msgstr ""

#: ../../classes/class_@gdscript.rst:609
msgid ""
":ref:`float<class_float>` **linear2db** **(** :ref:`float<class_float>` "
"nrg **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:611
msgid "Converts from linear energy to decibels (audio)."
msgstr ""

#: ../../classes/class_@gdscript.rst:615
msgid ""
":ref:`Object<class_object>` **load** **(** :ref:`String<class_string>` "
"path **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:617
msgid ""
"Loads a resource from the filesystem located at ``path``. Note: resource "
"paths can be obtained by right clicking on a resource in the Assets Panel"
" and choosing \"Copy Path\"."
msgstr ""

#: ../../classes/class_@gdscript.rst:626
msgid ":ref:`float<class_float>` **log** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:628
msgid ""
"Natural logarithm. The amount of time needed to reach a certain level of "
"continuous growth. Note: This is not the same as the log function on your"
" calculator which is a base 10 logarithm."
msgstr ""

#: ../../classes/class_@gdscript.rst:636
msgid ""
":ref:`float<class_float>` **max** **(** :ref:`float<class_float>` a, "
":ref:`float<class_float>` b **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:638
msgid "Returns the maximum of two values."
msgstr ""

#: ../../classes/class_@gdscript.rst:647
msgid ""
":ref:`float<class_float>` **min** **(** :ref:`float<class_float>` a, "
":ref:`float<class_float>` b **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:649
msgid "Returns the minimum of two values."
msgstr ""

#: ../../classes/class_@gdscript.rst:658
msgid ""
":ref:`int<class_int>` **nearest_po2** **(** :ref:`int<class_int>` value "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:660
msgid "Returns the nearest larger power of 2 for integer ``value``."
msgstr ""

#: ../../classes/class_@gdscript.rst:670
msgid ""
":ref:`Variant<class_variant>` **parse_json** **(** "
":ref:`String<class_string>` json **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:672
msgid ""
"Parse JSON text to a Variant (use :ref:`typeof<class_@GDScript_typeof>` "
"to check if it is what you expect)."
msgstr ""

#: ../../classes/class_@gdscript.rst:674
msgid ""
"Be aware that the JSON specification does not define integer or float "
"types, but only a number type. Therefore, parsing a JSON text will "
"convert all numerical values to :ref:`float<class_float>` types."
msgstr ""

#: ../../classes/class_@gdscript.rst:676
msgid ""
"Note that JSON objects do not preserve key order like Godot dictionaries,"
" thus you should not rely on keys being in a certain order if a "
"dictionary is constructed from JSON. In contrast, JSON arrays retain the "
"order of their elements:"
msgstr ""

#: ../../classes/class_@gdscript.rst:688
msgid ""
":ref:`Vector2<class_vector2>` **polar2cartesian** **(** "
":ref:`float<class_float>` r, :ref:`float<class_float>` th **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:690
msgid ""
"Converts a 2D point expressed in the polar coordinate system (a distance "
"from the origin ``r`` and an angle ``th``) to the cartesian coordinate "
"system (x and y axis)."
msgstr ""

#: ../../classes/class_@gdscript.rst:694
msgid ""
":ref:`float<class_float>` **pow** **(** :ref:`float<class_float>` x, "
":ref:`float<class_float>` y **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:696
msgid "Returns the result of ``x`` raised to the power of ``y``."
msgstr ""

#: ../../classes/class_@gdscript.rst:704
msgid ""
":ref:`Resource<class_resource>` **preload** **(** "
":ref:`String<class_string>` path **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:706
msgid ""
"Returns a resource from the filesystem that is loaded during script "
"parsing. Note: resource paths can be obtained by right clicking on a "
"resource in the Assets Panel and choosing \"Copy Path\"."
msgstr ""

#: ../../classes/class_@gdscript.rst:715
msgid "void **print** **(** **)** vararg"
msgstr ""

#: ../../classes/class_@gdscript.rst:717
msgid ""
"Converts one or more arguments to strings in the best way possible and "
"prints them to the console."
msgstr ""

#: ../../classes/class_@gdscript.rst:726
msgid "void **print_stack** **(** **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:728
msgid ""
"Prints a stack track at code location, only works when running with "
"debugger turned on."
msgstr ""

#: ../../classes/class_@gdscript.rst:730
msgid "Output in the console would look something like this:"
msgstr ""

#: ../../classes/class_@gdscript.rst:738
msgid "void **printerr** **(** **)** vararg"
msgstr ""

#: ../../classes/class_@gdscript.rst:740
msgid ""
"Prints one or more arguments to strings in the best way possible to "
"standard error line."
msgstr ""

#: ../../classes/class_@gdscript.rst:748
msgid "void **printraw** **(** **)** vararg"
msgstr ""

#: ../../classes/class_@gdscript.rst:750
msgid ""
"Prints one or more arguments to strings in the best way possible to "
"console. No newline is added at the end."
msgstr ""

#: ../../classes/class_@gdscript.rst:760
msgid "void **prints** **(** **)** vararg"
msgstr ""

#: ../../classes/class_@gdscript.rst:762
msgid ""
"Prints one or more arguments to the console with a space between each "
"argument."
msgstr ""

#: ../../classes/class_@gdscript.rst:770
msgid "void **printt** **(** **)** vararg"
msgstr ""

#: ../../classes/class_@gdscript.rst:772
msgid ""
"Prints one or more arguments to the console with a tab between each "
"argument."
msgstr ""

#: ../../classes/class_@gdscript.rst:780
msgid ""
":ref:`float<class_float>` **rad2deg** **(** :ref:`float<class_float>` rad"
" **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:782
msgid "Converts from radians to degrees."
msgstr ""

#: ../../classes/class_@gdscript.rst:790
msgid ""
":ref:`float<class_float>` **rand_range** **(** :ref:`float<class_float>` "
"from, :ref:`float<class_float>` to **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:792
msgid "Random range, any floating point value between ``from`` and ``to``."
msgstr ""

#: ../../classes/class_@gdscript.rst:800
msgid ""
":ref:`Array<class_array>` **rand_seed** **(** :ref:`int<class_int>` seed "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:802
msgid ""
"Random from seed: pass a ``seed``, and an array with both number and new "
"seed is returned. \"Seed\" here refers to the internal state of the "
"pseudo random number generator. The internal state of the current "
"implementation is 64 bits."
msgstr ""

#: ../../classes/class_@gdscript.rst:806
msgid ":ref:`float<class_float>` **randf** **(** **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:808
msgid "Returns a random floating point value between 0 and 1."
msgstr ""

#: ../../classes/class_@gdscript.rst:816
msgid ":ref:`int<class_int>` **randi** **(** **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:818
msgid ""
"Returns a random 32 bit integer. Use remainder to obtain a random value "
"between 0 and N (where N is smaller than 2^32 -1)."
msgstr ""

#: ../../classes/class_@gdscript.rst:828
msgid "void **randomize** **(** **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:830
msgid ""
"Randomizes the seed (or the internal state) of the random number "
"generator. Current implementation reseeds using a number based on time."
msgstr ""

#: ../../classes/class_@gdscript.rst:839
msgid ":ref:`Array<class_array>` **range** **(** **)** vararg"
msgstr ""

#: ../../classes/class_@gdscript.rst:841
msgid ""
"Returns an array with the given range. Range can be 1 argument N (0 to "
"N-1), two arguments (initial, final-1) or three arguments (initial, "
"final-1, increment)."
msgstr ""

#: ../../classes/class_@gdscript.rst:852
msgid "Output:"
msgstr ""

#: ../../classes/class_@gdscript.rst:871
msgid ""
":ref:`float<class_float>` **range_lerp** **(** :ref:`float<class_float>` "
"value, :ref:`float<class_float>` istart, :ref:`float<class_float>` istop,"
" :ref:`float<class_float>` ostart, :ref:`float<class_float>` ostop **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:873
msgid "Maps a ``value`` from range ``[istart, istop]`` to ``[ostart, ostop]``."
msgstr ""

#: ../../classes/class_@gdscript.rst:881
msgid ""
":ref:`float<class_float>` **round** **(** :ref:`float<class_float>` s "
"**)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:883
msgid ""
"Returns the integral value that is nearest to ``s``, with halfway cases "
"rounded away from zero."
msgstr ""

#: ../../classes/class_@gdscript.rst:891
msgid "void **seed** **(** :ref:`int<class_int>` seed **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:893
msgid "Sets seed for the random number generator."
msgstr ""

#: ../../classes/class_@gdscript.rst:902
msgid ":ref:`float<class_float>` **sign** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:904
msgid "Returns the sign of ``s``: -1 or 1. Returns 0 if ``s`` is 0."
msgstr ""

#: ../../classes/class_@gdscript.rst:914
msgid ":ref:`float<class_float>` **sin** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:916
msgid "Returns the sine of angle ``s`` in radians."
msgstr ""

#: ../../classes/class_@gdscript.rst:924
msgid ":ref:`float<class_float>` **sinh** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:926
msgid "Returns the hyperbolic sine of ``s``."
msgstr ""

#: ../../classes/class_@gdscript.rst:935
msgid ":ref:`float<class_float>` **sqrt** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:937
msgid "Returns the square root of ``s``."
msgstr ""

#: ../../classes/class_@gdscript.rst:945
msgid ""
":ref:`float<class_float>` **stepify** **(** :ref:`float<class_float>` s, "
":ref:`float<class_float>` step **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:947
msgid "Snaps float value ``s`` to a given ``step``."
msgstr ""

#: ../../classes/class_@gdscript.rst:951
msgid ":ref:`String<class_string>` **str** **(** **)** vararg"
msgstr ""

#: ../../classes/class_@gdscript.rst:953
msgid "Converts one or more arguments to string in the best way possible."
msgstr ""

#: ../../classes/class_@gdscript.rst:964
msgid ""
":ref:`Variant<class_variant>` **str2var** **(** "
":ref:`String<class_string>` string **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:966
msgid ""
"Converts a formatted string that was returned by "
":ref:`var2str<class_@GDScript_var2str>` to the original value."
msgstr ""

#: ../../classes/class_@gdscript.rst:976
msgid ":ref:`float<class_float>` **tan** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:978
msgid "Returns the tangent of angle ``s`` in radians."
msgstr ""

#: ../../classes/class_@gdscript.rst:986
msgid ":ref:`float<class_float>` **tanh** **(** :ref:`float<class_float>` s **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:988
msgid "Returns the hyperbolic tangent of ``s``."
msgstr ""

#: ../../classes/class_@gdscript.rst:997
msgid ""
":ref:`String<class_string>` **to_json** **(** "
":ref:`Variant<class_variant>` var **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:999
msgid ""
"Converts a Variant ``var`` to JSON text and return the result. Useful for"
" serializing data to store or send over the network."
msgstr ""

#: ../../classes/class_@gdscript.rst:1009
msgid ""
":ref:`bool<class_bool>` **type_exists** **(** :ref:`String<class_string>`"
" type **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:1011
msgid "Returns whether the given class exists in :ref:`ClassDB<class_classdb>`."
msgstr ""

#: ../../classes/class_@gdscript.rst:1020
msgid ""
":ref:`int<class_int>` **typeof** **(** :ref:`Variant<class_variant>` what"
" **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:1022
msgid ""
"Returns the internal type of the given Variant object, using the "
"TYPE\\_\\* enum in :ref:`@GlobalScope<class_@globalscope>`."
msgstr ""

#: ../../classes/class_@gdscript.rst:1034
msgid ""
":ref:`String<class_string>` **validate_json** **(** "
":ref:`String<class_string>` json **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:1036
msgid ""
"Checks that ``json`` is valid JSON data. Returns empty string if valid. "
"Returns error message if not valid."
msgstr ""

#: ../../classes/class_@gdscript.rst:1049
msgid ""
":ref:`PoolByteArray<class_poolbytearray>` **var2bytes** **(** "
":ref:`Variant<class_variant>` var **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:1051
msgid "Encodes a variable value to a byte array."
msgstr ""

#: ../../classes/class_@gdscript.rst:1055
msgid ""
":ref:`String<class_string>` **var2str** **(** "
":ref:`Variant<class_variant>` var **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:1057
msgid ""
"Converts a Variant ``var`` to a formatted string that can later be parsed"
" using :ref:`str2var<class_@GDScript_str2var>`."
msgstr ""

#: ../../classes/class_@gdscript.rst:1064
msgid "prints"
msgstr ""

#: ../../classes/class_@gdscript.rst:1075
msgid ""
":ref:`Object<class_object>` **weakref** **(** :ref:`Object<class_object>`"
" obj **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:1077
msgid "Returns a weak reference to an object."
msgstr ""

#: ../../classes/class_@gdscript.rst:1079
msgid ""
"A weak reference to an object is not enough to keep the object alive: "
"when the only remaining references to a referent are weak references, "
"garbage collection is free to destroy the referent and reuse its memory "
"for something else. However, until the object is actually destroyed the "
"weak reference may return the object even if there are no strong "
"references to it."
msgstr ""

#: ../../classes/class_@gdscript.rst:1083
msgid ""
":ref:`float<class_float>` **wrapf** **(** :ref:`float<class_float>` "
"value, :ref:`float<class_float>` min, :ref:`float<class_float>` max **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:1085
msgid "Wraps float ``value`` between ``min`` and ``max``."
msgstr ""

#: ../../classes/class_@gdscript.rst:1087
#: ../../classes/class_@gdscript.rst:1110
msgid "Usable for creating loop-alike behavior or infinite surfaces."
msgstr ""

#: ../../classes/class_@gdscript.rst:1106
msgid ""
":ref:`int<class_int>` **wrapi** **(** :ref:`int<class_int>` value, "
":ref:`int<class_int>` min, :ref:`int<class_int>` max **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:1108
msgid "Wraps integer ``value`` between ``min`` and ``max``."
msgstr ""

#: ../../classes/class_@gdscript.rst:1129
msgid ""
":ref:`GDScriptFunctionState<class_gdscriptfunctionstate>` **yield** **(**"
" :ref:`Object<class_object>` object=null, :ref:`String<class_string>` "
"signal=\"\" **)**"
msgstr ""

#: ../../classes/class_@gdscript.rst:1131
msgid ""
"Stops the function execution and returns the current state. Call "
":ref:`GDScriptFunctionState.resume<class_GDScriptFunctionState_resume>` "
"on the state to resume execution. This invalidates the state."
msgstr ""

#: ../../classes/class_@gdscript.rst:1133
msgid ""
"Returns anything that was passed to the resume function call. If passed "
"an object and a signal, the execution is resumed when the object's signal"
" is emitted."
msgstr ""

