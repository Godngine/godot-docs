# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_theme.rst:8
msgid "Theme"
msgstr ""

#: ../../classes/class_theme.rst:10
msgid ""
"**Inherits:** :ref:`Resource<class_resource>` **<** "
":ref:`Reference<class_reference>` **<** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_theme.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_theme.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_theme.rst:17
msgid "Theme for controls."
msgstr ""

#: ../../classes/class_theme.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_theme.rst:23 ../../classes/class_theme.rst:25
#: ../../classes/class_theme.rst:27 ../../classes/class_theme.rst:29
#: ../../classes/class_theme.rst:31 ../../classes/class_theme.rst:33
#: ../../classes/class_theme.rst:69 ../../classes/class_theme.rst:71
#: ../../classes/class_theme.rst:73 ../../classes/class_theme.rst:75
#: ../../classes/class_theme.rst:77
msgid "void"
msgstr ""

#: ../../classes/class_theme.rst:23
msgid ""
":ref:`clear_color<class_Theme_clear_color>` **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type **)**"
msgstr ""

#: ../../classes/class_theme.rst:25
msgid ""
":ref:`clear_constant<class_Theme_clear_constant>` **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type **)**"
msgstr ""

#: ../../classes/class_theme.rst:27
msgid ""
":ref:`clear_font<class_Theme_clear_font>` **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type **)**"
msgstr ""

#: ../../classes/class_theme.rst:29
msgid ""
":ref:`clear_icon<class_Theme_clear_icon>` **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type **)**"
msgstr ""

#: ../../classes/class_theme.rst:31
msgid ""
":ref:`clear_stylebox<class_Theme_clear_stylebox>` **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type **)**"
msgstr ""

#: ../../classes/class_theme.rst:33
msgid ":ref:`copy_default_theme<class_Theme_copy_default_theme>` **(** **)**"
msgstr ""

#: ../../classes/class_theme.rst:35
msgid ":ref:`Color<class_color>`"
msgstr ""

#: ../../classes/class_theme.rst:35
msgid ""
":ref:`get_color<class_Theme_get_color>` **(** :ref:`String<class_string>`"
" name, :ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:37 ../../classes/class_theme.rst:41
#: ../../classes/class_theme.rst:45 ../../classes/class_theme.rst:49
#: ../../classes/class_theme.rst:53 ../../classes/class_theme.rst:55
#: ../../classes/class_theme.rst:57
msgid ":ref:`PoolStringArray<class_poolstringarray>`"
msgstr ""

#: ../../classes/class_theme.rst:37
msgid ""
":ref:`get_color_list<class_Theme_get_color_list>` **(** "
":ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:39
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_theme.rst:39
msgid ""
":ref:`get_constant<class_Theme_get_constant>` **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type **)** "
"const"
msgstr ""

#: ../../classes/class_theme.rst:41
msgid ""
":ref:`get_constant_list<class_Theme_get_constant_list>` **(** "
":ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:43
msgid ":ref:`Font<class_font>`"
msgstr ""

#: ../../classes/class_theme.rst:43
msgid ""
":ref:`get_font<class_Theme_get_font>` **(** :ref:`String<class_string>` "
"name, :ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:45
msgid ""
":ref:`get_font_list<class_Theme_get_font_list>` **(** "
":ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:47
msgid ":ref:`Texture<class_texture>`"
msgstr ""

#: ../../classes/class_theme.rst:47
msgid ""
":ref:`get_icon<class_Theme_get_icon>` **(** :ref:`String<class_string>` "
"name, :ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:49
msgid ""
":ref:`get_icon_list<class_Theme_get_icon_list>` **(** "
":ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:51
msgid ":ref:`StyleBox<class_stylebox>`"
msgstr ""

#: ../../classes/class_theme.rst:51
msgid ""
":ref:`get_stylebox<class_Theme_get_stylebox>` **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type **)** "
"const"
msgstr ""

#: ../../classes/class_theme.rst:53
msgid ""
":ref:`get_stylebox_list<class_Theme_get_stylebox_list>` **(** "
":ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:55
msgid ""
":ref:`get_stylebox_types<class_Theme_get_stylebox_types>` **(** **)** "
"const"
msgstr ""

#: ../../classes/class_theme.rst:57
msgid ""
":ref:`get_type_list<class_Theme_get_type_list>` **(** "
":ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:59 ../../classes/class_theme.rst:61
#: ../../classes/class_theme.rst:63 ../../classes/class_theme.rst:65
#: ../../classes/class_theme.rst:67
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_theme.rst:59
msgid ""
":ref:`has_color<class_Theme_has_color>` **(** :ref:`String<class_string>`"
" name, :ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:61
msgid ""
":ref:`has_constant<class_Theme_has_constant>` **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type **)** "
"const"
msgstr ""

#: ../../classes/class_theme.rst:63
msgid ""
":ref:`has_font<class_Theme_has_font>` **(** :ref:`String<class_string>` "
"name, :ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:65
msgid ""
":ref:`has_icon<class_Theme_has_icon>` **(** :ref:`String<class_string>` "
"name, :ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:67
msgid ""
":ref:`has_stylebox<class_Theme_has_stylebox>` **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type **)** "
"const"
msgstr ""

#: ../../classes/class_theme.rst:69
msgid ""
":ref:`set_color<class_Theme_set_color>` **(** :ref:`String<class_string>`"
" name, :ref:`String<class_string>` type, :ref:`Color<class_color>` color "
"**)**"
msgstr ""

#: ../../classes/class_theme.rst:71
msgid ""
":ref:`set_constant<class_Theme_set_constant>` **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type, "
":ref:`int<class_int>` constant **)**"
msgstr ""

#: ../../classes/class_theme.rst:73
msgid ""
":ref:`set_font<class_Theme_set_font>` **(** :ref:`String<class_string>` "
"name, :ref:`String<class_string>` type, :ref:`Font<class_font>` font "
"**)**"
msgstr ""

#: ../../classes/class_theme.rst:75
msgid ""
":ref:`set_icon<class_Theme_set_icon>` **(** :ref:`String<class_string>` "
"name, :ref:`String<class_string>` type, :ref:`Texture<class_texture>` "
"texture **)**"
msgstr ""

#: ../../classes/class_theme.rst:77
msgid ""
":ref:`set_stylebox<class_Theme_set_stylebox>` **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type, "
":ref:`StyleBox<class_stylebox>` texture **)**"
msgstr ""

#: ../../classes/class_theme.rst:81
msgid "Member Variables"
msgstr ""

#: ../../classes/class_theme.rst:85
msgid ":ref:`Font<class_font>` **default_font** - The theme's default font."
msgstr ""

#: ../../classes/class_theme.rst:89
msgid "Description"
msgstr ""

#: ../../classes/class_theme.rst:91
msgid ""
"Theme for skinning controls. Controls can be skinned individually, but "
"for complex applications it's more efficient to just create a global "
"theme that defines everything. This theme can be applied to any "
":ref:`Control<class_control>`, and it and its children will automatically"
" use it."
msgstr ""

#: ../../classes/class_theme.rst:93
msgid ""
"Theme resources can be alternatively loaded by writing them in a .theme "
"file, see docs for more info."
msgstr ""

#: ../../classes/class_theme.rst:96
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_theme.rst:100
msgid ""
"void **clear_color** **(** :ref:`String<class_string>` name, "
":ref:`String<class_string>` type **)**"
msgstr ""

#: ../../classes/class_theme.rst:102
msgid "Clears theme :ref:`Color<class_color>` at ``name`` if Theme has ``type``."
msgstr ""

#: ../../classes/class_theme.rst:106
msgid ""
"void **clear_constant** **(** :ref:`String<class_string>` name, "
":ref:`String<class_string>` type **)**"
msgstr ""

#: ../../classes/class_theme.rst:108
msgid "Clears theme constant at ``name`` if Theme has ``type``."
msgstr ""

#: ../../classes/class_theme.rst:112
msgid ""
"void **clear_font** **(** :ref:`String<class_string>` name, "
":ref:`String<class_string>` type **)**"
msgstr ""

#: ../../classes/class_theme.rst:114
msgid "Clears :ref:`Font<class_font>` at ``name`` if Theme has ``type``."
msgstr ""

#: ../../classes/class_theme.rst:118
msgid ""
"void **clear_icon** **(** :ref:`String<class_string>` name, "
":ref:`String<class_string>` type **)**"
msgstr ""

#: ../../classes/class_theme.rst:120
msgid "Clears icon at ``name`` if Theme has ``type``."
msgstr ""

#: ../../classes/class_theme.rst:124
msgid ""
"void **clear_stylebox** **(** :ref:`String<class_string>` name, "
":ref:`String<class_string>` type **)**"
msgstr ""

#: ../../classes/class_theme.rst:126
msgid "Clears :ref:`StyleBox<class_stylebox>` at ``name`` if Theme has ``type``."
msgstr ""

#: ../../classes/class_theme.rst:130
msgid "void **copy_default_theme** **(** **)**"
msgstr ""

#: ../../classes/class_theme.rst:132
msgid "Sets theme values to a copy of the default theme values."
msgstr ""

#: ../../classes/class_theme.rst:136
msgid ""
":ref:`Color<class_color>` **get_color** **(** :ref:`String<class_string>`"
" name, :ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:138
msgid "Returns the :ref:`Color<class_color>` at ``name`` if Theme has ``type``."
msgstr ""

#: ../../classes/class_theme.rst:142
msgid ""
":ref:`PoolStringArray<class_poolstringarray>` **get_color_list** **(** "
":ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:144
msgid ""
"Returns all of the :ref:`Color<class_color>`\\ s as a "
":ref:`PoolStringArray<class_poolstringarray>` filled with each "
":ref:`Color<class_color>`'s name, for use in "
":ref:`get_color<class_Theme_get_color>`, if Theme has ``type``."
msgstr ""

#: ../../classes/class_theme.rst:148
msgid ""
":ref:`int<class_int>` **get_constant** **(** :ref:`String<class_string>` "
"name, :ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:150
msgid "Returns the constant at ``name`` if Theme has ``type``."
msgstr ""

#: ../../classes/class_theme.rst:154
msgid ""
":ref:`PoolStringArray<class_poolstringarray>` **get_constant_list** **(**"
" :ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:156
msgid ""
"Returns all of the constants as a "
":ref:`PoolStringArray<class_poolstringarray>` filled with each constant's"
" name, for use in :ref:`get_constant<class_Theme_get_constant>`, if Theme"
" has ``type``."
msgstr ""

#: ../../classes/class_theme.rst:160
msgid ""
":ref:`Font<class_font>` **get_font** **(** :ref:`String<class_string>` "
"name, :ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:162
msgid "Returns the :ref:`Font<class_font>` at ``name`` if Theme has ``type``."
msgstr ""

#: ../../classes/class_theme.rst:166
msgid ""
":ref:`PoolStringArray<class_poolstringarray>` **get_font_list** **(** "
":ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:168
msgid ""
"Returns all of the :ref:`Font<class_font>`\\ s as a "
":ref:`PoolStringArray<class_poolstringarray>` filled with each "
":ref:`Font<class_font>`'s name, for use in "
":ref:`get_font<class_Theme_get_font>`, if Theme has ``type``."
msgstr ""

#: ../../classes/class_theme.rst:172
msgid ""
":ref:`Texture<class_texture>` **get_icon** **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type **)** "
"const"
msgstr ""

#: ../../classes/class_theme.rst:174
msgid ""
"Returns the icon :ref:`Texture<class_texture>` at ``name`` if Theme has "
"``type``."
msgstr ""

#: ../../classes/class_theme.rst:178
msgid ""
":ref:`PoolStringArray<class_poolstringarray>` **get_icon_list** **(** "
":ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:180
msgid ""
"Returns all of the icons as a "
":ref:`PoolStringArray<class_poolstringarray>` filled with each "
":ref:`Texture<class_texture>`'s name, for use in "
":ref:`get_icon<class_Theme_get_icon>`, if Theme has ``type``."
msgstr ""

#: ../../classes/class_theme.rst:184
msgid ""
":ref:`StyleBox<class_stylebox>` **get_stylebox** **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type **)** "
"const"
msgstr ""

#: ../../classes/class_theme.rst:186
msgid ""
"Returns the icon :ref:`StyleBox<class_stylebox>` at ``name`` if Theme has"
" ``type``."
msgstr ""

#: ../../classes/class_theme.rst:190
msgid ""
":ref:`PoolStringArray<class_poolstringarray>` **get_stylebox_list** **(**"
" :ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:192
msgid ""
"Returns all of the :ref:`StyleBox<class_stylebox>`\\ s as a "
":ref:`PoolStringArray<class_poolstringarray>` filled with each "
":ref:`StyleBox<class_stylebox>`'s name, for use in "
":ref:`get_stylebox<class_Theme_get_stylebox>`, if Theme has ``type``."
msgstr ""

#: ../../classes/class_theme.rst:196
msgid ""
":ref:`PoolStringArray<class_poolstringarray>` **get_stylebox_types** "
"**(** **)** const"
msgstr ""

#: ../../classes/class_theme.rst:198
msgid ""
"Returns all of the :ref:`StyleBox<class_stylebox>` types as a "
":ref:`PoolStringArray<class_poolstringarray>` filled with each "
":ref:`StyleBox<class_stylebox>`'s type, for use in "
":ref:`get_stylebox<class_Theme_get_stylebox>` and/or "
":ref:`get_stylebox_list<class_Theme_get_stylebox_list>`, if Theme has "
"``type``."
msgstr ""

#: ../../classes/class_theme.rst:202
msgid ""
":ref:`PoolStringArray<class_poolstringarray>` **get_type_list** **(** "
":ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:204
msgid ""
"Returns all of the types in ``type`` as a "
":ref:`PoolStringArray<class_poolstringarray>` for use in any of the "
"get\\_\\* functions, if Theme has ``type``."
msgstr ""

#: ../../classes/class_theme.rst:208
msgid ""
":ref:`bool<class_bool>` **has_color** **(** :ref:`String<class_string>` "
"name, :ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:210
msgid ""
"Returns ``true`` if :ref:`Color<class_color>` with ``name`` is in "
"``type``."
msgstr ""

#: ../../classes/class_theme.rst:212 ../../classes/class_theme.rst:220
#: ../../classes/class_theme.rst:228 ../../classes/class_theme.rst:236
#: ../../classes/class_theme.rst:244
msgid "Returns ``false`` if Theme does not have ``type``."
msgstr ""

#: ../../classes/class_theme.rst:216
msgid ""
":ref:`bool<class_bool>` **has_constant** **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type **)** "
"const"
msgstr ""

#: ../../classes/class_theme.rst:218
msgid "Returns ``true`` if constant with ``name`` is in ``type``."
msgstr ""

#: ../../classes/class_theme.rst:224
msgid ""
":ref:`bool<class_bool>` **has_font** **(** :ref:`String<class_string>` "
"name, :ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:226
msgid "Returns ``true`` if :ref:`Font<class_font>` with ``name`` is in ``type``."
msgstr ""

#: ../../classes/class_theme.rst:232
msgid ""
":ref:`bool<class_bool>` **has_icon** **(** :ref:`String<class_string>` "
"name, :ref:`String<class_string>` type **)** const"
msgstr ""

#: ../../classes/class_theme.rst:234
msgid ""
"Returns ``true`` if icon :ref:`Texture<class_texture>` with ``name`` is "
"in ``type``."
msgstr ""

#: ../../classes/class_theme.rst:240
msgid ""
":ref:`bool<class_bool>` **has_stylebox** **(** "
":ref:`String<class_string>` name, :ref:`String<class_string>` type **)** "
"const"
msgstr ""

#: ../../classes/class_theme.rst:242
msgid ""
"Returns ``true`` if :ref:`StyleBox<class_stylebox>` with ``name`` is in "
"``type``."
msgstr ""

#: ../../classes/class_theme.rst:248
msgid ""
"void **set_color** **(** :ref:`String<class_string>` name, "
":ref:`String<class_string>` type, :ref:`Color<class_color>` color **)**"
msgstr ""

#: ../../classes/class_theme.rst:250
msgid ""
"Sets Theme's :ref:`Color<class_color>` to ``color`` at ``name`` in "
"``type``."
msgstr ""

#: ../../classes/class_theme.rst:252 ../../classes/class_theme.rst:260
#: ../../classes/class_theme.rst:268 ../../classes/class_theme.rst:276
#: ../../classes/class_theme.rst:284
msgid "Does nothing if Theme does not have ``type``."
msgstr ""

#: ../../classes/class_theme.rst:256
msgid ""
"void **set_constant** **(** :ref:`String<class_string>` name, "
":ref:`String<class_string>` type, :ref:`int<class_int>` constant **)**"
msgstr ""

#: ../../classes/class_theme.rst:258
msgid "Sets Theme's constant to ``constant`` at ``name`` in ``type``."
msgstr ""

#: ../../classes/class_theme.rst:264
msgid ""
"void **set_font** **(** :ref:`String<class_string>` name, "
":ref:`String<class_string>` type, :ref:`Font<class_font>` font **)**"
msgstr ""

#: ../../classes/class_theme.rst:266
msgid "Sets Theme's :ref:`Font<class_font>` to ``font`` at ``name`` in ``type``."
msgstr ""

#: ../../classes/class_theme.rst:272
msgid ""
"void **set_icon** **(** :ref:`String<class_string>` name, "
":ref:`String<class_string>` type, :ref:`Texture<class_texture>` texture "
"**)**"
msgstr ""

#: ../../classes/class_theme.rst:274
msgid ""
"Sets Theme's icon :ref:`Texture<class_texture>` to ``texture`` at "
"``name`` in ``type``."
msgstr ""

#: ../../classes/class_theme.rst:280
msgid ""
"void **set_stylebox** **(** :ref:`String<class_string>` name, "
":ref:`String<class_string>` type, :ref:`StyleBox<class_stylebox>` texture"
" **)**"
msgstr ""

#: ../../classes/class_theme.rst:282
msgid ""
"Sets Theme's :ref:`StyleBox<class_stylebox>` to ``stylebox`` at ``name`` "
"in ``type``."
msgstr ""

