# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_textureprogress.rst:8
msgid "TextureProgress"
msgstr ""

#: ../../classes/class_textureprogress.rst:10
msgid ""
"**Inherits:** :ref:`Range<class_range>` **<** "
":ref:`Control<class_control>` **<** :ref:`CanvasItem<class_canvasitem>` "
"**<** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_textureprogress.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_textureprogress.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_textureprogress.rst:17
msgid ""
"Texture-based progress bar. Useful for loading screens and life or "
"stamina bars."
msgstr ""

#: ../../classes/class_textureprogress.rst:20
msgid "Member Variables"
msgstr ""

#: ../../classes/class_textureprogress.rst:24
msgid ""
":ref:`int<class_int>` **fill_mode** - The fill direction. Uses FILL\\_\\*"
" constants."
msgstr ""

#: ../../classes/class_textureprogress.rst:28
msgid ""
":ref:`bool<class_bool>` **nine_patch_stretch** - If ``true`` Godot treats"
" the bar's textures like :ref:`NinePatchRect<class_ninepatchrect>`. Use "
"``stretch_margin_*``, like "
":ref:`stretch_margin_bottom<class_TextureProgress_stretch_margin_bottom>`,"
" to set up the nine patch's 3x3 grid. Default value: ``false``."
msgstr ""

#: ../../classes/class_textureprogress.rst:32
msgid ""
":ref:`Vector2<class_vector2>` **radial_center_offset** - Offsets "
":ref:`texture_progress<class_TextureProgress_texture_progress>` if "
":ref:`fill_mode<class_TextureProgress_fill_mode>` is ``FILL_CLOCKWISE`` "
"or ``FILL_COUNTER_CLOCKWISE``."
msgstr ""

#: ../../classes/class_textureprogress.rst:36
msgid ""
":ref:`float<class_float>` **radial_fill_degrees** - Upper limit for the "
"fill of :ref:`texture_progress<class_TextureProgress_texture_progress>` "
"if :ref:`fill_mode<class_TextureProgress_fill_mode>` is "
"``FILL_CLOCKWISE`` or ``FILL_COUNTER_CLOCKWISE``. When the node's "
"``value`` is equal to its ``max_value``, the texture fills up to this "
"angle."
msgstr ""

#: ../../classes/class_textureprogress.rst:38
msgid ""
"See :ref:`Range.value<class_Range_value>`, "
":ref:`Range.max_value<class_Range_max_value>`."
msgstr ""

#: ../../classes/class_textureprogress.rst:42
msgid ""
":ref:`float<class_float>` **radial_initial_angle** - Starting angle for "
"the fill of "
":ref:`texture_progress<class_TextureProgress_texture_progress>` if "
":ref:`fill_mode<class_TextureProgress_fill_mode>` is ``FILL_CLOCKWISE`` "
"or ``FILL_COUNTER_CLOCKWISE``. When the node's ``value`` is equal to its "
"``min_value``, the texture doesn't show up at all. When the ``value`` "
"increases, the texture fills and tends towards "
":ref:`radial_fill_degrees<class_TextureProgress_radial_fill_degrees>`."
msgstr ""

#: ../../classes/class_textureprogress.rst:46
msgid ""
":ref:`int<class_int>` **stretch_margin_bottom** - The height of the "
"9-patch's bottom row. A margin of 16 means the 9-slice's bottom corners "
"and side will have a height of 16 pixels. You can set all 4 margin values"
" individually to create panels with non-uniform borders."
msgstr ""

#: ../../classes/class_textureprogress.rst:50
msgid ""
":ref:`int<class_int>` **stretch_margin_left** - The width of the "
"9-patch's left column."
msgstr ""

#: ../../classes/class_textureprogress.rst:54
msgid ""
":ref:`int<class_int>` **stretch_margin_right** - The width of the "
"9-patch's right column."
msgstr ""

#: ../../classes/class_textureprogress.rst:58
msgid ""
":ref:`int<class_int>` **stretch_margin_top** - The height of the "
"9-patch's top row."
msgstr ""

#: ../../classes/class_textureprogress.rst:62
msgid ""
":ref:`Texture<class_texture>` **texture_over** - "
":ref:`Texture<class_texture>` that draws over the progress bar. Use it to"
" add highlights or an upper-frame that hides part of "
":ref:`texture_progress<class_TextureProgress_texture_progress>`."
msgstr ""

#: ../../classes/class_textureprogress.rst:66
msgid ""
":ref:`Texture<class_texture>` **texture_progress** - "
":ref:`Texture<class_texture>` that clips based on the node's ``value`` "
"and :ref:`fill_mode<class_TextureProgress_fill_mode>`. As ``value`` "
"increased, the texture fills up. It shows entirely when ``value`` reaches"
" ``max_value``. It doesn't show at all if ``value`` is equal to "
"``min_value``."
msgstr ""

#: ../../classes/class_textureprogress.rst:68
msgid ""
"The ``value`` property comes from :ref:`Range<class_range>`. See "
":ref:`Range.value<class_Range_value>`, "
":ref:`Range.min_value<class_Range_min_value>`, "
":ref:`Range.max_value<class_Range_max_value>`."
msgstr ""

#: ../../classes/class_textureprogress.rst:72
msgid ""
":ref:`Texture<class_texture>` **texture_under** - "
":ref:`Texture<class_texture>` that draws under the progress bar. The "
"bar's background."
msgstr ""

#: ../../classes/class_textureprogress.rst:76
msgid "Enums"
msgstr ""

#: ../../classes/class_textureprogress.rst:80
msgid "enum **FillMode**"
msgstr ""

#: ../../classes/class_textureprogress.rst:82
msgid ""
"**FILL_LEFT_TO_RIGHT** = **0** --- The "
":ref:`texture_progress<class_TextureProgress_texture_progress>` fills "
"from left to right."
msgstr ""

#: ../../classes/class_textureprogress.rst:83
msgid ""
"**FILL_RIGHT_TO_LEFT** = **1** --- The "
":ref:`texture_progress<class_TextureProgress_texture_progress>` fills "
"from right to left."
msgstr ""

#: ../../classes/class_textureprogress.rst:84
msgid ""
"**FILL_TOP_TO_BOTTOM** = **2** --- The "
":ref:`texture_progress<class_TextureProgress_texture_progress>` fills "
"from top to bototm."
msgstr ""

#: ../../classes/class_textureprogress.rst:85
msgid ""
"**FILL_BOTTOM_TO_TOP** = **3** --- The "
":ref:`texture_progress<class_TextureProgress_texture_progress>` fills "
"from bottom to top."
msgstr ""

#: ../../classes/class_textureprogress.rst:86
msgid ""
"**FILL_CLOCKWISE** = **4** --- Turns the node into a radial bar. The "
":ref:`texture_progress<class_TextureProgress_texture_progress>` fills "
"clockwise. See "
":ref:`radial_center_offset<class_TextureProgress_radial_center_offset>`, "
":ref:`radial_initial_angle<class_TextureProgress_radial_initial_angle>` "
"and :ref:`radial_fill_degrees<class_TextureProgress_radial_fill_degrees>`"
" to refine its behavior."
msgstr ""

#: ../../classes/class_textureprogress.rst:87
msgid ""
"**FILL_COUNTER_CLOCKWISE** = **5** --- Turns the node into a radial bar. "
"The :ref:`texture_progress<class_TextureProgress_texture_progress>` fills"
" counter-clockwise. See "
":ref:`radial_center_offset<class_TextureProgress_radial_center_offset>`, "
":ref:`radial_initial_angle<class_TextureProgress_radial_initial_angle>` "
"and :ref:`radial_fill_degrees<class_TextureProgress_radial_fill_degrees>`"
" to refine its behavior."
msgstr ""

#: ../../classes/class_textureprogress.rst:91
msgid "Description"
msgstr ""

#: ../../classes/class_textureprogress.rst:93
msgid ""
"TextureProgress works like :ref:`ProgressBar<class_progressbar>` but it "
"uses up to 3 textures instead of Godot's :ref:`Theme<class_theme>` "
"resource. Works horizontally, vertically, and radially."
msgstr ""

