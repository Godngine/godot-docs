# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_streampeer.rst:8
msgid "StreamPeer"
msgstr ""

#: ../../classes/class_streampeer.rst:10
msgid ""
"**Inherits:** :ref:`Reference<class_reference>` **<** "
":ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_streampeer.rst:12
msgid ""
"**Inherited By:** :ref:`StreamPeerBuffer<class_streampeerbuffer>`, "
":ref:`StreamPeerSSL<class_streampeerssl>`, "
":ref:`StreamPeerTCP<class_streampeertcp>`"
msgstr ""

#: ../../classes/class_streampeer.rst:14
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_streampeer.rst:17
msgid "Brief Description"
msgstr ""

#: ../../classes/class_streampeer.rst:19
msgid "Abstraction and base class for stream-based protocols."
msgstr ""

#: ../../classes/class_streampeer.rst:22
msgid "Member Functions"
msgstr ""

#: ../../classes/class_streampeer.rst:25 ../../classes/class_streampeer.rst:27
#: ../../classes/class_streampeer.rst:29 ../../classes/class_streampeer.rst:31
#: ../../classes/class_streampeer.rst:33 ../../classes/class_streampeer.rst:45
#: ../../classes/class_streampeer.rst:47 ../../classes/class_streampeer.rst:49
#: ../../classes/class_streampeer.rst:51 ../../classes/class_streampeer.rst:65
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_streampeer.rst:25
msgid ":ref:`get_16<class_StreamPeer_get_16>` **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:27
msgid ":ref:`get_32<class_StreamPeer_get_32>` **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:29
msgid ":ref:`get_64<class_StreamPeer_get_64>` **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:31
msgid ":ref:`get_8<class_StreamPeer_get_8>` **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:33
msgid ""
":ref:`get_available_bytes<class_StreamPeer_get_available_bytes>` **(** "
"**)** const"
msgstr ""

#: ../../classes/class_streampeer.rst:35 ../../classes/class_streampeer.rst:41
#: ../../classes/class_streampeer.rst:71
msgid ":ref:`Array<class_array>`"
msgstr ""

#: ../../classes/class_streampeer.rst:35
msgid ""
":ref:`get_data<class_StreamPeer_get_data>` **(** :ref:`int<class_int>` "
"bytes **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:37 ../../classes/class_streampeer.rst:39
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../../classes/class_streampeer.rst:37
msgid ":ref:`get_double<class_StreamPeer_get_double>` **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:39
msgid ":ref:`get_float<class_StreamPeer_get_float>` **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:41
msgid ""
":ref:`get_partial_data<class_StreamPeer_get_partial_data>` **(** "
":ref:`int<class_int>` bytes **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:43 ../../classes/class_streampeer.rst:53
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_streampeer.rst:43
msgid ""
":ref:`get_string<class_StreamPeer_get_string>` **(** "
":ref:`int<class_int>` bytes **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:45
msgid ":ref:`get_u16<class_StreamPeer_get_u16>` **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:47
msgid ":ref:`get_u32<class_StreamPeer_get_u32>` **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:49
msgid ":ref:`get_u64<class_StreamPeer_get_u64>` **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:51
msgid ":ref:`get_u8<class_StreamPeer_get_u8>` **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:53
msgid ""
":ref:`get_utf8_string<class_StreamPeer_get_utf8_string>` **(** "
":ref:`int<class_int>` bytes **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:55
msgid ":ref:`Variant<class_variant>`"
msgstr ""

#: ../../classes/class_streampeer.rst:55
msgid ":ref:`get_var<class_StreamPeer_get_var>` **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:57 ../../classes/class_streampeer.rst:59
#: ../../classes/class_streampeer.rst:61 ../../classes/class_streampeer.rst:63
#: ../../classes/class_streampeer.rst:67 ../../classes/class_streampeer.rst:69
#: ../../classes/class_streampeer.rst:73 ../../classes/class_streampeer.rst:75
#: ../../classes/class_streampeer.rst:77 ../../classes/class_streampeer.rst:79
#: ../../classes/class_streampeer.rst:81 ../../classes/class_streampeer.rst:83
msgid "void"
msgstr ""

#: ../../classes/class_streampeer.rst:57
msgid ""
":ref:`put_16<class_StreamPeer_put_16>` **(** :ref:`int<class_int>` value "
"**)**"
msgstr ""

#: ../../classes/class_streampeer.rst:59
msgid ""
":ref:`put_32<class_StreamPeer_put_32>` **(** :ref:`int<class_int>` value "
"**)**"
msgstr ""

#: ../../classes/class_streampeer.rst:61
msgid ""
":ref:`put_64<class_StreamPeer_put_64>` **(** :ref:`int<class_int>` value "
"**)**"
msgstr ""

#: ../../classes/class_streampeer.rst:63
msgid ""
":ref:`put_8<class_StreamPeer_put_8>` **(** :ref:`int<class_int>` value "
"**)**"
msgstr ""

#: ../../classes/class_streampeer.rst:65
msgid ""
":ref:`put_data<class_StreamPeer_put_data>` **(** "
":ref:`PoolByteArray<class_poolbytearray>` data **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:67
msgid ""
":ref:`put_double<class_StreamPeer_put_double>` **(** "
":ref:`float<class_float>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:69
msgid ""
":ref:`put_float<class_StreamPeer_put_float>` **(** "
":ref:`float<class_float>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:71
msgid ""
":ref:`put_partial_data<class_StreamPeer_put_partial_data>` **(** "
":ref:`PoolByteArray<class_poolbytearray>` data **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:73
msgid ""
":ref:`put_u16<class_StreamPeer_put_u16>` **(** :ref:`int<class_int>` "
"value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:75
msgid ""
":ref:`put_u32<class_StreamPeer_put_u32>` **(** :ref:`int<class_int>` "
"value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:77
msgid ""
":ref:`put_u64<class_StreamPeer_put_u64>` **(** :ref:`int<class_int>` "
"value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:79
msgid ""
":ref:`put_u8<class_StreamPeer_put_u8>` **(** :ref:`int<class_int>` value "
"**)**"
msgstr ""

#: ../../classes/class_streampeer.rst:81
msgid ""
":ref:`put_utf8_string<class_StreamPeer_put_utf8_string>` **(** "
":ref:`String<class_string>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:83
msgid ""
":ref:`put_var<class_StreamPeer_put_var>` **(** "
":ref:`Variant<class_variant>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:87
msgid "Member Variables"
msgstr ""

#: ../../classes/class_streampeer.rst:91
msgid ""
":ref:`bool<class_bool>` **big_endian** - If ``true``, this ``StreamPeer``"
" will using big-endian format for encoding and decoding."
msgstr ""

#: ../../classes/class_streampeer.rst:95
msgid "Description"
msgstr ""

#: ../../classes/class_streampeer.rst:97
msgid ""
"StreamPeer is an abstraction and base class for stream-based protocols "
"(such as TCP or Unix Sockets). It provides an API for sending and "
"receiving data through streams as raw data or strings."
msgstr ""

#: ../../classes/class_streampeer.rst:100
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_streampeer.rst:104
msgid ":ref:`int<class_int>` **get_16** **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:106
msgid "Get a signed 16 bit value from the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:110
msgid ":ref:`int<class_int>` **get_32** **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:112
msgid "Get a signed 32 bit value from the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:116
msgid ":ref:`int<class_int>` **get_64** **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:118
msgid "Get a signed 64 bit value from the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:122
msgid ":ref:`int<class_int>` **get_8** **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:124
msgid "Get a signed byte from the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:128
msgid ":ref:`int<class_int>` **get_available_bytes** **(** **)** const"
msgstr ""

#: ../../classes/class_streampeer.rst:130
msgid "Return the amount of bytes this ``StreamPeer`` has available."
msgstr ""

#: ../../classes/class_streampeer.rst:134
msgid ""
":ref:`Array<class_array>` **get_data** **(** :ref:`int<class_int>` bytes "
"**)**"
msgstr ""

#: ../../classes/class_streampeer.rst:136
msgid ""
"Return a chunk data with the received bytes. The amount of bytes to be "
"received can be requested in the \"bytes\" argument. If not enough bytes "
"are available, the function will block until the desired amount is "
"received. This function returns two values, an Error code and a data "
"array."
msgstr ""

#: ../../classes/class_streampeer.rst:140
msgid ":ref:`float<class_float>` **get_double** **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:142
msgid "Get a double-precision float from the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:146
msgid ":ref:`float<class_float>` **get_float** **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:148
msgid "Get a single-precision float from the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:152
msgid ""
":ref:`Array<class_array>` **get_partial_data** **(** "
":ref:`int<class_int>` bytes **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:154
msgid ""
"Return a chunk data with the received bytes. The amount of bytes to be "
"received can be requested in the \"bytes\" argument. If not enough bytes "
"are available, the function will return how many were actually received. "
"This function returns two values, an Error code, and a data array."
msgstr ""

#: ../../classes/class_streampeer.rst:158
msgid ""
":ref:`String<class_string>` **get_string** **(** :ref:`int<class_int>` "
"bytes **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:160
msgid "Get a string with byte-length \"bytes\" from the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:164
msgid ":ref:`int<class_int>` **get_u16** **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:166
msgid "Get an unsigned 16 bit value from the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:170
msgid ":ref:`int<class_int>` **get_u32** **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:172
msgid "Get an unsigned 32 bit value from the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:176
msgid ":ref:`int<class_int>` **get_u64** **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:178
msgid "Get an unsigned 64 bit value from the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:182
msgid ":ref:`int<class_int>` **get_u8** **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:184
msgid "Get an unsigned byte from the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:188
msgid ""
":ref:`String<class_string>` **get_utf8_string** **(** "
":ref:`int<class_int>` bytes **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:190
msgid ""
"Get a utf8 string with byte-length \"bytes\" from the stream (this "
"decodes the string sent as utf8)."
msgstr ""

#: ../../classes/class_streampeer.rst:194
msgid ":ref:`Variant<class_variant>` **get_var** **(** **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:196
msgid "Get a Variant from the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:200
msgid "void **put_16** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:202
msgid "Put a signed 16 bit value into the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:206
msgid "void **put_32** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:208
msgid "Put a signed 32 bit value into the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:212
msgid "void **put_64** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:214
msgid "Put a signed 64 bit value into the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:218
msgid "void **put_8** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:220
msgid "Put a signed byte into the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:224
msgid ""
":ref:`int<class_int>` **put_data** **(** "
":ref:`PoolByteArray<class_poolbytearray>` data **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:226
msgid ""
"Send a chunk of data through the connection, blocking if necessary until "
"the data is done sending. This function returns an Error code."
msgstr ""

#: ../../classes/class_streampeer.rst:230
msgid "void **put_double** **(** :ref:`float<class_float>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:232
msgid "Put a double-precision float into the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:236
msgid "void **put_float** **(** :ref:`float<class_float>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:238
msgid "Put a single-precision float into the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:242
msgid ""
":ref:`Array<class_array>` **put_partial_data** **(** "
":ref:`PoolByteArray<class_poolbytearray>` data **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:244
msgid ""
"Send a chunk of data through the connection, if all the data could not be"
" sent at once, only part of it will. This function returns two values, an"
" Error code and an integer, describing how much data was actually sent."
msgstr ""

#: ../../classes/class_streampeer.rst:248
msgid "void **put_u16** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:250
msgid "Put an unsigned 16 bit value into the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:254
msgid "void **put_u32** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:256
msgid "Put an unsigned 32 bit value into the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:260
msgid "void **put_u64** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:262
msgid "Put an unsigned 64 bit value into the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:266
msgid "void **put_u8** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:268
msgid "Put an unsigned byte into the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:272
msgid "void **put_utf8_string** **(** :ref:`String<class_string>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:274
msgid "Put a zero-terminated utf8 string into the stream."
msgstr ""

#: ../../classes/class_streampeer.rst:278
msgid "void **put_var** **(** :ref:`Variant<class_variant>` value **)**"
msgstr ""

#: ../../classes/class_streampeer.rst:280
msgid "Put a Variant into the stream."
msgstr ""

