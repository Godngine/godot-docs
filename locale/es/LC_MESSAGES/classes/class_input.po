# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_input.rst:8
msgid "Input"
msgstr ""

#: ../../classes/class_input.rst:10
msgid "**Inherits:** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_input.rst:12
msgid "**Inherited By:** :ref:`InputDefault<class_inputdefault>`"
msgstr ""

#: ../../classes/class_input.rst:14
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_input.rst:17
msgid "Brief Description"
msgstr ""

#: ../../classes/class_input.rst:19
msgid "A Singleton that deals with inputs."
msgstr ""

#: ../../classes/class_input.rst:22
msgid "Member Functions"
msgstr ""

#: ../../classes/class_input.rst:25 ../../classes/class_input.rst:27
#: ../../classes/class_input.rst:29 ../../classes/class_input.rst:79
#: ../../classes/class_input.rst:81 ../../classes/class_input.rst:83
#: ../../classes/class_input.rst:85 ../../classes/class_input.rst:87
#: ../../classes/class_input.rst:89 ../../classes/class_input.rst:91
#: ../../classes/class_input.rst:93
msgid "void"
msgstr ""

#: ../../classes/class_input.rst:25
msgid ""
":ref:`action_press<class_Input_action_press>` **(** "
":ref:`String<class_string>` action **)**"
msgstr ""

#: ../../classes/class_input.rst:27
msgid ""
":ref:`action_release<class_Input_action_release>` **(** "
":ref:`String<class_string>` action **)**"
msgstr ""

#: ../../classes/class_input.rst:29
msgid ""
":ref:`add_joy_mapping<class_Input_add_joy_mapping>` **(** "
":ref:`String<class_string>` mapping, :ref:`bool<class_bool>` "
"update_existing=false **)**"
msgstr ""

#: ../../classes/class_input.rst:31 ../../classes/class_input.rst:35
#: ../../classes/class_input.rst:37 ../../classes/class_input.rst:59
msgid ":ref:`Vector3<class_vector3>`"
msgstr ""

#: ../../classes/class_input.rst:31
msgid ":ref:`get_accelerometer<class_Input_get_accelerometer>` **(** **)** const"
msgstr ""

#: ../../classes/class_input.rst:33
msgid ":ref:`Array<class_array>`"
msgstr ""

#: ../../classes/class_input.rst:33
msgid ""
":ref:`get_connected_joypads<class_Input_get_connected_joypads>` **(** "
"**)**"
msgstr ""

#: ../../classes/class_input.rst:35
msgid ":ref:`get_gravity<class_Input_get_gravity>` **(** **)** const"
msgstr ""

#: ../../classes/class_input.rst:37
msgid ":ref:`get_gyroscope<class_Input_get_gyroscope>` **(** **)** const"
msgstr ""

#: ../../classes/class_input.rst:39 ../../classes/class_input.rst:53
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../../classes/class_input.rst:39
msgid ""
":ref:`get_joy_axis<class_Input_get_joy_axis>` **(** :ref:`int<class_int>`"
" device, :ref:`int<class_int>` axis **)** const"
msgstr ""

#: ../../classes/class_input.rst:41 ../../classes/class_input.rst:45
#: ../../classes/class_input.rst:61 ../../classes/class_input.rst:63
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_input.rst:41
msgid ""
":ref:`get_joy_axis_index_from_string<class_Input_get_joy_axis_index_from_string>`"
" **(** :ref:`String<class_string>` axis **)**"
msgstr ""

#: ../../classes/class_input.rst:43 ../../classes/class_input.rst:47
#: ../../classes/class_input.rst:49 ../../classes/class_input.rst:51
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_input.rst:43
msgid ""
":ref:`get_joy_axis_string<class_Input_get_joy_axis_string>` **(** "
":ref:`int<class_int>` axis_index **)**"
msgstr ""

#: ../../classes/class_input.rst:45
msgid ""
":ref:`get_joy_button_index_from_string<class_Input_get_joy_button_index_from_string>`"
" **(** :ref:`String<class_string>` button **)**"
msgstr ""

#: ../../classes/class_input.rst:47
msgid ""
":ref:`get_joy_button_string<class_Input_get_joy_button_string>` **(** "
":ref:`int<class_int>` button_index **)**"
msgstr ""

#: ../../classes/class_input.rst:49
msgid ""
":ref:`get_joy_guid<class_Input_get_joy_guid>` **(** :ref:`int<class_int>`"
" device **)** const"
msgstr ""

#: ../../classes/class_input.rst:51
msgid ""
":ref:`get_joy_name<class_Input_get_joy_name>` **(** :ref:`int<class_int>`"
" device **)**"
msgstr ""

#: ../../classes/class_input.rst:53
msgid ""
":ref:`get_joy_vibration_duration<class_Input_get_joy_vibration_duration>`"
" **(** :ref:`int<class_int>` device **)**"
msgstr ""

#: ../../classes/class_input.rst:55 ../../classes/class_input.rst:57
msgid ":ref:`Vector2<class_vector2>`"
msgstr ""

#: ../../classes/class_input.rst:55
msgid ""
":ref:`get_joy_vibration_strength<class_Input_get_joy_vibration_strength>`"
" **(** :ref:`int<class_int>` device **)**"
msgstr ""

#: ../../classes/class_input.rst:57
msgid ""
":ref:`get_last_mouse_speed<class_Input_get_last_mouse_speed>` **(** **)**"
" const"
msgstr ""

#: ../../classes/class_input.rst:59
msgid ":ref:`get_magnetometer<class_Input_get_magnetometer>` **(** **)** const"
msgstr ""

#: ../../classes/class_input.rst:61
msgid ""
":ref:`get_mouse_button_mask<class_Input_get_mouse_button_mask>` **(** "
"**)** const"
msgstr ""

#: ../../classes/class_input.rst:63
msgid ":ref:`get_mouse_mode<class_Input_get_mouse_mode>` **(** **)** const"
msgstr ""

#: ../../classes/class_input.rst:65 ../../classes/class_input.rst:67
#: ../../classes/class_input.rst:69 ../../classes/class_input.rst:71
#: ../../classes/class_input.rst:73 ../../classes/class_input.rst:75
#: ../../classes/class_input.rst:77
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_input.rst:65
msgid ""
":ref:`is_action_just_pressed<class_Input_is_action_just_pressed>` **(** "
":ref:`String<class_string>` action **)** const"
msgstr ""

#: ../../classes/class_input.rst:67
msgid ""
":ref:`is_action_just_released<class_Input_is_action_just_released>` **(**"
" :ref:`String<class_string>` action **)** const"
msgstr ""

#: ../../classes/class_input.rst:69
msgid ""
":ref:`is_action_pressed<class_Input_is_action_pressed>` **(** "
":ref:`String<class_string>` action **)** const"
msgstr ""

#: ../../classes/class_input.rst:71
msgid ""
":ref:`is_joy_button_pressed<class_Input_is_joy_button_pressed>` **(** "
":ref:`int<class_int>` device, :ref:`int<class_int>` button **)** const"
msgstr ""

#: ../../classes/class_input.rst:73
msgid ""
":ref:`is_joy_known<class_Input_is_joy_known>` **(** :ref:`int<class_int>`"
" device **)**"
msgstr ""

#: ../../classes/class_input.rst:75
msgid ""
":ref:`is_key_pressed<class_Input_is_key_pressed>` **(** "
":ref:`int<class_int>` scancode **)** const"
msgstr ""

#: ../../classes/class_input.rst:77
msgid ""
":ref:`is_mouse_button_pressed<class_Input_is_mouse_button_pressed>` **(**"
" :ref:`int<class_int>` button **)** const"
msgstr ""

#: ../../classes/class_input.rst:79
msgid ""
":ref:`joy_connection_changed<class_Input_joy_connection_changed>` **(** "
":ref:`int<class_int>` device, :ref:`bool<class_bool>` connected, "
":ref:`String<class_string>` name, :ref:`String<class_string>` guid **)**"
msgstr ""

#: ../../classes/class_input.rst:81
msgid ""
":ref:`parse_input_event<class_Input_parse_input_event>` **(** "
":ref:`InputEvent<class_inputevent>` event **)**"
msgstr ""

#: ../../classes/class_input.rst:83
msgid ""
":ref:`remove_joy_mapping<class_Input_remove_joy_mapping>` **(** "
":ref:`String<class_string>` guid **)**"
msgstr ""

#: ../../classes/class_input.rst:85
msgid ""
":ref:`set_custom_mouse_cursor<class_Input_set_custom_mouse_cursor>` **(**"
" :ref:`Resource<class_resource>` image, :ref:`int<class_int>` shape=0, "
":ref:`Vector2<class_vector2>` hotspot=Vector2( 0, 0 ) **)**"
msgstr ""

#: ../../classes/class_input.rst:87
msgid ""
":ref:`set_mouse_mode<class_Input_set_mouse_mode>` **(** "
":ref:`int<class_int>` mode **)**"
msgstr ""

#: ../../classes/class_input.rst:89
msgid ""
":ref:`start_joy_vibration<class_Input_start_joy_vibration>` **(** "
":ref:`int<class_int>` device, :ref:`float<class_float>` weak_magnitude, "
":ref:`float<class_float>` strong_magnitude, :ref:`float<class_float>` "
"duration=0 **)**"
msgstr ""

#: ../../classes/class_input.rst:91
msgid ""
":ref:`stop_joy_vibration<class_Input_stop_joy_vibration>` **(** "
":ref:`int<class_int>` device **)**"
msgstr ""

#: ../../classes/class_input.rst:93
msgid ""
":ref:`warp_mouse_position<class_Input_warp_mouse_position>` **(** "
":ref:`Vector2<class_vector2>` to **)**"
msgstr ""

#: ../../classes/class_input.rst:97
msgid "Signals"
msgstr ""

#: ../../classes/class_input.rst:101
msgid ""
"**joy_connection_changed** **(** :ref:`int<class_int>` index, "
":ref:`bool<class_bool>` connected **)**"
msgstr ""

#: ../../classes/class_input.rst:103
msgid "Emitted when a joypad device has been connected or disconnected"
msgstr ""

#: ../../classes/class_input.rst:107
msgid "Enums"
msgstr ""

#: ../../classes/class_input.rst:111
msgid "enum **MouseMode**"
msgstr ""

#: ../../classes/class_input.rst:113
msgid ""
"**MOUSE_MODE_VISIBLE** = **0** --- Makes the mouse cursor visible if it "
"is hidden."
msgstr ""

#: ../../classes/class_input.rst:114
msgid ""
"**MOUSE_MODE_HIDDEN** = **1** --- Makes the mouse cursor hidden if it is "
"visible."
msgstr ""

#: ../../classes/class_input.rst:115
msgid ""
"**MOUSE_MODE_CAPTURED** = **2** --- Captures the mouse. The mouse will be"
" hidden and unable to leave the game window. But it will still register "
"movement and mouse button presses."
msgstr ""

#: ../../classes/class_input.rst:116
msgid "**MOUSE_MODE_CONFINED** = **3**"
msgstr ""

#: ../../classes/class_input.rst:120
msgid "enum **CursorShape**"
msgstr ""

#: ../../classes/class_input.rst:122
msgid "**CURSOR_ARROW** = **0**"
msgstr ""

#: ../../classes/class_input.rst:123
msgid "**CURSOR_IBEAM** = **1**"
msgstr ""

#: ../../classes/class_input.rst:124
msgid "**CURSOR_POINTING_HAND** = **2**"
msgstr ""

#: ../../classes/class_input.rst:125
msgid "**CURSOR_CROSS** = **3**"
msgstr ""

#: ../../classes/class_input.rst:126
msgid "**CURSOR_WAIT** = **4**"
msgstr ""

#: ../../classes/class_input.rst:127
msgid "**CURSOR_BUSY** = **5**"
msgstr ""

#: ../../classes/class_input.rst:128
msgid "**CURSOR_DRAG** = **6**"
msgstr ""

#: ../../classes/class_input.rst:129
msgid "**CURSOR_CAN_DROP** = **7**"
msgstr ""

#: ../../classes/class_input.rst:130
msgid "**CURSOR_FORBIDDEN** = **8**"
msgstr ""

#: ../../classes/class_input.rst:131
msgid "**CURSOR_VSIZE** = **9**"
msgstr ""

#: ../../classes/class_input.rst:132
msgid "**CURSOR_HSIZE** = **10**"
msgstr ""

#: ../../classes/class_input.rst:133
msgid "**CURSOR_BDIAGSIZE** = **11**"
msgstr ""

#: ../../classes/class_input.rst:134
msgid "**CURSOR_FDIAGSIZE** = **12**"
msgstr ""

#: ../../classes/class_input.rst:135
msgid "**CURSOR_MOVE** = **13**"
msgstr ""

#: ../../classes/class_input.rst:136
msgid "**CURSOR_VSPLIT** = **14**"
msgstr ""

#: ../../classes/class_input.rst:137
msgid "**CURSOR_HSPLIT** = **15**"
msgstr ""

#: ../../classes/class_input.rst:138
msgid "**CURSOR_HELP** = **16**"
msgstr ""

#: ../../classes/class_input.rst:142
msgid "Description"
msgstr ""

#: ../../classes/class_input.rst:144
msgid ""
"A Singleton that deals with inputs. This includes key presses, mouse "
"buttons and movement, joypads, and input actions. Actions and their "
"events can be set in the Project Settings / Input Map tab. Or be set with"
" :ref:`InputMap<class_inputmap>`."
msgstr ""

#: ../../classes/class_input.rst:147
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_input.rst:151
msgid "void **action_press** **(** :ref:`String<class_string>` action **)**"
msgstr ""

#: ../../classes/class_input.rst:153
msgid "This will simulate pressing the specified action."
msgstr ""

#: ../../classes/class_input.rst:157
msgid "void **action_release** **(** :ref:`String<class_string>` action **)**"
msgstr ""

#: ../../classes/class_input.rst:159
msgid "If the specified action is already pressed, this will release it."
msgstr ""

#: ../../classes/class_input.rst:163
msgid ""
"void **add_joy_mapping** **(** :ref:`String<class_string>` mapping, "
":ref:`bool<class_bool>` update_existing=false **)**"
msgstr ""

#: ../../classes/class_input.rst:165
msgid ""
"Add a new mapping entry (in SDL2 format) to the mapping database. "
"Optionally update already connected devices."
msgstr ""

#: ../../classes/class_input.rst:169
msgid ":ref:`Vector3<class_vector3>` **get_accelerometer** **(** **)** const"
msgstr ""

#: ../../classes/class_input.rst:171
msgid "If the device has an accelerometer, this will return the movement."
msgstr ""

#: ../../classes/class_input.rst:175
msgid ":ref:`Array<class_array>` **get_connected_joypads** **(** **)**"
msgstr ""

#: ../../classes/class_input.rst:177
msgid ""
"Returns an :ref:`Array<class_array>` containing the device IDs of all "
"currently connected joypads."
msgstr ""

#: ../../classes/class_input.rst:181
msgid ":ref:`Vector3<class_vector3>` **get_gravity** **(** **)** const"
msgstr ""

#: ../../classes/class_input.rst:185
msgid ":ref:`Vector3<class_vector3>` **get_gyroscope** **(** **)** const"
msgstr ""

#: ../../classes/class_input.rst:187
msgid ""
"If the device has a gyroscope, this will return the rate of rotation in "
"rad/s around a device's x, y, and z axis."
msgstr ""

#: ../../classes/class_input.rst:191
msgid ""
":ref:`float<class_float>` **get_joy_axis** **(** :ref:`int<class_int>` "
"device, :ref:`int<class_int>` axis **)** const"
msgstr ""

#: ../../classes/class_input.rst:193
msgid ""
"Returns the current value of the joypad axis at given index (see "
"``JOY_*`` constants in :ref:`@GlobalScope<class_@globalscope>`)"
msgstr ""

#: ../../classes/class_input.rst:197
msgid ""
":ref:`int<class_int>` **get_joy_axis_index_from_string** **(** "
":ref:`String<class_string>` axis **)**"
msgstr ""

#: ../../classes/class_input.rst:201
msgid ""
":ref:`String<class_string>` **get_joy_axis_string** **(** "
":ref:`int<class_int>` axis_index **)**"
msgstr ""

#: ../../classes/class_input.rst:205
msgid ""
":ref:`int<class_int>` **get_joy_button_index_from_string** **(** "
":ref:`String<class_string>` button **)**"
msgstr ""

#: ../../classes/class_input.rst:209
msgid ""
":ref:`String<class_string>` **get_joy_button_string** **(** "
":ref:`int<class_int>` button_index **)**"
msgstr ""

#: ../../classes/class_input.rst:213
msgid ""
":ref:`String<class_string>` **get_joy_guid** **(** :ref:`int<class_int>` "
"device **)** const"
msgstr ""

#: ../../classes/class_input.rst:215
msgid ""
"Returns a SDL2 compatible device guid on platforms that use gamepad "
"remapping. Returns \"Default Gamepad\" otherwise."
msgstr ""

#: ../../classes/class_input.rst:219
msgid ""
":ref:`String<class_string>` **get_joy_name** **(** :ref:`int<class_int>` "
"device **)**"
msgstr ""

#: ../../classes/class_input.rst:221
msgid "Returns the name of the joypad at the specified device index"
msgstr ""

#: ../../classes/class_input.rst:225
msgid ""
":ref:`float<class_float>` **get_joy_vibration_duration** **(** "
":ref:`int<class_int>` device **)**"
msgstr ""

#: ../../classes/class_input.rst:227
msgid "Returns the duration of the current vibration effect in seconds."
msgstr ""

#: ../../classes/class_input.rst:231
msgid ""
":ref:`Vector2<class_vector2>` **get_joy_vibration_strength** **(** "
":ref:`int<class_int>` device **)**"
msgstr ""

#: ../../classes/class_input.rst:233
msgid ""
"Returns the strength of the joypad vibration: x is the strength of the "
"weak motor, and y is the strength of the strong motor."
msgstr ""

#: ../../classes/class_input.rst:237
msgid ":ref:`Vector2<class_vector2>` **get_last_mouse_speed** **(** **)** const"
msgstr ""

#: ../../classes/class_input.rst:239
msgid ""
"Returns the mouse speed for the last time the cursor was moved, and this "
"until the next frame where the mouse moves. This means that even if the "
"mouse is not moving, this function will still return the value of the "
"last motion."
msgstr ""

#: ../../classes/class_input.rst:243
msgid ":ref:`Vector3<class_vector3>` **get_magnetometer** **(** **)** const"
msgstr ""

#: ../../classes/class_input.rst:245
msgid ""
"If the device has a magnetometer, this will return the magnetic field "
"strength in micro-Tesla for all axes."
msgstr ""

#: ../../classes/class_input.rst:249
msgid ":ref:`int<class_int>` **get_mouse_button_mask** **(** **)** const"
msgstr ""

#: ../../classes/class_input.rst:251
msgid ""
"Returns mouse buttons as a bitmask. If multiple mouse buttons are pressed"
" at the same time the bits are added together."
msgstr ""

#: ../../classes/class_input.rst:255
msgid ":ref:`int<class_int>` **get_mouse_mode** **(** **)** const"
msgstr ""

#: ../../classes/class_input.rst:257
msgid "Return the mouse mode. See the constants for more information."
msgstr ""

#: ../../classes/class_input.rst:261
msgid ""
":ref:`bool<class_bool>` **is_action_just_pressed** **(** "
":ref:`String<class_string>` action **)** const"
msgstr ""

#: ../../classes/class_input.rst:263
msgid "Returns ``true`` when you start pressing the action event."
msgstr ""

#: ../../classes/class_input.rst:267
msgid ""
":ref:`bool<class_bool>` **is_action_just_released** **(** "
":ref:`String<class_string>` action **)** const"
msgstr ""

#: ../../classes/class_input.rst:269
msgid "Returns ``true`` when you stop pressing the action event."
msgstr ""

#: ../../classes/class_input.rst:273
msgid ""
":ref:`bool<class_bool>` **is_action_pressed** **(** "
":ref:`String<class_string>` action **)** const"
msgstr ""

#: ../../classes/class_input.rst:275
msgid "Returns ``true`` if you are pressing the action event."
msgstr ""

#: ../../classes/class_input.rst:279
msgid ""
":ref:`bool<class_bool>` **is_joy_button_pressed** **(** "
":ref:`int<class_int>` device, :ref:`int<class_int>` button **)** const"
msgstr ""

#: ../../classes/class_input.rst:281
msgid ""
"Returns ``true`` if you are pressing the joypad button. (see ``JOY_*`` "
"constants in :ref:`@GlobalScope<class_@globalscope>`)"
msgstr ""

#: ../../classes/class_input.rst:285
msgid ""
":ref:`bool<class_bool>` **is_joy_known** **(** :ref:`int<class_int>` "
"device **)**"
msgstr ""

#: ../../classes/class_input.rst:287
msgid ""
"Returns ``true`` if the system knows the specified device. This means "
"that it sets all button and axis indices exactly as defined in the "
"``JOY_*`` constants (see :ref:`@GlobalScope<class_@globalscope>`). "
"Unknown joypads are not expected to match these constants, but you can "
"still retrieve events from them."
msgstr ""

#: ../../classes/class_input.rst:291
msgid ""
":ref:`bool<class_bool>` **is_key_pressed** **(** :ref:`int<class_int>` "
"scancode **)** const"
msgstr ""

#: ../../classes/class_input.rst:293
msgid ""
"Returns ``true`` if you are pressing the key. You can pass ``KEY_*``, "
"which are pre-defined constants listed in "
":ref:`@GlobalScope<class_@globalscope>`."
msgstr ""

#: ../../classes/class_input.rst:297
msgid ""
":ref:`bool<class_bool>` **is_mouse_button_pressed** **(** "
":ref:`int<class_int>` button **)** const"
msgstr ""

#: ../../classes/class_input.rst:299
msgid ""
"Returns ``true`` if you are pressing the mouse button. You can pass "
"``BUTTON_*``, which are pre-defined constants listed in "
":ref:`@GlobalScope<class_@globalscope>`."
msgstr ""

#: ../../classes/class_input.rst:303
msgid ""
"void **joy_connection_changed** **(** :ref:`int<class_int>` device, "
":ref:`bool<class_bool>` connected, :ref:`String<class_string>` name, "
":ref:`String<class_string>` guid **)**"
msgstr ""

#: ../../classes/class_input.rst:307
msgid ""
"void **parse_input_event** **(** :ref:`InputEvent<class_inputevent>` "
"event **)**"
msgstr ""

#: ../../classes/class_input.rst:311
msgid "void **remove_joy_mapping** **(** :ref:`String<class_string>` guid **)**"
msgstr ""

#: ../../classes/class_input.rst:313
msgid "Removes all mappings from the internal db that match the given uid."
msgstr ""

#: ../../classes/class_input.rst:317
msgid ""
"void **set_custom_mouse_cursor** **(** :ref:`Resource<class_resource>` "
"image, :ref:`int<class_int>` shape=0, :ref:`Vector2<class_vector2>` "
"hotspot=Vector2( 0, 0 ) **)**"
msgstr ""

#: ../../classes/class_input.rst:319
msgid ""
"Set a custom mouse cursor image, which is only visible inside the game "
"window. The hotspot can also be specified. See enum ``CURSOR_*`` for the "
"list of shapes."
msgstr ""

#: ../../classes/class_input.rst:323
msgid "void **set_mouse_mode** **(** :ref:`int<class_int>` mode **)**"
msgstr ""

#: ../../classes/class_input.rst:325
msgid "Set the mouse mode. See the constants for more information."
msgstr ""

#: ../../classes/class_input.rst:329
msgid ""
"void **start_joy_vibration** **(** :ref:`int<class_int>` device, "
":ref:`float<class_float>` weak_magnitude, :ref:`float<class_float>` "
"strong_magnitude, :ref:`float<class_float>` duration=0 **)**"
msgstr ""

#: ../../classes/class_input.rst:331
msgid ""
"Starts to vibrate the joypad. Joypads usually come with two rumble "
"motors, a strong and a weak one. weak_magnitude is the strength of the "
"weak motor (between 0 and 1) and strong_magnitude is the strength of the "
"strong motor (between 0 and 1). duration is the duration of the effect in"
" seconds (a duration of 0 will try to play the vibration indefinitely)."
msgstr ""

#: ../../classes/class_input.rst:333
msgid ""
"Note that not every hardware is compatible with long effect durations, it"
" is recommended to restart an effect if in need to play it for more than "
"a few seconds."
msgstr ""

#: ../../classes/class_input.rst:337
msgid "void **stop_joy_vibration** **(** :ref:`int<class_int>` device **)**"
msgstr ""

#: ../../classes/class_input.rst:339
msgid "Stops the vibration of the joypad."
msgstr ""

#: ../../classes/class_input.rst:343
msgid "void **warp_mouse_position** **(** :ref:`Vector2<class_vector2>` to **)**"
msgstr ""

#: ../../classes/class_input.rst:345
msgid "Sets the mouse position to the specified vector."
msgstr ""

