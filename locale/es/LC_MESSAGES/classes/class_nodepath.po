# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_nodepath.rst:8
msgid "NodePath"
msgstr ""

#: ../../classes/class_nodepath.rst:10
msgid "**Category:** Built-In Types"
msgstr ""

#: ../../classes/class_nodepath.rst:13
msgid "Brief Description"
msgstr ""

#: ../../classes/class_nodepath.rst:15
msgid "Pre-parsed scene tree path."
msgstr ""

#: ../../classes/class_nodepath.rst:18
msgid "Member Functions"
msgstr ""

#: ../../classes/class_nodepath.rst:21 ../../classes/class_nodepath.rst:23
msgid ":ref:`NodePath<class_nodepath>`"
msgstr ""

#: ../../classes/class_nodepath.rst:21
msgid ""
":ref:`NodePath<class_NodePath_NodePath>` **(** "
":ref:`String<class_string>` from **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:23
msgid ""
":ref:`get_as_property_path<class_NodePath_get_as_property_path>` **(** "
"**)**"
msgstr ""

#: ../../classes/class_nodepath.rst:25 ../../classes/class_nodepath.rst:27
#: ../../classes/class_nodepath.rst:31
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_nodepath.rst:25
msgid ""
":ref:`get_concatenated_subnames<class_NodePath_get_concatenated_subnames>`"
" **(** **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:27
msgid ""
":ref:`get_name<class_NodePath_get_name>` **(** :ref:`int<class_int>` idx "
"**)**"
msgstr ""

#: ../../classes/class_nodepath.rst:29 ../../classes/class_nodepath.rst:33
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_nodepath.rst:29
msgid ":ref:`get_name_count<class_NodePath_get_name_count>` **(** **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:31
msgid ""
":ref:`get_subname<class_NodePath_get_subname>` **(** "
":ref:`int<class_int>` idx **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:33
msgid ":ref:`get_subname_count<class_NodePath_get_subname_count>` **(** **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:35 ../../classes/class_nodepath.rst:37
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_nodepath.rst:35
msgid ":ref:`is_absolute<class_NodePath_is_absolute>` **(** **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:37
msgid ":ref:`is_empty<class_NodePath_is_empty>` **(** **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:41
msgid "Description"
msgstr ""

#: ../../classes/class_nodepath.rst:43
msgid ""
"A pre-parsed relative or absolute path in a scene tree, for use with "
":ref:`Node.get_node<class_Node_get_node>` and similar functions. It can "
"reference a node, a resource within a node, or a property of a node or "
"resource. For instance, ``\"Path2D/PathFollow2D/Sprite:texture:size\"`` "
"would refer to the size property of the texture resource on the node "
"named \"Sprite\" which is a child of the other named nodes in the path. "
"Note that if you want to get a resource, you must end the path with a "
"colon, otherwise the last element will be used as a property name."
msgstr ""

#: ../../classes/class_nodepath.rst:45
msgid ""
"You will usually just pass a string to "
":ref:`Node.get_node<class_Node_get_node>` and it will be automatically "
"converted, but you may occasionally want to parse a path ahead of time "
"with ``NodePath`` or the literal syntax ``@\"path\"``. Exporting a "
"``NodePath`` variable will give you a node selection widget in the "
"properties panel of the editor, which can often be useful."
msgstr ""

#: ../../classes/class_nodepath.rst:47
msgid ""
"A ``NodePath`` is made up of a list of node names, a list of \"subnode\" "
"(resource) names, and the name of a property in the final node or "
"resource."
msgstr ""

#: ../../classes/class_nodepath.rst:50
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_nodepath.rst:54
msgid ""
":ref:`NodePath<class_nodepath>` **NodePath** **(** "
":ref:`String<class_string>` from **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:56
msgid ""
"Create a NodePath from a string, e.g. "
"\"Path2D/PathFollow2D/Sprite:texture:size\". A path is absolute if it "
"starts with a slash. Absolute paths are only valid in the global scene "
"tree, not within individual scenes. In a relative path, ``\".\"`` and "
"``\"..\"`` indicate the current node and its parent."
msgstr ""

#: ../../classes/class_nodepath.rst:60
msgid ":ref:`NodePath<class_nodepath>` **get_as_property_path** **(** **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:64
msgid ":ref:`String<class_string>` **get_concatenated_subnames** **(** **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:68
msgid ""
":ref:`String<class_string>` **get_name** **(** :ref:`int<class_int>` idx "
"**)**"
msgstr ""

#: ../../classes/class_nodepath.rst:70
msgid ""
"Get the node name indicated by ``idx`` (0 to "
":ref:`get_name_count<class_NodePath_get_name_count>`)"
msgstr ""

#: ../../classes/class_nodepath.rst:74
msgid ":ref:`int<class_int>` **get_name_count** **(** **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:76
msgid "Get the number of node names which make up the path."
msgstr ""

#: ../../classes/class_nodepath.rst:80
msgid ""
":ref:`String<class_string>` **get_subname** **(** :ref:`int<class_int>` "
"idx **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:82
msgid ""
"Get the resource name indicated by ``idx`` (0 to "
":ref:`get_subname_count<class_NodePath_get_subname_count>`)"
msgstr ""

#: ../../classes/class_nodepath.rst:86
msgid ":ref:`int<class_int>` **get_subname_count** **(** **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:88
msgid "Get the number of resource names in the path."
msgstr ""

#: ../../classes/class_nodepath.rst:92
msgid ":ref:`bool<class_bool>` **is_absolute** **(** **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:94
msgid "Return true if the node path is absolute (not relative)."
msgstr ""

#: ../../classes/class_nodepath.rst:98
msgid ":ref:`bool<class_bool>` **is_empty** **(** **)**"
msgstr ""

#: ../../classes/class_nodepath.rst:100
msgid "Return true if the node path is empty."
msgstr ""

