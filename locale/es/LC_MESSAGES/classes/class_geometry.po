# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_geometry.rst:8
msgid "Geometry"
msgstr ""

#: ../../classes/class_geometry.rst:10
msgid "**Inherits:** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_geometry.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_geometry.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_geometry.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_geometry.rst:23 ../../classes/class_geometry.rst:25
#: ../../classes/class_geometry.rst:27
msgid ":ref:`Array<class_array>`"
msgstr ""

#: ../../classes/class_geometry.rst:23
msgid ""
":ref:`build_box_planes<class_Geometry_build_box_planes>` **(** "
":ref:`Vector3<class_vector3>` extents **)**"
msgstr ""

#: ../../classes/class_geometry.rst:25
msgid ""
":ref:`build_capsule_planes<class_Geometry_build_capsule_planes>` **(** "
":ref:`float<class_float>` radius, :ref:`float<class_float>` height, "
":ref:`int<class_int>` sides, :ref:`int<class_int>` lats, "
":ref:`int<class_int>` axis=2 **)**"
msgstr ""

#: ../../classes/class_geometry.rst:27
msgid ""
":ref:`build_cylinder_planes<class_Geometry_build_cylinder_planes>` **(** "
":ref:`float<class_float>` radius, :ref:`float<class_float>` height, "
":ref:`int<class_int>` sides, :ref:`int<class_int>` axis=2 **)**"
msgstr ""

#: ../../classes/class_geometry.rst:29 ../../classes/class_geometry.rst:41
#: ../../classes/class_geometry.rst:55 ../../classes/class_geometry.rst:57
#: ../../classes/class_geometry.rst:61
msgid ":ref:`PoolVector3Array<class_poolvector3array>`"
msgstr ""

#: ../../classes/class_geometry.rst:29
msgid ""
":ref:`clip_polygon<class_Geometry_clip_polygon>` **(** "
":ref:`PoolVector3Array<class_poolvector3array>` points, "
":ref:`Plane<class_plane>` plane **)**"
msgstr ""

#: ../../classes/class_geometry.rst:31 ../../classes/class_geometry.rst:43
msgid ":ref:`PoolVector2Array<class_poolvector2array>`"
msgstr ""

#: ../../classes/class_geometry.rst:31
msgid ""
":ref:`convex_hull_2d<class_Geometry_convex_hull_2d>` **(** "
":ref:`PoolVector2Array<class_poolvector2array>` points **)**"
msgstr ""

#: ../../classes/class_geometry.rst:33 ../../classes/class_geometry.rst:37
msgid ":ref:`Vector3<class_vector3>`"
msgstr ""

#: ../../classes/class_geometry.rst:33
msgid ""
":ref:`get_closest_point_to_segment<class_Geometry_get_closest_point_to_segment>`"
" **(** :ref:`Vector3<class_vector3>` point, :ref:`Vector3<class_vector3>`"
" s1, :ref:`Vector3<class_vector3>` s2 **)**"
msgstr ""

#: ../../classes/class_geometry.rst:35 ../../classes/class_geometry.rst:39
msgid ":ref:`Vector2<class_vector2>`"
msgstr ""

#: ../../classes/class_geometry.rst:35
msgid ""
":ref:`get_closest_point_to_segment_2d<class_Geometry_get_closest_point_to_segment_2d>`"
" **(** :ref:`Vector2<class_vector2>` point, :ref:`Vector2<class_vector2>`"
" s1, :ref:`Vector2<class_vector2>` s2 **)**"
msgstr ""

#: ../../classes/class_geometry.rst:37
msgid ""
":ref:`get_closest_point_to_segment_uncapped<class_Geometry_get_closest_point_to_segment_uncapped>`"
" **(** :ref:`Vector3<class_vector3>` point, :ref:`Vector3<class_vector3>`"
" s1, :ref:`Vector3<class_vector3>` s2 **)**"
msgstr ""

#: ../../classes/class_geometry.rst:39
msgid ""
":ref:`get_closest_point_to_segment_uncapped_2d<class_Geometry_get_closest_point_to_segment_uncapped_2d>`"
" **(** :ref:`Vector2<class_vector2>` point, :ref:`Vector2<class_vector2>`"
" s1, :ref:`Vector2<class_vector2>` s2 **)**"
msgstr ""

#: ../../classes/class_geometry.rst:41
msgid ""
":ref:`get_closest_points_between_segments<class_Geometry_get_closest_points_between_segments>`"
" **(** :ref:`Vector3<class_vector3>` p1, :ref:`Vector3<class_vector3>` "
"p2, :ref:`Vector3<class_vector3>` q1, :ref:`Vector3<class_vector3>` q2 "
"**)**"
msgstr ""

#: ../../classes/class_geometry.rst:43
msgid ""
":ref:`get_closest_points_between_segments_2d<class_Geometry_get_closest_points_between_segments_2d>`"
" **(** :ref:`Vector2<class_vector2>` p1, :ref:`Vector2<class_vector2>` "
"q1, :ref:`Vector2<class_vector2>` p2, :ref:`Vector2<class_vector2>` q2 "
"**)**"
msgstr ""

#: ../../classes/class_geometry.rst:45
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_geometry.rst:45
msgid ""
":ref:`get_uv84_normal_bit<class_Geometry_get_uv84_normal_bit>` **(** "
":ref:`Vector3<class_vector3>` normal **)**"
msgstr ""

#: ../../classes/class_geometry.rst:47
msgid ":ref:`Dictionary<class_dictionary>`"
msgstr ""

#: ../../classes/class_geometry.rst:47
msgid ""
":ref:`make_atlas<class_Geometry_make_atlas>` **(** "
":ref:`PoolVector2Array<class_poolvector2array>` sizes **)**"
msgstr ""

#: ../../classes/class_geometry.rst:49
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_geometry.rst:49
msgid ""
":ref:`point_is_inside_triangle<class_Geometry_point_is_inside_triangle>` "
"**(** :ref:`Vector2<class_vector2>` point, :ref:`Vector2<class_vector2>` "
"a, :ref:`Vector2<class_vector2>` b, :ref:`Vector2<class_vector2>` c **)**"
" const"
msgstr ""

#: ../../classes/class_geometry.rst:51 ../../classes/class_geometry.rst:59
#: ../../classes/class_geometry.rst:63
msgid ":ref:`Variant<class_variant>`"
msgstr ""

#: ../../classes/class_geometry.rst:51
msgid ""
":ref:`ray_intersects_triangle<class_Geometry_ray_intersects_triangle>` "
"**(** :ref:`Vector3<class_vector3>` from, :ref:`Vector3<class_vector3>` "
"dir, :ref:`Vector3<class_vector3>` a, :ref:`Vector3<class_vector3>` b, "
":ref:`Vector3<class_vector3>` c **)**"
msgstr ""

#: ../../classes/class_geometry.rst:53
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../../classes/class_geometry.rst:53
msgid ""
":ref:`segment_intersects_circle<class_Geometry_segment_intersects_circle>`"
" **(** :ref:`Vector2<class_vector2>` segment_from, "
":ref:`Vector2<class_vector2>` segment_to, :ref:`Vector2<class_vector2>` "
"circle_position, :ref:`float<class_float>` circle_radius **)**"
msgstr ""

#: ../../classes/class_geometry.rst:55
msgid ""
":ref:`segment_intersects_convex<class_Geometry_segment_intersects_convex>`"
" **(** :ref:`Vector3<class_vector3>` from, :ref:`Vector3<class_vector3>` "
"to, :ref:`Array<class_array>` planes **)**"
msgstr ""

#: ../../classes/class_geometry.rst:57
msgid ""
":ref:`segment_intersects_cylinder<class_Geometry_segment_intersects_cylinder>`"
" **(** :ref:`Vector3<class_vector3>` from, :ref:`Vector3<class_vector3>` "
"to, :ref:`float<class_float>` height, :ref:`float<class_float>` radius "
"**)**"
msgstr ""

#: ../../classes/class_geometry.rst:59
msgid ""
":ref:`segment_intersects_segment_2d<class_Geometry_segment_intersects_segment_2d>`"
" **(** :ref:`Vector2<class_vector2>` from_a, "
":ref:`Vector2<class_vector2>` to_a, :ref:`Vector2<class_vector2>` from_b,"
" :ref:`Vector2<class_vector2>` to_b **)**"
msgstr ""

#: ../../classes/class_geometry.rst:61
msgid ""
":ref:`segment_intersects_sphere<class_Geometry_segment_intersects_sphere>`"
" **(** :ref:`Vector3<class_vector3>` from, :ref:`Vector3<class_vector3>` "
"to, :ref:`Vector3<class_vector3>` sphere_position, "
":ref:`float<class_float>` sphere_radius **)**"
msgstr ""

#: ../../classes/class_geometry.rst:63
msgid ""
":ref:`segment_intersects_triangle<class_Geometry_segment_intersects_triangle>`"
" **(** :ref:`Vector3<class_vector3>` from, :ref:`Vector3<class_vector3>` "
"to, :ref:`Vector3<class_vector3>` a, :ref:`Vector3<class_vector3>` b, "
":ref:`Vector3<class_vector3>` c **)**"
msgstr ""

#: ../../classes/class_geometry.rst:65
msgid ":ref:`PoolIntArray<class_poolintarray>`"
msgstr ""

#: ../../classes/class_geometry.rst:65
msgid ""
":ref:`triangulate_polygon<class_Geometry_triangulate_polygon>` **(** "
":ref:`PoolVector2Array<class_poolvector2array>` polygon **)**"
msgstr ""

#: ../../classes/class_geometry.rst:69
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_geometry.rst:73
msgid ""
":ref:`Array<class_array>` **build_box_planes** **(** "
":ref:`Vector3<class_vector3>` extents **)**"
msgstr ""

#: ../../classes/class_geometry.rst:75
msgid ""
"Returns an array with 6 :ref:`Plane<class_plane>`\\ s that describe the "
"sides of a box centered at the origin. The box size is defined by "
"``extents``, which represents one (positive) corner of the box (i.e. half"
" its actual size)."
msgstr ""

#: ../../classes/class_geometry.rst:79
msgid ""
":ref:`Array<class_array>` **build_capsule_planes** **(** "
":ref:`float<class_float>` radius, :ref:`float<class_float>` height, "
":ref:`int<class_int>` sides, :ref:`int<class_int>` lats, "
":ref:`int<class_int>` axis=2 **)**"
msgstr ""

#: ../../classes/class_geometry.rst:81
msgid ""
"Returns an array of :ref:`Plane<class_plane>`\\ s closely bounding a "
"faceted capsule centered at the origin with radius ``radius`` and height "
"``height``. The parameter ``sides`` defines how many planes will be "
"generated for the side part of the capsule, whereas ``lats`` gives the "
"number of latitudinal steps at the bottom and top of the capsule. The "
"parameter ``axis`` describes the axis along which the capsule is oriented"
" (0 for X, 1 for Y, 2 for Z)."
msgstr ""

#: ../../classes/class_geometry.rst:85
msgid ""
":ref:`Array<class_array>` **build_cylinder_planes** **(** "
":ref:`float<class_float>` radius, :ref:`float<class_float>` height, "
":ref:`int<class_int>` sides, :ref:`int<class_int>` axis=2 **)**"
msgstr ""

#: ../../classes/class_geometry.rst:87
msgid ""
"Returns an array of :ref:`Plane<class_plane>`\\ s closely bounding a "
"faceted cylinder centered at the origin with radius ``radius`` and height"
" ``height``. The parameter ``sides`` defines how many planes will be "
"generated for the round part of the cylinder. The parameter ``axis`` "
"describes the axis along which the cylinder is oriented (0 for X, 1 for "
"Y, 2 for Z)."
msgstr ""

#: ../../classes/class_geometry.rst:91
msgid ""
":ref:`PoolVector3Array<class_poolvector3array>` **clip_polygon** **(** "
":ref:`PoolVector3Array<class_poolvector3array>` points, "
":ref:`Plane<class_plane>` plane **)**"
msgstr ""

#: ../../classes/class_geometry.rst:93
msgid ""
"Clips the polygon defined by the points in ``points`` against the "
"``plane`` and returns the points of the clipped polygon."
msgstr ""

#: ../../classes/class_geometry.rst:97
msgid ""
":ref:`PoolVector2Array<class_poolvector2array>` **convex_hull_2d** **(** "
":ref:`PoolVector2Array<class_poolvector2array>` points **)**"
msgstr ""

#: ../../classes/class_geometry.rst:99
msgid ""
"Given an array of :ref:`Vector2<class_vector2>`\\ s, returns the convex "
"hull as a list of points in counter-clockwise order. The last point is "
"the same as the first one."
msgstr ""

#: ../../classes/class_geometry.rst:103
msgid ""
":ref:`Vector3<class_vector3>` **get_closest_point_to_segment** **(** "
":ref:`Vector3<class_vector3>` point, :ref:`Vector3<class_vector3>` s1, "
":ref:`Vector3<class_vector3>` s2 **)**"
msgstr ""

#: ../../classes/class_geometry.rst:105
msgid ""
"Returns the 3d point on the 3d segment (``s1``, ``s2``) that is closest "
"to ``point``. The returned point will always be inside the specified "
"segment."
msgstr ""

#: ../../classes/class_geometry.rst:109
msgid ""
":ref:`Vector2<class_vector2>` **get_closest_point_to_segment_2d** **(** "
":ref:`Vector2<class_vector2>` point, :ref:`Vector2<class_vector2>` s1, "
":ref:`Vector2<class_vector2>` s2 **)**"
msgstr ""

#: ../../classes/class_geometry.rst:111
msgid ""
"Returns the 2d point on the 2d segment (``s1``, ``s2``) that is closest "
"to ``point``. The returned point will always be inside the specified "
"segment."
msgstr ""

#: ../../classes/class_geometry.rst:115
msgid ""
":ref:`Vector3<class_vector3>` **get_closest_point_to_segment_uncapped** "
"**(** :ref:`Vector3<class_vector3>` point, :ref:`Vector3<class_vector3>` "
"s1, :ref:`Vector3<class_vector3>` s2 **)**"
msgstr ""

#: ../../classes/class_geometry.rst:117
msgid ""
"Returns the 3d point on the 3d line defined by (``s1``, ``s2``) that is "
"closest to ``point``. The returned point can be inside the segment "
"(``s1``, ``s2``) or outside of it, i.e. somewhere on the line extending "
"from the segment."
msgstr ""

#: ../../classes/class_geometry.rst:121
msgid ""
":ref:`Vector2<class_vector2>` "
"**get_closest_point_to_segment_uncapped_2d** **(** "
":ref:`Vector2<class_vector2>` point, :ref:`Vector2<class_vector2>` s1, "
":ref:`Vector2<class_vector2>` s2 **)**"
msgstr ""

#: ../../classes/class_geometry.rst:123
msgid ""
"Returns the 2d point on the 2d line defined by (``s1``, ``s2``) that is "
"closest to ``point``. The returned point can be inside the segment "
"(``s1``, ``s2``) or outside of it, i.e. somewhere on the line extending "
"from the segment."
msgstr ""

#: ../../classes/class_geometry.rst:127
msgid ""
":ref:`PoolVector3Array<class_poolvector3array>` "
"**get_closest_points_between_segments** **(** "
":ref:`Vector3<class_vector3>` p1, :ref:`Vector3<class_vector3>` p2, "
":ref:`Vector3<class_vector3>` q1, :ref:`Vector3<class_vector3>` q2 **)**"
msgstr ""

#: ../../classes/class_geometry.rst:129
msgid ""
"Given the two 3d segments (``p1``, ``p2``) and (``q1``, ``q2``), finds "
"those two points on the two segments that are closest to each other. "
"Returns a :ref:`PoolVector3Array<class_poolvector3array>` that contains "
"this point on (``p1``, ``p2``) as well the accompanying point on (``q1``,"
" ``q2``)."
msgstr ""

#: ../../classes/class_geometry.rst:133
msgid ""
":ref:`PoolVector2Array<class_poolvector2array>` "
"**get_closest_points_between_segments_2d** **(** "
":ref:`Vector2<class_vector2>` p1, :ref:`Vector2<class_vector2>` q1, "
":ref:`Vector2<class_vector2>` p2, :ref:`Vector2<class_vector2>` q2 **)**"
msgstr ""

#: ../../classes/class_geometry.rst:135
msgid ""
"Given the two 2d segments (``p1``, ``p2``) and (``q1``, ``q2``), finds "
"those two points on the two segments that are closest to each other. "
"Returns a :ref:`PoolVector2Array<class_poolvector2array>` that contains "
"this point on (``p1``, ``p2``) as well the accompanying point on (``q1``,"
" ``q2``)."
msgstr ""

#: ../../classes/class_geometry.rst:139
msgid ""
":ref:`int<class_int>` **get_uv84_normal_bit** **(** "
":ref:`Vector3<class_vector3>` normal **)**"
msgstr ""

#: ../../classes/class_geometry.rst:143
msgid ""
":ref:`Dictionary<class_dictionary>` **make_atlas** **(** "
":ref:`PoolVector2Array<class_poolvector2array>` sizes **)**"
msgstr ""

#: ../../classes/class_geometry.rst:145
msgid ""
"Given an array of :ref:`Vector2<class_vector2>`\\ s representing tiles, "
"builds an atlas. The returned dictionary has two keys: ``points`` is a "
"vector of :ref:`Vector2<class_vector2>` that specifies the positions of "
"each tile, ``size`` contains the overall size of the whole atlas as "
":ref:`Vector2<class_vector2>`."
msgstr ""

#: ../../classes/class_geometry.rst:149
msgid ""
":ref:`bool<class_bool>` **point_is_inside_triangle** **(** "
":ref:`Vector2<class_vector2>` point, :ref:`Vector2<class_vector2>` a, "
":ref:`Vector2<class_vector2>` b, :ref:`Vector2<class_vector2>` c **)** "
"const"
msgstr ""

#: ../../classes/class_geometry.rst:151
msgid ""
"Returns if ``point`` is inside the triangle specified by ``a``, ``b`` and"
" ``c``."
msgstr ""

#: ../../classes/class_geometry.rst:155
msgid ""
":ref:`Variant<class_variant>` **ray_intersects_triangle** **(** "
":ref:`Vector3<class_vector3>` from, :ref:`Vector3<class_vector3>` dir, "
":ref:`Vector3<class_vector3>` a, :ref:`Vector3<class_vector3>` b, "
":ref:`Vector3<class_vector3>` c **)**"
msgstr ""

#: ../../classes/class_geometry.rst:157
msgid ""
"Tests if the 3d ray starting at ``from`` with the direction of ``dir`` "
"intersects the triangle specified by ``a``, ``b`` and ``c``. If yes, "
"returns the point of intersection as :ref:`Vector3<class_vector3>`. If no"
" intersection takes place, an empty :ref:`Variant<class_variant>` is "
"returned."
msgstr ""

#: ../../classes/class_geometry.rst:161
msgid ""
":ref:`float<class_float>` **segment_intersects_circle** **(** "
":ref:`Vector2<class_vector2>` segment_from, :ref:`Vector2<class_vector2>`"
" segment_to, :ref:`Vector2<class_vector2>` circle_position, "
":ref:`float<class_float>` circle_radius **)**"
msgstr ""

#: ../../classes/class_geometry.rst:163
msgid ""
"Given the 2d segment (``segment_from``, ``segment_to``), returns the "
"position on the segment (as a number between 0 and 1) at which the "
"segment hits the circle that is located at position ``circle_position`` "
"and has radius ``circle_radius``. If the segment does not intersect the "
"circle, -1 is returned (this is also the case if the line extending the "
"segment would intersect the circle, but the segment does not)."
msgstr ""

#: ../../classes/class_geometry.rst:167
msgid ""
":ref:`PoolVector3Array<class_poolvector3array>` "
"**segment_intersects_convex** **(** :ref:`Vector3<class_vector3>` from, "
":ref:`Vector3<class_vector3>` to, :ref:`Array<class_array>` planes **)**"
msgstr ""

#: ../../classes/class_geometry.rst:169
msgid ""
"Given a convex hull defined though the :ref:`Plane<class_plane>`\\ s in "
"the array ``planes``, tests if the segment (``from``, ``to``) intersects "
"with that hull. If an intersection is found, returns a "
":ref:`PoolVector3Array<class_poolvector3array>` containing the point the "
"intersection and the hull's normal. If no intersecion is found, an the "
"returned array is empty."
msgstr ""

#: ../../classes/class_geometry.rst:173
msgid ""
":ref:`PoolVector3Array<class_poolvector3array>` "
"**segment_intersects_cylinder** **(** :ref:`Vector3<class_vector3>` from,"
" :ref:`Vector3<class_vector3>` to, :ref:`float<class_float>` height, "
":ref:`float<class_float>` radius **)**"
msgstr ""

#: ../../classes/class_geometry.rst:175
msgid ""
"Checks if the segment (``from``, ``to``) intersects the cylinder with "
"height ``height`` that is centered at the origin and has radius "
"``radius``. If no, returns an empty "
":ref:`PoolVector3Array<class_poolvector3array>`. If an intersection takes"
" place, the returned array contains the point of intersection and the "
"cylinder's normal at the point of intersection."
msgstr ""

#: ../../classes/class_geometry.rst:179
msgid ""
":ref:`Variant<class_variant>` **segment_intersects_segment_2d** **(** "
":ref:`Vector2<class_vector2>` from_a, :ref:`Vector2<class_vector2>` to_a,"
" :ref:`Vector2<class_vector2>` from_b, :ref:`Vector2<class_vector2>` to_b"
" **)**"
msgstr ""

#: ../../classes/class_geometry.rst:181
msgid ""
"Checks if the two segments (``from_a``, ``to_a``) and (``from_b``, "
"``to_b``) intersect. If yes, return the point of intersection as "
":ref:`Vector2<class_vector2>`. If no intersection takes place, returns an"
" empty :ref:`Variant<class_variant>`."
msgstr ""

#: ../../classes/class_geometry.rst:185
msgid ""
":ref:`PoolVector3Array<class_poolvector3array>` "
"**segment_intersects_sphere** **(** :ref:`Vector3<class_vector3>` from, "
":ref:`Vector3<class_vector3>` to, :ref:`Vector3<class_vector3>` "
"sphere_position, :ref:`float<class_float>` sphere_radius **)**"
msgstr ""

#: ../../classes/class_geometry.rst:187
msgid ""
"Checks if the segment (``from``, ``to``) intersects the sphere that is "
"located at ``sphere_position`` and has radius ``sphere_radius``. If no, "
"returns an empty :ref:`PoolVector3Array<class_poolvector3array>`. If yes,"
" returns a :ref:`PoolVector3Array<class_poolvector3array>` containing the"
" point of intersection and the sphere's normal at the point of "
"intersection."
msgstr ""

#: ../../classes/class_geometry.rst:191
msgid ""
":ref:`Variant<class_variant>` **segment_intersects_triangle** **(** "
":ref:`Vector3<class_vector3>` from, :ref:`Vector3<class_vector3>` to, "
":ref:`Vector3<class_vector3>` a, :ref:`Vector3<class_vector3>` b, "
":ref:`Vector3<class_vector3>` c **)**"
msgstr ""

#: ../../classes/class_geometry.rst:193
msgid ""
"Tests if the segment (``from``, ``to``) intersects the triangle ``a``, "
"``b``, ``c``. If yes, returns the point of intersection as "
":ref:`Vector3<class_vector3>`. If no intersection takes place, an empty "
":ref:`Variant<class_variant>` is returned."
msgstr ""

#: ../../classes/class_geometry.rst:197
msgid ""
":ref:`PoolIntArray<class_poolintarray>` **triangulate_polygon** **(** "
":ref:`PoolVector2Array<class_poolvector2array>` polygon **)**"
msgstr ""

#: ../../classes/class_geometry.rst:199
msgid ""
"Triangulates the polygon specified by the points in ``polygon``. Returns "
"a :ref:`PoolIntArray<class_poolintarray>` where each triangle consists of"
" three consecutive point indices into ``polygon`` (i.e. the returned "
"array will have ``n * 3`` elements, with ``n`` being the number of found "
"triangles). If the triangulation did not succeed, an empty "
":ref:`PoolIntArray<class_poolintarray>` is returned."
msgstr ""

