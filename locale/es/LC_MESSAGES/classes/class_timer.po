# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_timer.rst:8
msgid "Timer"
msgstr ""

#: ../../classes/class_timer.rst:10
msgid "**Inherits:** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_timer.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_timer.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_timer.rst:17
msgid "A countdown timer."
msgstr ""

#: ../../classes/class_timer.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_timer.rst:23
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_timer.rst:23
msgid ":ref:`is_stopped<class_Timer_is_stopped>` **(** **)** const"
msgstr ""

#: ../../classes/class_timer.rst:25 ../../classes/class_timer.rst:27
msgid "void"
msgstr ""

#: ../../classes/class_timer.rst:25
msgid ":ref:`start<class_Timer_start>` **(** **)**"
msgstr ""

#: ../../classes/class_timer.rst:27
msgid ":ref:`stop<class_Timer_stop>` **(** **)**"
msgstr ""

#: ../../classes/class_timer.rst:31
msgid "Signals"
msgstr ""

#: ../../classes/class_timer.rst:35
msgid "**timeout** **(** **)**"
msgstr ""

#: ../../classes/class_timer.rst:37
msgid "Emitted when the Timer reaches 0."
msgstr ""

#: ../../classes/class_timer.rst:41
msgid "Member Variables"
msgstr ""

#: ../../classes/class_timer.rst:45
msgid ""
":ref:`bool<class_bool>` **autostart** - If ``true``, Timer will "
"automatically start when entering the scene tree. Default value: "
"``false``."
msgstr ""

#: ../../classes/class_timer.rst:49
msgid ""
":ref:`bool<class_bool>` **one_shot** - If ``true``, Timer will stop when "
"reaching 0. If ``false``, it will restart. Default value: ``false``."
msgstr ""

#: ../../classes/class_timer.rst:53
msgid ""
":ref:`bool<class_bool>` **paused** - If ``true``, the timer is paused and"
" will not process until it is unpaused again, even if "
":ref:`start<class_Timer_start>` is called."
msgstr ""

#: ../../classes/class_timer.rst:57
msgid ""
":ref:`TimerProcessMode<enum_timer_timerprocessmode>` **process_mode** - "
"Processing mode. Uses TIMER_PROCESS\\_\\* constants as value."
msgstr ""

#: ../../classes/class_timer.rst:61
msgid ""
":ref:`float<class_float>` **time_left** - The timer's remaining time in "
"seconds. Returns 0 if the timer is inactive."
msgstr ""

#: ../../classes/class_timer.rst:65
msgid ":ref:`float<class_float>` **wait_time** - Wait time in seconds."
msgstr ""

#: ../../classes/class_timer.rst:69
msgid "Enums"
msgstr ""

#: ../../classes/class_timer.rst:73
msgid "enum **TimerProcessMode**"
msgstr ""

#: ../../classes/class_timer.rst:75
msgid ""
"**TIMER_PROCESS_PHYSICS** = **0** --- Update the Timer during the physics"
" step at each frame (fixed framerate processing)."
msgstr ""

#: ../../classes/class_timer.rst:76
msgid ""
"**TIMER_PROCESS_IDLE** = **1** --- Update the Timer during the idle time "
"at each frame."
msgstr ""

#: ../../classes/class_timer.rst:80
msgid "Description"
msgstr ""

#: ../../classes/class_timer.rst:82
msgid ""
"Counts down a specified interval and emits a signal on reaching 0. Can be"
" set to repeat or \"one shot\" mode."
msgstr ""

#: ../../classes/class_timer.rst:85
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_timer.rst:89
msgid ":ref:`bool<class_bool>` **is_stopped** **(** **)** const"
msgstr ""

#: ../../classes/class_timer.rst:91
msgid "Returns ``true`` if the timer is stopped."
msgstr ""

#: ../../classes/class_timer.rst:95
msgid "void **start** **(** **)**"
msgstr ""

#: ../../classes/class_timer.rst:97
msgid "Starts the timer. This also resets the remaining time to ``wait_time``."
msgstr ""

#: ../../classes/class_timer.rst:99
msgid ""
"Note: this method will not resume a paused timer. See "
":ref:`set_paused<class_Timer_set_paused>`."
msgstr ""

#: ../../classes/class_timer.rst:103
msgid "void **stop** **(** **)**"
msgstr ""

#: ../../classes/class_timer.rst:105
msgid "Stop (cancel) the Timer."
msgstr ""

