# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_xmlparser.rst:8
msgid "XMLParser"
msgstr ""

#: ../../classes/class_xmlparser.rst:10
msgid ""
"**Inherits:** :ref:`Reference<class_reference>` **<** "
":ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_xmlparser.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_xmlparser.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_xmlparser.rst:17
msgid "Low-level class for creating parsers for XML files."
msgstr ""

#: ../../classes/class_xmlparser.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_xmlparser.rst:23 ../../classes/class_xmlparser.rst:29
#: ../../classes/class_xmlparser.rst:39 ../../classes/class_xmlparser.rst:41
#: ../../classes/class_xmlparser.rst:47 ../../classes/class_xmlparser.rst:49
#: ../../classes/class_xmlparser.rst:51 ../../classes/class_xmlparser.rst:53
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_xmlparser.rst:23
msgid ""
":ref:`get_attribute_count<class_XMLParser_get_attribute_count>` **(** "
"**)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:25 ../../classes/class_xmlparser.rst:27
#: ../../classes/class_xmlparser.rst:31 ../../classes/class_xmlparser.rst:33
#: ../../classes/class_xmlparser.rst:35 ../../classes/class_xmlparser.rst:37
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_xmlparser.rst:25
msgid ""
":ref:`get_attribute_name<class_XMLParser_get_attribute_name>` **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:27
msgid ""
":ref:`get_attribute_value<class_XMLParser_get_attribute_value>` **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:29
msgid ""
":ref:`get_current_line<class_XMLParser_get_current_line>` **(** **)** "
"const"
msgstr ""

#: ../../classes/class_xmlparser.rst:31
msgid ""
":ref:`get_named_attribute_value<class_XMLParser_get_named_attribute_value>`"
" **(** :ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:33
msgid ""
":ref:`get_named_attribute_value_safe<class_XMLParser_get_named_attribute_value_safe>`"
" **(** :ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:35
msgid ":ref:`get_node_data<class_XMLParser_get_node_data>` **(** **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:37
msgid ":ref:`get_node_name<class_XMLParser_get_node_name>` **(** **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:39
msgid ":ref:`get_node_offset<class_XMLParser_get_node_offset>` **(** **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:41
msgid ":ref:`get_node_type<class_XMLParser_get_node_type>` **(** **)**"
msgstr ""

#: ../../classes/class_xmlparser.rst:43 ../../classes/class_xmlparser.rst:45
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_xmlparser.rst:43
msgid ""
":ref:`has_attribute<class_XMLParser_has_attribute>` **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:45
msgid ":ref:`is_empty<class_XMLParser_is_empty>` **(** **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:47
msgid ""
":ref:`open<class_XMLParser_open>` **(** :ref:`String<class_string>` file "
"**)**"
msgstr ""

#: ../../classes/class_xmlparser.rst:49
msgid ""
":ref:`open_buffer<class_XMLParser_open_buffer>` **(** "
":ref:`PoolByteArray<class_poolbytearray>` buffer **)**"
msgstr ""

#: ../../classes/class_xmlparser.rst:51
msgid ":ref:`read<class_XMLParser_read>` **(** **)**"
msgstr ""

#: ../../classes/class_xmlparser.rst:53
msgid ""
":ref:`seek<class_XMLParser_seek>` **(** :ref:`int<class_int>` position "
"**)**"
msgstr ""

#: ../../classes/class_xmlparser.rst:55
msgid "void"
msgstr ""

#: ../../classes/class_xmlparser.rst:55
msgid ":ref:`skip_section<class_XMLParser_skip_section>` **(** **)**"
msgstr ""

#: ../../classes/class_xmlparser.rst:59
msgid "Enums"
msgstr ""

#: ../../classes/class_xmlparser.rst:63
msgid "enum **NodeType**"
msgstr ""

#: ../../classes/class_xmlparser.rst:65
msgid "**NODE_NONE** = **0** --- There's no node (no file or buffer opened)"
msgstr ""

#: ../../classes/class_xmlparser.rst:66
msgid "**NODE_ELEMENT** = **1** --- Element (tag)"
msgstr ""

#: ../../classes/class_xmlparser.rst:67
msgid "**NODE_ELEMENT_END** = **2** --- End of element"
msgstr ""

#: ../../classes/class_xmlparser.rst:68
msgid "**NODE_TEXT** = **3** --- Text node"
msgstr ""

#: ../../classes/class_xmlparser.rst:69
msgid "**NODE_COMMENT** = **4** --- Comment node"
msgstr ""

#: ../../classes/class_xmlparser.rst:70
msgid "**NODE_CDATA** = **5** --- CDATA content"
msgstr ""

#: ../../classes/class_xmlparser.rst:71
msgid "**NODE_UNKNOWN** = **6** --- Unknown node"
msgstr ""

#: ../../classes/class_xmlparser.rst:75
msgid "Description"
msgstr ""

#: ../../classes/class_xmlparser.rst:77
msgid ""
"This class can serve as base to make custom XML parsers. Since XML is a "
"very flexible standard, this interface is low level so it can be applied "
"to any possible schema."
msgstr ""

#: ../../classes/class_xmlparser.rst:80
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_xmlparser.rst:84
msgid ":ref:`int<class_int>` **get_attribute_count** **(** **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:86
msgid "Get the amount of attributes in the current element."
msgstr ""

#: ../../classes/class_xmlparser.rst:90
msgid ""
":ref:`String<class_string>` **get_attribute_name** **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:92
msgid "Get the name of the attribute specified by the index in ``idx`` argument."
msgstr ""

#: ../../classes/class_xmlparser.rst:96
msgid ""
":ref:`String<class_string>` **get_attribute_value** **(** "
":ref:`int<class_int>` idx **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:98
msgid "Get the value of the attribute specified by the index in ``idx`` argument."
msgstr ""

#: ../../classes/class_xmlparser.rst:102
msgid ":ref:`int<class_int>` **get_current_line** **(** **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:104
msgid "Get the current line in the parsed file (currently not implemented)."
msgstr ""

#: ../../classes/class_xmlparser.rst:108
msgid ""
":ref:`String<class_string>` **get_named_attribute_value** **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:110
msgid ""
"Get the value of a certain attribute of the current element by name. This"
" will raise an error if the element has no such attribute."
msgstr ""

#: ../../classes/class_xmlparser.rst:114
msgid ""
":ref:`String<class_string>` **get_named_attribute_value_safe** **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:116
msgid ""
"Get the value of a certain attribute of the current element by name. This"
" will return an empty :ref:`String<class_string>` if the attribute is not"
" found."
msgstr ""

#: ../../classes/class_xmlparser.rst:120
msgid ":ref:`String<class_string>` **get_node_data** **(** **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:122
msgid ""
"Get the contents of a text node. This will raise an error in any other "
"type of node."
msgstr ""

#: ../../classes/class_xmlparser.rst:126
msgid ":ref:`String<class_string>` **get_node_name** **(** **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:128
msgid ""
"Get the name of the current element node. This will raise an error if the"
" current node type is not ``NODE_ELEMENT`` nor ``NODE_ELEMENT_END``"
msgstr ""

#: ../../classes/class_xmlparser.rst:132
msgid ":ref:`int<class_int>` **get_node_offset** **(** **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:134
msgid ""
"Get the byte offset of the current node since the beginning of the file "
"or buffer."
msgstr ""

#: ../../classes/class_xmlparser.rst:138
msgid ":ref:`int<class_int>` **get_node_type** **(** **)**"
msgstr ""

#: ../../classes/class_xmlparser.rst:140
msgid "Get the type of the current node. Compare with ``NODE_*`` constants."
msgstr ""

#: ../../classes/class_xmlparser.rst:144
msgid ""
":ref:`bool<class_bool>` **has_attribute** **(** "
":ref:`String<class_string>` name **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:146
msgid "Check whether or not the current element has a certain attribute."
msgstr ""

#: ../../classes/class_xmlparser.rst:150
msgid ":ref:`bool<class_bool>` **is_empty** **(** **)** const"
msgstr ""

#: ../../classes/class_xmlparser.rst:152
msgid ""
"Check whether the current element is empty (this only works for "
"completely empty tags, e.g. <element \\>)."
msgstr ""

#: ../../classes/class_xmlparser.rst:156
msgid ""
":ref:`int<class_int>` **open** **(** :ref:`String<class_string>` file "
"**)**"
msgstr ""

#: ../../classes/class_xmlparser.rst:158
msgid "Open a XML file for parsing. This returns an error code."
msgstr ""

#: ../../classes/class_xmlparser.rst:162
msgid ""
":ref:`int<class_int>` **open_buffer** **(** "
":ref:`PoolByteArray<class_poolbytearray>` buffer **)**"
msgstr ""

#: ../../classes/class_xmlparser.rst:164
msgid "Open a XML raw buffer for parsing. This returns an error code."
msgstr ""

#: ../../classes/class_xmlparser.rst:168
msgid ":ref:`int<class_int>` **read** **(** **)**"
msgstr ""

#: ../../classes/class_xmlparser.rst:170
msgid "Read the next node of the file. This returns an error code."
msgstr ""

#: ../../classes/class_xmlparser.rst:174
msgid ":ref:`int<class_int>` **seek** **(** :ref:`int<class_int>` position **)**"
msgstr ""

#: ../../classes/class_xmlparser.rst:176
msgid ""
"Move the buffer cursor to a certain offset (since the beginning) and read"
" the next node there. This returns an error code."
msgstr ""

#: ../../classes/class_xmlparser.rst:180
msgid "void **skip_section** **(** **)**"
msgstr ""

#: ../../classes/class_xmlparser.rst:182
msgid ""
"Skips the current section. If the node contains other elements, they will"
" be ignored and the cursor will go to the closing of the current element."
msgstr ""

