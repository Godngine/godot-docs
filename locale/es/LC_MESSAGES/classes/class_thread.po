# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_thread.rst:8
msgid "Thread"
msgstr ""

#: ../../classes/class_thread.rst:10
msgid ""
"**Inherits:** :ref:`Reference<class_reference>` **<** "
":ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_thread.rst:12
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_thread.rst:15
msgid "Brief Description"
msgstr ""

#: ../../classes/class_thread.rst:17
msgid "A unit of execution in a process."
msgstr ""

#: ../../classes/class_thread.rst:20
msgid "Member Functions"
msgstr ""

#: ../../classes/class_thread.rst:23
msgid ":ref:`String<class_string>`"
msgstr ""

#: ../../classes/class_thread.rst:23
msgid ":ref:`get_id<class_Thread_get_id>` **(** **)** const"
msgstr ""

#: ../../classes/class_thread.rst:25
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_thread.rst:25
msgid ":ref:`is_active<class_Thread_is_active>` **(** **)** const"
msgstr ""

#: ../../classes/class_thread.rst:27
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../../classes/class_thread.rst:27
msgid ""
":ref:`start<class_Thread_start>` **(** :ref:`Object<class_object>` "
"instance, :ref:`String<class_string>` method, "
":ref:`Variant<class_variant>` userdata=null, :ref:`int<class_int>` "
"priority=1 **)**"
msgstr ""

#: ../../classes/class_thread.rst:29
msgid ":ref:`Variant<class_variant>`"
msgstr ""

#: ../../classes/class_thread.rst:29
msgid ":ref:`wait_to_finish<class_Thread_wait_to_finish>` **(** **)**"
msgstr ""

#: ../../classes/class_thread.rst:33
msgid "Enums"
msgstr ""

#: ../../classes/class_thread.rst:37
msgid "enum **Priority**"
msgstr ""

#: ../../classes/class_thread.rst:39
msgid "**PRIORITY_LOW** = **0**"
msgstr ""

#: ../../classes/class_thread.rst:40
msgid "**PRIORITY_NORMAL** = **1**"
msgstr ""

#: ../../classes/class_thread.rst:41
msgid "**PRIORITY_HIGH** = **2**"
msgstr ""

#: ../../classes/class_thread.rst:45
msgid "Description"
msgstr ""

#: ../../classes/class_thread.rst:47
msgid ""
"A unit of execution in a process. Can run methods on "
":ref:`Object<class_object>`\\ s simultaneously. The use of "
"synchronization via :ref:`Mutex<class_mutex>`, "
":ref:`Semaphore<class_semaphore>` is advised if working with shared "
"objects."
msgstr ""

#: ../../classes/class_thread.rst:50
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_thread.rst:54
msgid ":ref:`String<class_string>` **get_id** **(** **)** const"
msgstr ""

#: ../../classes/class_thread.rst:56
msgid ""
"Returns the current ``Thread``\\ s id, uniquely identifying it among all "
"threads."
msgstr ""

#: ../../classes/class_thread.rst:60
msgid ":ref:`bool<class_bool>` **is_active** **(** **)** const"
msgstr ""

#: ../../classes/class_thread.rst:62
msgid ""
"Returns true if this ``Thread`` is currently active. An active ``Thread``"
" cannot start work on a new method but can be joined with "
":ref:`wait_to_finish<class_Thread_wait_to_finish>`."
msgstr ""

#: ../../classes/class_thread.rst:66
msgid ""
":ref:`int<class_int>` **start** **(** :ref:`Object<class_object>` "
"instance, :ref:`String<class_string>` method, "
":ref:`Variant<class_variant>` userdata=null, :ref:`int<class_int>` "
"priority=1 **)**"
msgstr ""

#: ../../classes/class_thread.rst:68
msgid ""
"Starts a new ``Thread`` that runs \"method\" on object \"instance\" with "
"\"userdata\" passed as an argument. The \"priority\" of the ``Thread`` "
"can be changed by passing a PRIORITY\\_\\* enum."
msgstr ""

#: ../../classes/class_thread.rst:70
msgid "Returns OK on success, or ERR_CANT_CREATE on failure."
msgstr ""

#: ../../classes/class_thread.rst:74
msgid ":ref:`Variant<class_variant>` **wait_to_finish** **(** **)**"
msgstr ""

#: ../../classes/class_thread.rst:76
msgid ""
"Joins the ``Thread`` and waits for it to finish. Returns what the method "
"called returned."
msgstr ""

