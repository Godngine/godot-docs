# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../classes/class_font.rst:8
msgid "Font"
msgstr ""

#: ../../classes/class_font.rst:10
msgid ""
"**Inherits:** :ref:`Resource<class_resource>` **<** "
":ref:`Reference<class_reference>` **<** :ref:`Object<class_object>`"
msgstr ""

#: ../../classes/class_font.rst:12
msgid ""
"**Inherited By:** :ref:`DynamicFont<class_dynamicfont>`, "
":ref:`BitmapFont<class_bitmapfont>`"
msgstr ""

#: ../../classes/class_font.rst:14
msgid "**Category:** Core"
msgstr ""

#: ../../classes/class_font.rst:17
msgid "Brief Description"
msgstr ""

#: ../../classes/class_font.rst:19
msgid "Internationalized font and text drawing support."
msgstr ""

#: ../../classes/class_font.rst:22
msgid "Member Functions"
msgstr ""

#: ../../classes/class_font.rst:25 ../../classes/class_font.rst:39
msgid "void"
msgstr ""

#: ../../classes/class_font.rst:25
msgid ""
":ref:`draw<class_Font_draw>` **(** :ref:`RID<class_rid>` canvas_item, "
":ref:`Vector2<class_vector2>` position, :ref:`String<class_string>` "
"string, :ref:`Color<class_color>` modulate=Color( 1, 1, 1, 1 ), "
":ref:`int<class_int>` clip_w=-1 **)** const"
msgstr ""

#: ../../classes/class_font.rst:27 ../../classes/class_font.rst:29
#: ../../classes/class_font.rst:31 ../../classes/class_font.rst:33
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../../classes/class_font.rst:27
msgid ""
":ref:`draw_char<class_Font_draw_char>` **(** :ref:`RID<class_rid>` "
"canvas_item, :ref:`Vector2<class_vector2>` position, "
":ref:`int<class_int>` char, :ref:`int<class_int>` next=-1, "
":ref:`Color<class_color>` modulate=Color( 1, 1, 1, 1 ) **)** const"
msgstr ""

#: ../../classes/class_font.rst:29
msgid ":ref:`get_ascent<class_Font_get_ascent>` **(** **)** const"
msgstr ""

#: ../../classes/class_font.rst:31
msgid ":ref:`get_descent<class_Font_get_descent>` **(** **)** const"
msgstr ""

#: ../../classes/class_font.rst:33
msgid ":ref:`get_height<class_Font_get_height>` **(** **)** const"
msgstr ""

#: ../../classes/class_font.rst:35
msgid ":ref:`Vector2<class_vector2>`"
msgstr ""

#: ../../classes/class_font.rst:35
msgid ""
":ref:`get_string_size<class_Font_get_string_size>` **(** "
":ref:`String<class_string>` string **)** const"
msgstr ""

#: ../../classes/class_font.rst:37
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../../classes/class_font.rst:37
msgid ""
":ref:`is_distance_field_hint<class_Font_is_distance_field_hint>` **(** "
"**)** const"
msgstr ""

#: ../../classes/class_font.rst:39
msgid ":ref:`update_changes<class_Font_update_changes>` **(** **)**"
msgstr ""

#: ../../classes/class_font.rst:43
msgid "Description"
msgstr ""

#: ../../classes/class_font.rst:45
msgid ""
"Font contains a unicode compatible character set, as well as the ability "
"to draw it with variable width, ascent, descent and kerning. For creating"
" fonts from TTF files (or other font formats), see the editor support for"
" fonts. TODO check wikipedia for graph of "
"ascent/baseline/descent/height/etc."
msgstr ""

#: ../../classes/class_font.rst:48
msgid "Member Function Description"
msgstr ""

#: ../../classes/class_font.rst:52
msgid ""
"void **draw** **(** :ref:`RID<class_rid>` canvas_item, "
":ref:`Vector2<class_vector2>` position, :ref:`String<class_string>` "
"string, :ref:`Color<class_color>` modulate=Color( 1, 1, 1, 1 ), "
":ref:`int<class_int>` clip_w=-1 **)** const"
msgstr ""

#: ../../classes/class_font.rst:54
msgid ""
"Draw \"string\" into a canvas item using the font at a given position, "
"with \"modulate\" color, and optionally clipping the width. \"position\" "
"specifies the baseline, not the top. To draw from the top, *ascent* must "
"be added to the Y axis."
msgstr ""

#: ../../classes/class_font.rst:58
msgid ""
":ref:`float<class_float>` **draw_char** **(** :ref:`RID<class_rid>` "
"canvas_item, :ref:`Vector2<class_vector2>` position, "
":ref:`int<class_int>` char, :ref:`int<class_int>` next=-1, "
":ref:`Color<class_color>` modulate=Color( 1, 1, 1, 1 ) **)** const"
msgstr ""

#: ../../classes/class_font.rst:60
msgid ""
"Draw character \"char\" into a canvas item using the font at a given "
"position, with \"modulate\" color, and optionally kerning if \"next\" is "
"passed. clipping the width. \"position\" specifies the baseline, not the "
"top. To draw from the top, *ascent* must be added to the Y axis. The "
"width used by the character is returned, making this function useful for "
"drawing strings character by character."
msgstr ""

#: ../../classes/class_font.rst:64
msgid ":ref:`float<class_float>` **get_ascent** **(** **)** const"
msgstr ""

#: ../../classes/class_font.rst:66
msgid "Return the font ascent (number of pixels above the baseline)."
msgstr ""

#: ../../classes/class_font.rst:70
msgid ":ref:`float<class_float>` **get_descent** **(** **)** const"
msgstr ""

#: ../../classes/class_font.rst:72
msgid "Return the font descent (number of pixels below the baseline)."
msgstr ""

#: ../../classes/class_font.rst:76
msgid ":ref:`float<class_float>` **get_height** **(** **)** const"
msgstr ""

#: ../../classes/class_font.rst:78
msgid "Return the total font height (ascent plus descent) in pixels."
msgstr ""

#: ../../classes/class_font.rst:82
msgid ""
":ref:`Vector2<class_vector2>` **get_string_size** **(** "
":ref:`String<class_string>` string **)** const"
msgstr ""

#: ../../classes/class_font.rst:84
msgid "Return the size of a string, taking kerning and advance into account."
msgstr ""

#: ../../classes/class_font.rst:88
msgid ":ref:`bool<class_bool>` **is_distance_field_hint** **(** **)** const"
msgstr ""

#: ../../classes/class_font.rst:92
msgid "void **update_changes** **(** **)**"
msgstr ""

#: ../../classes/class_font.rst:94
msgid ""
"After editing a font (changing size, ascent, char rects, etc.). Call this"
" function to propagate changes to controls that might use it."
msgstr ""

