# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../tutorials/animation/cutout_animation.rst:4
msgid "Cutout animation"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:7
msgid "What is it?"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:9
msgid ""
"Cut-out is a technique of animating in 2D where pieces of paper (or "
"similar material) are cut in special shapes and laid one over the other. "
"The papers are animated and photographed, frame by frame using a stop "
"motion technique (more info `here "
"<http://en.wikipedia.org/wiki/Cutout_animation>`__)."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:15
msgid ""
"With the advent of the digital age, this technique became possible using "
"computers, which resulted in an increased amount of animation TV shows "
"using digital Cut-out. Notable examples are `South Park "
"<http://en.wikipedia.org/wiki/South_Park>`__ or `Jake and the Never Land "
"Pirates <http://en.wikipedia.org/wiki/Jake_and_the_Never_Land_Pirates>`__"
" ."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:23
msgid ""
"In video games, this technique also become very popular. Examples of this"
" are `Paper Mario <http://en.wikipedia.org/wiki/Super_Paper_Mario>`__ or "
"`Rayman Origins <http://en.wikipedia.org/wiki/Rayman_Origins>`__ ."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:29
msgid "Cutout in Godot"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:31
msgid ""
"Godot provides a few tools for working with these kind of assets, but its"
" overall design makes it ideal for the workflow. The reason is that, "
"unlike other tools meant for this, Godot has the following advantages:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:35
msgid ""
"**The animation system is fully integrated with the engine**: This means,"
" animations can control much more than just motion of objects, such as "
"textures, sprite sizes, pivots, opacity, color modulation, etc. "
"Everything can be animated and blended."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:39
msgid ""
"**Mix with Traditional**: AnimatedSprite allows traditional animation to "
"be mixed, very useful for complex objects, such as shape of hands and "
"foot, changing facial expression, etc."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:42
msgid ""
"**Custom Shaped Elements**: Can be created with :ref:`Polygon2D "
"<class_Polygon2D>` allowing the mixing of UV animation, deformations, "
"etc."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:45
msgid ""
"**Particle Systems**: Can also be mixed with the traditional animation "
"hierarchy, useful for magic effects, jetpacks, etc."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:47
msgid ""
"**Custom Colliders**: Set colliders and influence areas in different "
"parts of the skeletons, great for bosses, fighting games, etc."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:49
msgid ""
"**Animation Tree**: Allows complex combinations and blendings of several "
"animations, the same way it works in 3D."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:52
msgid "And much more!"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:55
msgid "Making of GBot!"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:57
msgid ""
"For this tutorial, we will use as demo content the pieces of the `GBot "
"<https://www.youtube.com/watch?v=S13FrWuBMx4&list=UUckpus81gNin1aV8WSffRKw>`__"
" character, created by Andreas Esau."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:63
msgid ""
"Get your assets: :download:`gbot_resources.zip "
"<files/gbot_resources.zip>`."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:66
msgid "Setting up the rig"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:68
msgid "Create an empty Node2D as root of the scene, we will work under it:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:72
msgid ""
"OK, the first node of the model that we will create will be the hip. "
"Generally, both in 2D and 3D, the hip is the root of the skeleton. This "
"makes it easier to animate:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:78
msgid ""
"Next will be the torso. The torso needs to be a child of the hip, so "
"create a child sprite and load the torso, later accommodate it properly:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:83
msgid ""
"This looks good. Let's see if our hierarchy works as a skeleton by "
"rotating the torso. We can do this be pressing ``E`` to enter rotate "
"mode, and dragging with the left mouse button. To exit rotate mode just "
"hit ``ESC``."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:89
msgid ""
"Ouch, that doesn't look good! The rotation pivot is wrong, this means it "
"needs to be adjusted."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:92
msgid ""
"This small little cross in the middle of the :ref:`Sprite <class_Sprite>`"
" is the rotation pivot:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:99
msgid "Adjusting the pivot"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:101
msgid "The pivot can be adjusted by changing the *offset* property in the Sprite:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:106
msgid ""
"However, there is a way to do it more *visually*. While hovering over the"
" desired pivot point, simply press the \"v\" key to move the pivot there "
"for the selected Sprite. Alternately, there is a tool in the tool bar "
"that has a similar function."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:113
msgid ""
"Now it looks good! Let's continue adding body pieces, starting by the "
"right arm. Make sure to put the sprites in hierarchy, so their rotations "
"and translations are relative to the parent:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:119
msgid ""
"This seems easy, so continue with the left arm. The rest should be "
"simple! Or maybe not:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:124
msgid ""
"Right. Remember your tutorials, Luke. In 2D, parent nodes appear below "
"children nodes. Well, this sucks. It seems Godot does not support cutout "
"rigs after all. Come back next year, maybe for 3.0.. no wait. Just "
"Kidding! It works just fine."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:129
msgid ""
"But how can this problem be solved? We want the left arm to appear behind"
" the hip and the torso. For this, we can move the nodes behind the hip "
"(note that you can bypass this by setting the Node2D Z property, but then"
" you won't learn about all this!):"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:136
msgid ""
"But then, we lose the hierarchy layout, which allows to control the "
"skeleton like.. a skeleton. Is there any hope?.. Of Course!"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:140
msgid "RemoteTransform2D node"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:142
msgid ""
"Godot provides a special node, :ref:`RemoteTransform2D "
"<class_RemoteTransform2D>`. This node will transform nodes that are "
"sitting somewhere else in the hierarchy, by applying the transform to the"
" remote nodes."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:146
msgid "This enables to have a visibility order independent from the hierarchy."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:149
msgid ""
"Simply create two more nodes as children from torso, remote_arm_l and "
"remote_hand_l and link them to the actual sprites:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:154
msgid ""
"Moving the remote transform nodes will move the sprites, allowing you to "
"easily animate and pose the character:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:160
msgid "Completing the skeleton"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:162
msgid ""
"Complete the skeleton by following the same steps for the rest of the "
"parts. The resulting scene should look similar to this:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:167
msgid ""
"The resulting rig will be easy to animate. By selecting the nodes and "
"rotating them you can animate forward kinematics (FK) efficiently."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:170
msgid ""
"For simple objects and rigs this is fine, however the following problems "
"are common:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:173
msgid ""
"Selecting sprites can become difficult for complex rigs, and the scene "
"tree ends being used due to the difficulty of clicking over the proper "
"sprite."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:176
msgid "Inverse Kinematics is often desired for extremities."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:178
msgid "To solve these problems, Godot supports a simple method of skeletons."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:181
msgid "Skeletons"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:183
msgid ""
"Godot doesn't actually support *true* Skeketons, but it does feature a "
"helper to create \"bones\" between nodes. This is enough for most cases, "
"but the way it works is not completely obvious."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:189
msgid ""
"As an example, let's turn the right arm into a skeleton. To create "
"skeletons, a chain of nodes must be selected from top to bottom:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:194
msgid "Then, click on the Skeleton menu and select ``Make Bones``."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:198
msgid ""
"This will add bones covering the arm, but the result is not quite what is"
" expected."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:203
msgid ""
"It looks like the bones are shifted up in the hierarchy. The hand "
"connects to the arm, and the arm to the body. So the question is:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:206
msgid "Why does the hand lack a bone?"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:207
msgid "Why does the arm connect to the body?"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:209
msgid ""
"This might seem strange at first, but will make sense later on. In "
"traditional skeleton systems, bones have a position, an orientation and a"
" length. In Godot, bones are mostly helpers so they connect the current "
"node with the parent. Because of this, **toggling a node as a bone will "
"just connect it to the parent**."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:215
msgid ""
"So, with this knowledge. Let's do the same again so we have an actual, "
"useful skeleton."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:218
msgid ""
"The first step is creating an endpoint node. Any kind of node will do, "
"but :ref:`Position2D <class_Position2D>` is preferred because it's "
"visible in the editor. The endpoint node will ensure that the last bone "
"has orientation."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:225
msgid "Now select the whole chain, from the endpoint to the arm and create bones:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:230
msgid ""
"The result resembles a skeleton a lot more, and now the arm and forearm "
"can be selected and animated."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:233
msgid ""
"Finally, create endpoints in all meaningful extremities and connect the "
"whole skeleton with bones up to the hip."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:236
msgid ""
"You may notice when connecting the hip and torso, that an extra bone is "
"created. To fix this, select the root and hip node, open the Skeleton "
"menu, click ``clear bones``."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:242
msgid "After fixing that your final skeleton should look something like this:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:246
msgid ""
"Finally! the whole skeleton is rigged! On close look, it is noticeable "
"that there is a second set of endpoints in the hands. This will make "
"sense soon."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:250
msgid ""
"Now that a whole skeleton is rigged, the next step is setting up the IK "
"chains. IK chains allow for more natural control of extremities."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:254
msgid "IK chains"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:256
msgid ""
"IK chains are a powerful animation tool. Imagine you want to pose a "
"character's foot in a specific position on the ground. Without IK chains,"
" each motion of the foot would require rotating and positioning several "
"other bones. This would be quite complex and lead to imprecise results."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:258
msgid "What if we could move the foot and let the rest of the leg self-adjust?"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:260
msgid "This type of posing is called IK (Inverse Kinematic)."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:262
msgid ""
"To create an IK chain, simply select a chain of bones from endpoint to "
"the base for the chain. For example, to create an IK chain for the right "
"leg, select the following:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:268
msgid "Then enable this chain for IK. Go to Edit > Make IK Chain."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:272
msgid "As a result, the base of the chain will turn *Yellow*."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:276
msgid ""
"Once the IK chain is set-up, simply grab any of the bones in the "
"extremity, any child or grand-child of the base of the chain and try to "
"grab it and move it. Result will be pleasant, satisfaction warranted!"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:283
msgid "Animation"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:285
msgid ""
"The following section will be a collection of tips for creating animation"
" for your rigs. If unsure about how the animation system in Godot works, "
"refresh it by checking again the :ref:`doc_animations`."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:290
msgid "2D animation"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:292
msgid ""
"When doing animation in 2D, a helper will be present in the top menu. "
"This helper only appears when the animation editor window is opened:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:297
msgid ""
"The key button will insert location/rotation/scale keyframes to the "
"selected objects or bones. This depends on the mask enabled. Green items "
"will insert keys while red ones will not, so modify the key insertion "
"mask to your preference."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:303
msgid "Rest pose"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:305
msgid ""
"These kind of rigs do not have a \"rest\" pose, so it's recommended to "
"create a reference rest pose in one of the animations."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:308
msgid "Simply do the following steps:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:310
msgid "Make sure the rig is in \"rest\" (not doing any specific pose)."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:312
msgid "Create a new animation, rename it to \"rest\"."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:314
msgid "Select all nodes (box selection should work fine)."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:316
msgid "Select \"loc\" and \"rot\" on the top menu."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:318
msgid ""
"Push the key button. Keys will be inserted for everything, creating a "
"default pose."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:324
msgid "Rotation"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:326
msgid ""
"Animating these models means only modifying the rotation of the nodes. "
"Location and scale are rarely used, with the only exception of moving the"
" entire rig from the hip (which is the root node)."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:330
msgid ""
"As a result, when inserting keys, only the \"rot\" button needs to be "
"pressed most of the time:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:335
msgid ""
"This will avoid the creation of extra animation tracks for the position "
"that will remain unused."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:339
msgid "Keyframing IK"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:341
msgid ""
"When editing IK chains, is is not necessary to select the whole chain to "
"add keyframes. Selecting the endpoint of the chain and inserting a "
"keyframe will automatically insert keyframes until the chain base too. "
"This makes the task of animating extremities much simpler."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:347
msgid "Moving sprites above and behind others."
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:349
msgid ""
"RemoteTransform2D works in most cases, but sometimes it is really "
"necessary to have a node above and below others during an animation. To "
"aid on this the \"Behind Parent\" property exists on any Node2D:"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:356
msgid "Batch setting transition curves"
msgstr ""

#: ../../tutorials/animation/cutout_animation.rst:358
msgid ""
"When creating really complex animations and inserting lots of keyframes, "
"editing the individual keyframe curves for each can become an endless "
"task. For this, the Animation Editor has a small menu where changing "
"animation curves is easy. First select the appropriate keys. Next click "
"on the pencil icon in the bottom right of the animation panel, this will "
"open the transition editor. Now click on one of the curve options most "
"appropriate for your animation."
msgstr ""

