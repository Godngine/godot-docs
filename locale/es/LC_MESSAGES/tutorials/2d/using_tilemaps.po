# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../tutorials/2d/using_tilemaps.rst:4
msgid "Using tilemaps"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:7
msgid "Introduction"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:9
msgid ""
"Tilemaps are a simple and quick way to make 2D game levels. Basically, "
"you start with bunch of reference tiles (or pieces) that can be put in a "
"grid, as many times each as desired:"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:15
msgid ""
"Collisions can also be added to the tiles, allowing for both 2D side "
"scrolling and top down games."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:19
msgid "Making a tileset"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:21
msgid ""
"To begin, a tileset needs to be made. Here are some tiles for it. They "
"are all in the same image because artists will often prefer this. Having "
"them as separate images also works."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:27
msgid ""
"Create a new project and move the above png image into the directory. "
"Next go into the image settings and turn off ``Filter``, keeping it on "
"will cause issues later."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:31
msgid ""
"We will be creating a :ref:`TileSet <class_TileSet>` resource. While this"
" resource exports properties, it's pretty difficult to get complex data "
"into it and maintain it. Here is what it would look like to manually edit"
" the resource:"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:38
msgid ""
"There's enough properties to get by. With some effort, editing this way "
"can work. But the easiest way to edit and maintain a tileset is exporting"
" it from a specially-crafted scene!"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:43
msgid "TileSet scene"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:45
msgid ""
"Create a new scene with a regular node or node2d as root. For each tile, "
"add a sprite as a child. Since tiles here are 50x50, you should turn on "
"the grid (``G`` key) and enable snap. Moving tiles with the mouse might "
"still be a innacurate so use your arrow keys as well."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:50
msgid ""
"If more than one tile is present in the source image, make sure to use "
"the region property of the sprite to adjust which part of the texture is "
"being used."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:54
msgid ""
"Finally, make sure to name your sprite node correctly. This will ensure "
"that, in subsequent edits to the tileset (for example, if added "
"collision, changed the region, etc), the tile will still be **identified "
"correctly and updated**. This name should be unique."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:59
msgid ""
"Sounds like a lot of requirements, so here's a screenshot that shows "
"where everything of relevance is:"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:64
msgid ""
"Continue adding all the tiles, adjusting the offsets if needed (that is, "
"if you have multiple tiles in a single source image). Again, *remember "
"that their names must be unique*."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:71
msgid "Collision"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:73
msgid ""
"To add collision to a tile, create a StaticBody2D child for each sprite. "
"This is a static collision node. Then create a CollisionShape2D or "
"CollisionPolygon as a child of the StaticBody2D. The CollisionPolygon is "
"recommended because it is easier to edit."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:80
msgid ""
"Finally, edit the polygon, this will give the tile a collision, and fix "
"the warning icon next to the CollisionPolygon node. **Remember to use "
"snap!** Using snap will make sure collision polygons are aligned "
"properly, allowing a character to walk seamlessly from tile to tile. Also"
" **do not scale or move** the collision and/or collision polygon nodes. "
"Leave them at offset 0,0, with scale 1,1 and rotation 0 with respect to "
"the parent sprite."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:89
msgid ""
"Keep adding collisions to the tiles until we are done. Note that BG is "
"just a background, so it should not have a collision."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:94
msgid ""
"OK! We're done! Remember to save this scene for future edit. Name it "
"\"tileset_edit.scn\" or something like that."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:98
msgid "Exporting a TileSet"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:100
msgid ""
"With the scene created and opened in the editor, the next step will be to"
" create a tileset. Use Scene > Convert To > Tile Set from the Scene Menu:"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:105
msgid ""
"Then choose a filename, like \"mytiles.tres\". Make sure the \"Merge With"
" Existing\" option is toggled on. This way, every time the tileset "
"resource file is overwritten, existing tiles are merged and updated (they"
" are referenced by their unique name, so again, **name your tiles "
"properly**)."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:114
msgid "Using the TileSet in a TileMap"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:116
msgid ""
"Create a new scene, using any node or node2d as root, and then create a "
":ref:`TileMap <class_TileMap>` as a child."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:122
msgid ""
"Go to the TileSet property of this node and assign the one created in "
"previous steps:"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:127
msgid ""
"Also set the cell size to '50', since that is the size used by the tiles."
" Quadrant size is a tuning value, which means that the engine will draw "
"and cull the tilemap in blocks of 16x16 tiles. This value is usually fine"
" and does not need to be changed, but can be used to fine tune "
"performance in specific cases (if you know what you are doing)."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:134
msgid "Painting your world"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:136
msgid ""
"With all set, make sure the TileMap node is selected. A red grid will "
"appear on screen, allowing to paint on it with the selected tile on the "
"left palette."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:142
msgid ""
"To avoid accidentally moving and selecting the tilemap node (something "
"common, given it's a huge node), it is recommended that you lock it, "
"using the lock button:"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:148
msgid ""
"If you accidentally place a tile somewhere you don't want it to be, you "
"can delete it with ``RMB`` while in the tilemap editor."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:151
msgid ""
"You can also flip and rotate sprites in the TileMap editor (note: "
"flipping the sprite in the TileSet will have no effect). Icons at the top"
" right of the editor allow flipping and rotating of the currently "
"selected sprite - you can also use the A and S keys to flip the sprite "
"horizontally and vertically. With a brick pattern like this tutorial "
"uses, flipping the sprites would create unpleasant discontinuities unless"
" you're flipping an entire region of bricks. But for some kinds of tiles,"
" flipping can be a convenient and space-saving feature."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:161
msgid "Offset and scaling artifacts"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:163
msgid ""
"When using a single texture for all the tiles, scaling the tileset (or "
"even moving to a non pixel-aligned location) will most likely result in "
"filtering artifacts like so:"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:169
msgid ""
"This is unavoidable, as it is the way the hardware bilinear filter works."
" So, to avoid this situation, there are a few workarounds. Try the one "
"that looks better for you:"
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:174
msgid ""
"Disable filtering for either the tileset texture or the entire image "
"loader (see the :ref:`doc_import_images` asset pipeline tutorial)."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:176
msgid ""
"Enable pixel snap (set: \"Scene > Project Settings > "
"Display/use_2d_pixel_snap\" to true)."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:178
msgid ""
"Viewport Scaling can often help with shrinking the map (see the "
":ref:`doc_viewports` tutorial)."
msgstr ""

#: ../../tutorials/2d/using_tilemaps.rst:180
msgid ""
"Use a single image for each tile. This will remove all artifacts, but can"
" be more cumbersome to implement."
msgstr ""

