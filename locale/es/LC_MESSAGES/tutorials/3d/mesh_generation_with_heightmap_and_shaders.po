# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:4
msgid "Mesh generation with heightmap and shaders"
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:7
msgid "Introduction"
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:9
msgid ""
"This tutorial will help you to use Godot shaders to deform a plane mesh "
"so it appears like a basic terrain. Remember that this solution has pros "
"and cons."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:13
msgid "Pros:"
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:15
msgid "Pretty easy to do."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:16
msgid "This approach allows computation of LOD terrains."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:17
msgid "The heightmap can be used in Godot to create a normal map."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:19
msgid "Cons:"
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:21
msgid ""
"The Vertex Shader can't re-compute normals of the faces. Thus, if your "
"mesh is not static, this method will **not** work with shaded materials."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:24
msgid ""
"This tutorial uses a plane mesh imported from Blender to Godot Engine. "
"Godot is able to create meshes as well."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:27
msgid ""
"See this tutorial as an introduction, not a method that you should employ"
" in your games, except if you intend to do LOD. Otherwise, this is "
"probably not the best way."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:31
msgid ""
"However, let's first create a heightmap,or a 2D representation of the "
"terrain. To do this, I'll use GIMP, but you can use any image editor you "
"like."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:35
msgid "The heightmap"
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:37
msgid ""
"We will use a few functions of GIMP image editor to produce a simple "
"heightmap. Start GIMP and create a square image of 512x512 pixels."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:42
msgid "You are now in front of a new, blank, square image."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:46
msgid "Then, use a filter to render some clouds on this new image."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:50
msgid ""
"Parameter this filter to whatever you want. A white pixel corresponds to "
"the highest point of the heightmap, a black pixel corresponds to the "
"lowest one. So, darker regions are valleys and brighter are mountains. If"
" you want, you can check \"tileable\" to render a heightmap that can be "
"cloned and tiled close together with another one. X and Y size don't "
"matter a lot as long as they are big enough to provide a decent ground. A"
" value of 4.0 or 5.0 for both is nice. Click on the \"New Seed\" button "
"to roll a dice and GIMP will create a new random heightmap. Once you are "
"happy with the result, click \"OK\"."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:62
msgid ""
"You can continue to edit your image if you wish. For our example, let's "
"keep the heightmap as is, and let's export it to a PNG file, say "
"\"heightmap.png\". Save it in your Godot project folder."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:67
msgid "The plane mesh"
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:69
msgid "Now, we will need a plane mesh to import in Godot. Let's run Blender."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:73
msgid "Remove the start cube mesh, then add a new plane to the scene."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:77
msgid ""
"Zoom a bit, then switch to Edit mode (Tab key) and in the Tools "
"buttongroup at the left, hit \"Subdivide\" 5 or 6 times."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:82
msgid ""
"Your mesh is now subdivided, which means we added vertices to the plane "
"mesh that we will later be able to move. Job's not finished yet: in order"
" to texture this mesh a proper UV map is necessary. Currently, the "
"default UV map contains only the 4 corner vertices we had at the "
"beginning. However, we now have more, and we want to be able to texture "
"over the whole mesh correctly."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:89
msgid ""
"If all the vertices of your mesh are not selected, select them all (hit "
"\"A\"). They must appear orange, not black. Then, in the Shading/UVs "
"button group to the left, click the \"Unwrap\" button (or simply hit "
"\"U\") and select \"Smart UV Project\". Keep the default options and hit "
"\"Ok\"."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:97
msgid "Now, we need to switch our view to \"UV/Image editor\"."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:101
msgid ""
"Select all the vertices again (\"A\") then in the UV menu, select "
"\"Export UV Layout\"."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:106
msgid ""
"Export the layout as a PNG file. Name it \"plane.png\" and save it in "
"your Godot project folder. Now, let's export our mesh as an OBJ file. Top"
" of the screen, click \"File/Export/Wavefront (obj)\". Save your object "
"as \"plane.obj\" in your Godot project folder."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:112
msgid "Shader magic"
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:114
msgid "Let's now open Godot Editor."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:116
msgid ""
"Create a new project in the folder you previously created and name it "
"what you want."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:121
msgid "In our default scene (3D), create a root node \"Spatial\"."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:123
msgid ""
"Create a MeshInstance node as a child of the node we just created. Then, "
"load the Mesh selecting \"Load\" and then our \"plane.obj\" file."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:128
msgid "Great! Our plane is now rendered in the 3D view."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:132
msgid ""
"It is time to add some shader stuff. In the Inspector, in the "
"\"Material\" line, add a \"New ShaderMaterial\". Edit it by clicking it "
"and then selecting the \"Edit\" option."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:138
msgid ""
"We need now to create the actual shader. On the Inspector, select the "
"\"Shader\" line and click on \"New Shader\"."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:143
msgid ""
"Edit it by clicking the \"Edit\" option just like we did before. The "
"Shader editor opens."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:148
msgid ""
"Let's start writing our shader. If you don't know how to use shaders in "
"Godot you can check the :ref:`doc_shading_language` page."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:151
msgid ""
"Let's start with the Fragment part. This one is used to texture the plane"
" using an image. For this example, we will texture it with the heightmap "
"image itself, so we'll actually see mountains as brighter regions and "
"canyons as darker regions. Use this code:"
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:168
msgid ""
"First, we set the shader type as ``spatial`` (for 3D). The ``render_mode "
"unshaded`` line makes our MeshInstance be unaffected by the lighting in "
"our world. It doesn't matter since it is a greyscale image. We take a "
"parameter (``uniform``) as a ``sampler2D``, which will be the texture of "
"our heightmap."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:174
msgid ""
"Then, we set the color of every pixel of the image given by "
"``texture(source, UV).rgb`` setting it to the ALBEDO variable. Remember "
"that the ``UV`` variable is a shader variable that returns the 2D "
"position of the pixel in the texture image, according to the vertex we "
"are currently dealing with. That is the use of the UV Layout we made "
"before."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:181
msgid ""
"However, the plane is displayed white! This is because we didn't set the "
"texture file and the color to use."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:186
msgid ""
"In the Inspector, click the back arrow to get back to the ShaderMaterial."
" This is where you want to set the texture and the color. Click the "
"\"Shader Param\" line, in \"Source\", click \"Load\" and select the "
"texture file \"heightmap.png\". Now you will see our heightmap."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:194
msgid "Good. Now, the Vertex part."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:196
msgid ""
"The Vertex Shader is the first shader to be executed by the pipeline. It "
"deals with vertices."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:199
msgid ""
"Insert a new \"uniform\" variable right after the one that we introduced "
"before:"
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:206
msgid ""
"The ``height_range`` parameter is a parameter that we will use to "
"increase the height effect."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:209
msgid ""
"Then, insert the following function before the fragment function we wrote"
" before."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:220
msgid ""
"First, we save the x and z position of the VERTEX, because we do not want"
" them to change: the plane must remain square. Remember that Y axis "
"corresponds to the \"altitude\", which is the only one we want to change "
"with the heightmap."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:225
msgid ""
"Then, we compute an ``h`` variable by multiplying the pixel value at the "
"UV position and the ``height_range``. As the heightmap is a greyscale "
"image, all r, g and b channels contain the same value. We use ``g``, but "
"any of r, g and b have the same effect."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:230
msgid ""
"After that, we set the current vertex' position at (xz.x, h, xz.y) "
"position. Concerning xz.y remember that its type is \"vec2\". Thus, its "
"components are x and y."
msgstr ""

#: ../../tutorials/3d/mesh_generation_with_heightmap_and_shaders.rst:234
msgid ""
"That's all good, but our plane remains flat. This is because the "
"``height_range`` value is 0. Increase this value to observe the mesh "
"distort and take to form of the terrain we set before:"
msgstr ""

