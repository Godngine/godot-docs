# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../getting_started/workflow/export/exporting_for_web.rst:4
msgid "Exporting for the Web"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:6
msgid ""
"HTML5 export allows publishing games made in Godot Engine to the browser."
" This requires support for the recent technologies `WebAssembly "
"<http://webassembly.org/>`__ and `WebGL 2.0 "
"<https://www.khronos.org/webgl/>`__ in the user's browser. **Firefox** "
"and **Chromium** (Chrome, Opera) are the most popular supported browsers,"
" **Safari** and **Edge** do not work yet."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:13
msgid "Limitations"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:15
msgid ""
"For security and privacy reasons, many features that work effortlessly on"
" native platforms are more complicated on the web platform. Following is "
"a list of limitations you should be aware of when porting a Godot game to"
" the web."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:20
msgid "Exported ``.html`` file must not be reused"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:22
msgid ""
"On export, several text placeholders are replaced in the **generated HTML"
" file** specifically for the given export options. It must not be reused "
"in further exports."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:27
msgid "Using cookies for data persistence"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:29
msgid ""
"Users must **allow cookies** (specifically IndexedDB) if persistence of "
"the ``user://`` file system is desired. When playing a game presented in "
"an ``iframe``, **third-party** cookies must also be enabled. "
"Incognito/private browsing mode also prevents persistence."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:34
msgid ""
"The method ``OS.is_userfs_persistent()`` can be used to check if the "
"``user://`` file system is persistent, but can give false positives in "
"some cases."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:39
msgid "Full screen and mouse capture"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:41
msgid ""
"Browsers do not allow arbitrarily **entering full screen** at any time. "
"The same goes for **capturing the cursor**. Instead, these actions have "
"to occur as a response to a JavaScript input event. In Godot, this is "
"most easily done by entering full screen from within an input callback "
"such as ``_input`` or ``_unhandled_input``."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:47
msgid "For the same reason, the full screen project setting is ignored."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:50
msgid "HTTPClient"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:52
msgid ""
"The ``HTTPClient`` implementation for the HTML5 platform has several "
"restrictions:"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:55
msgid "Accessing or changing the ``StreamPeer`` is not possible"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:56
msgid "Blocking mode is not available"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:57
msgid "No chunked responses"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:58
msgid "Host verification cannot be disabled"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:59
msgid ""
"Subject to `same-origin policy <https://developer.mozilla.org/en-"
"US/docs/Web/Security/Same-origin_policy>`_"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:62
msgid "Unimplemented functionality"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:64
msgid ""
"The following functionality is currently unavailable on the HTML5 "
"platform:"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:66
msgid "Threads"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:67
msgid "GDNative"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:68
msgid "Clipboard synchronisation between engine and operating system"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:69
msgid "Networking other than ``HTTPClient``"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:71
msgid ""
"Check the `list of open HTML5 issues on Github "
"<https://github.com/godotengine/godot/issues?q=is:open+is:issue+label:platform:html5>`_"
" to see if functionality you're interested in has an issue yet. If not, "
"open one to communicate your interest."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:76
msgid "Starting exported games from the local file system"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:78
msgid ""
"Many browsers will not load exported projects when **opened locally** per"
" ``file://`` protocol. To get around this, use a local server."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:81
msgid ""
"Python offers an easy method for this, using ``python -m "
"SimpleHTTPServer`` with Python 2 or ``python -m http.server`` with Python"
" 3 will serve the current working directory on ``http://localhost:8000``."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:86
msgid "Serving the files"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:88
msgid ""
"Exporting for the web generates several files to be served from a web "
"server, including a default HTML page for presentation. A custom HTML "
"file can be used, see :ref:`doc_customizing_html5_shell`."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:92
msgid ""
"The generated ``.html`` file can be used as ``DirectoryIndex`` in Apache "
"servers and can be renamed to e.g. ``index.html`` at any time, its name "
"is never depended on by default."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:96
msgid ""
"The HTML page is designed to fit the game perfectly without cutting off "
"parts of the canvas when the browser window is scaled to the game's "
"dimensions. This way it can be inserted into an ``<iframe>`` with the "
"game's size, as is common on most web game hosting sites."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:101
msgid ""
"The other exported files are served as they are, next to the ``.html`` "
"file, names unchanged. The ``.wasm`` file is a binary WebAssembly module "
"implementing the engine. The ``.pck`` file is the Godot main pack "
"containing your game. The ``.js`` file contains start-up code and is used"
" by the ``.html`` file to access the engine. The ``.png`` file contains "
"the boot splash image. It is not used in the default HTML page, but is "
"included for :ref:`custom HTML pages <doc_customizing_html5_shell>`."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:109
msgid ""
"The ``.pck`` file is binary, usually delivered with the MIME-type "
"``application/octet-stream``. The ``.wasm`` file is delivered as "
"``application/wasm``."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:113
msgid ""
"Delivering the files with server-side compression is recommended "
"especially for the ``.pck`` and ``.wasm`` files, which are usually large "
"in size. The WebAssembly module compresses particularly well, down to "
"around a quarter of its original size with gzip compression."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:119
msgid "Export options"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:121
msgid ""
"If a runnable web export template is available, a button appears between "
"the *Stop scene* and *Play edited Scene* buttons in the editor to quickly"
" open the game in the default browser for testing."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:125
msgid ""
"If a path to a **Custom HTML shell** file is given, it will be used "
"instead of the default HTML page. See :ref:`doc_customizing_html5_shell`."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:128
msgid ""
"**Head Include** is appended into the ``<head>`` element of the generated"
" HTML page. This allows to, for example, load webfonts and third-party "
"JavaScript APIs, include CSS, or run JavaScript code."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:132
msgid ""
"Turning on **Export with Debug** when exporting will, in addition to "
"enabling various debug features of the engine, display a debug output "
"below the canvas when using the default HTML page, displaying JavaScript "
"and engine errors. You can also use the browser-integrated developer "
"console, usually opened with the F12 key, which often shows more "
"information, including WebGL errors."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:139
msgid "Calling JavaScript from script"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:141
msgid ""
"In web builds, the ``JavaScript`` singleton is implemented. If offers a "
"single method called ``eval`` that works similarly to the JavaScript "
"function of the same name. It takes a string as an argument and executes "
"it as JavaScript code. This allows interacting with the browser in ways "
"not possible with script languages integrated into Godot."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:152
msgid ""
"The value of the last JavaScript statement is converted to a GDScript "
"value and returned by ``eval()`` under certain circumstances:"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:155
msgid "JavaScript ``number`` is returned as GDScript :ref:`class_float`"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:156
msgid "JavaScript ``boolean`` is returned as GDScript :ref:`class_bool`"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:157
msgid "JavaScript ``string`` is returned as GDScript :ref:`class_String`"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:158
msgid ""
"JavaScript ``ArrayBuffer``, ``TypedArray`` and ``DataView`` are returned "
"as GDScript :ref:`class_PoolByteArray`"
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:167
msgid "Any other JavaScript value is returned as ``null``."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:169
msgid ""
"Calling ``JavaScript.eval`` on platforms other than HTML5 will also "
"return ``null``."
msgstr ""

#: ../../getting_started/workflow/export/exporting_for_web.rst:172
msgid ""
"The ``eval`` method also accepts a second, optional Boolean argument, "
"which specifies whether to execute the code in the global execution "
"context, defaulting to ``false`` to prevent polluting the global "
"namespace::"
msgstr ""

