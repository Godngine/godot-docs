# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, Juan Linietsky, Ariel Manzur and the Godot
# community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-02-28 16:44-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:4
msgid "Introduction"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:6
msgid ""
"C# support is a new feature in Godot 3.0. As such, you may still run into"
" some issues, or find spots where the documentation could be improved. "
"Please report issues with C# in Godot on the `engine Github page "
"<https://github.com/godotengine/godot/issues>`_. And any documentation "
"issues on the `documentation Github Page <https://github.com/godotengine"
"/godot-docs/issues>`_."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:11
msgid ""
"This page provides a brief intro to C#, both what it is and how to use it"
" in Godot. Afterwards, you may want to look at :ref:`how to use specific "
"features <doc_c_sharp_features>`, read about the :ref:`differences "
"between the C# and the GDScript API <doc_c_sharp_differences>` and "
"(re)visit the :ref:`Scripting section <doc_scripting>` of the step-by-"
"step tutorial."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:16
msgid ""
"C# is a high-level programming language developed by Microsoft. In Godot "
"it is implemented with the Mono 5.2 .NET framework including full support"
" for C# 7.0. Mono is an open source implementation of Microsoft's .NET "
"Framework based on the ECMA standards for C# and the Common Language "
"Runtime. A good starting point for checking its capabilities is the "
"`Compatibility <http://www.mono-project.com/docs/about-"
"mono/compatibility/>`_ page in the Mono documentation."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:20
msgid ""
"This is **not** a full-scale tutorial on the C# language as a whole. If "
"you aren't already familiar with its syntax or features, see the "
"`Microsoft C# guide <https://docs.microsoft.com/en-"
"us/dotnet/csharp/index>`_ or look for a suitable introduction elsewhere."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:25
msgid "Setup C# for Godot"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:27
msgid ""
"To use C# in Godot you must have `Mono <http://www.mono-"
"project.com/download/>`_ installed (at least version 5.2), as well as "
"MSBuild (at least version 15.0) which should come with the Mono "
"installation."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:30
msgid ""
"Additionally, your Godot version must have Mono support enabled, so take "
"care to download the **Mono version** of Godot. If you are building Godot"
" from source, make sure to follow the steps to include Mono support in "
"your build outlined on the  :ref:`doc_compiling_with_mono` page."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:34
msgid "Configuring an external editor"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:36
msgid ""
"While Godot does have its own scripting editor, its support for C# is "
"kept minimal, and it's recommended that you use an external IDE or "
"editor, such as Microsoft Visual Studio Code, or MonoDevelop, which "
"provide auto-completion, debugging and other features useful when working"
" with C#. To set it up, in Godot click on ``Editor``, then ``Editor "
"Settings``. Scroll down to the bottom, to the ``Mono`` settings. Under "
"Mono click on ``Editor``, and on that page choose your external editor of"
" choice."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:45
msgid "Creating a C# script"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:47
msgid ""
"After you successfully setup C# for Godot, you should see the following "
"option when selecting ``Attach script`` in the context menu of a node in "
"your scene:"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:51
msgid ""
"Note that while some specifics change, most of the things work the same "
"when using C# for scripting. If you're new to Godot, you may want to "
"peruse the tutorials on :ref:`doc_scripting` at this point. While some "
"places in the documentation still lack C# examples, most things can be "
"transferred easily from GDScript."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:56
msgid "Project setup and workflow"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:58
msgid ""
"When you create the first C# script, Godot initializes the C# project "
"files for your Godot project. This includes generating a C# solution "
"(``.sln``) and project (``.csproj``) as well as some utility files and "
"folders (``.mono``, sometimes ``Properties``). All of these but ``.mono``"
" are important and should be kept in your version control system. "
"``.mono`` can be safely added to the ignore list of your VCS. When "
"troubleshooting, it sometimes can help to delete the ``.mono`` folder and"
" let it regenerate."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:63
msgid ""
"Note that currently there are some issues where the Godot and the C# "
"project don't stay in sync; if you delete, rename or move things like "
"scripts or nodes, they may no longer match up. In this case, it can help "
"to edit the solution files manually."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:66
msgid ""
"Example: If you created a script (e.g. ``Test.cs``) and delete it in "
"Godot, compilation will fail because the now missing file is still "
"expected to be there by the CS project. You can for now simply open up "
"the ``.csproj`` and look for the ``ItemGroup``, there should be a line "
"included like the following:"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:77
msgid ""
"Simply remove that line and your project should now again build fine. "
"Same for renaming and moving things, simply rename and move them in the "
"project file if needed."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:80
msgid "Example"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:82
msgid "Here's a blank C# script with some comments to demonstrate how it works."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:109
msgid ""
"As you can see, the things normally in global scope in GDScript like "
"Godot's ``print`` function are available in the ``GD`` namespace. For a "
"list of those, see the class reference pages for :ref:`@GDScript "
"<class_@gdscript>` and :ref:`@GlobalScope <class_@globalscope>`."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:113
msgid "General differences between C# and GDScript"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:115
msgid ""
"The C# API uses ``PascalCase`` instead of ``snake_case`` in GDScript/C++."
" Where possible, fields and getters/setters have been converted to "
"properties. In general, the C# Godot API strives to be as idiomatic as is"
" reasonably possible."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:119
msgid "For more, see the :ref:`doc_c_sharp_differences` page."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:122
msgid "Current gotchas and known issues"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:124
msgid ""
"As C# support is quite new to Godot, there are some growing pains and "
"things that still need to be ironed out. Below is a list of the most "
"important issues you should be aware of when diving into C# in Godot, but"
" if in doubt also take a look over the official `issue tracker for Mono "
"issues <https://github.com/godotengine/godot/labels/topic%3Amono>`_."
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:127
msgid ""
"As explained above, the C# project isn't always kept in sync "
"automatically when things are deleted, renamed or moved in Godot (`#12917"
" <https://github.com/godotengine/godot/issues/12917>`_)"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:128
msgid ""
"Signals can only be added with ``add_user_signal()`` and don't show up in"
" UI (`#11956 <https://github.com/godotengine/godot/issues/11956>`_)"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:129
msgid ""
"Debug output like stack traces, file path and line numbers is missing on "
"Windows (`#14589 <https://github.com/godotengine/godot/issues/14589>`_)"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:130
msgid "Writing editor plugins and tool scripts in C# is not yet supported"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:131
msgid "Exporting a project may not yet work"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:134
msgid "Performance of C# in Godot"
msgstr ""

#: ../../getting_started/scripting/c_sharp/c_sharp_basics.rst:136
msgid ""
"According to some preliminary `benchmarks "
"<https://github.com/cart/godot3-bunnymark>`_, performance of C# in Godot "
"- while generally in the same order of magnitude - is roughly **~4x** "
"that of GDScript in some naive cases. For full performance, C++ is still "
"a little faster; the specifics are going to vary according to your use "
"case. GDScript is likely fast enough for most general scripting "
"workloads. C# is faster, but requires some expensive marshalling when "
"talking to Godot."
msgstr ""

