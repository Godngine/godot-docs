.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the WebRTCPeerConnection.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_WebRTCPeerConnection:

WebRTCPeerConnection
====================

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`WebRTCPeerConnectionGDNative<class_WebRTCPeerConnectionGDNative>`

**Category:** Core

Brief Description
-----------------



Methods
-------

+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`                             | :ref:`add_ice_candidate<class_WebRTCPeerConnection_method_add_ice_candidate>` **(** :ref:`String<class_String>` media, :ref:`int<class_int>` index, :ref:`String<class_String>` name **)** |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`close<class_WebRTCPeerConnection_method_close>` **(** **)**                                                                                                                          |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`WebRTCDataChannel<class_WebRTCDataChannel>`                 | :ref:`create_data_channel<class_WebRTCPeerConnection_method_create_data_channel>` **(** :ref:`String<class_String>` label, :ref:`Dictionary<class_Dictionary>` options={  } **)**          |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`                             | :ref:`create_offer<class_WebRTCPeerConnection_method_create_offer>` **(** **)**                                                                                                            |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`ConnectionState<enum_WebRTCPeerConnection_ConnectionState>` | :ref:`get_connection_state<class_WebRTCPeerConnection_method_get_connection_state>` **(** **)** const                                                                                      |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`                             | :ref:`initialize<class_WebRTCPeerConnection_method_initialize>` **(** :ref:`Dictionary<class_Dictionary>` configuration={  } **)**                                                         |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`                             | :ref:`poll<class_WebRTCPeerConnection_method_poll>` **(** **)**                                                                                                                            |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`                             | :ref:`set_local_description<class_WebRTCPeerConnection_method_set_local_description>` **(** :ref:`String<class_String>` type, :ref:`String<class_String>` sdp **)**                        |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`                             | :ref:`set_remote_description<class_WebRTCPeerConnection_method_set_remote_description>` **(** :ref:`String<class_String>` type, :ref:`String<class_String>` sdp **)**                      |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Signals
-------

.. _class_WebRTCPeerConnection_signal_data_channel_received:

- **data_channel_received** **(** :ref:`Object<class_Object>` channel **)**

.. _class_WebRTCPeerConnection_signal_ice_candidate_created:

- **ice_candidate_created** **(** :ref:`String<class_String>` media, :ref:`int<class_int>` index, :ref:`String<class_String>` name **)**

.. _class_WebRTCPeerConnection_signal_session_description_created:

- **session_description_created** **(** :ref:`String<class_String>` type, :ref:`String<class_String>` sdp **)**

Enumerations
------------

.. _enum_WebRTCPeerConnection_ConnectionState:

.. _class_WebRTCPeerConnection_constant_STATE_NEW:

.. _class_WebRTCPeerConnection_constant_STATE_CONNECTING:

.. _class_WebRTCPeerConnection_constant_STATE_CONNECTED:

.. _class_WebRTCPeerConnection_constant_STATE_DISCONNECTED:

.. _class_WebRTCPeerConnection_constant_STATE_FAILED:

.. _class_WebRTCPeerConnection_constant_STATE_CLOSED:

enum **ConnectionState**:

- **STATE_NEW** = **0**

- **STATE_CONNECTING** = **1**

- **STATE_CONNECTED** = **2**

- **STATE_DISCONNECTED** = **3**

- **STATE_FAILED** = **4**

- **STATE_CLOSED** = **5**

Method Descriptions
-------------------

.. _class_WebRTCPeerConnection_method_add_ice_candidate:

- :ref:`Error<enum_@GlobalScope_Error>` **add_ice_candidate** **(** :ref:`String<class_String>` media, :ref:`int<class_int>` index, :ref:`String<class_String>` name **)**

.. _class_WebRTCPeerConnection_method_close:

- void **close** **(** **)**

.. _class_WebRTCPeerConnection_method_create_data_channel:

- :ref:`WebRTCDataChannel<class_WebRTCDataChannel>` **create_data_channel** **(** :ref:`String<class_String>` label, :ref:`Dictionary<class_Dictionary>` options={  } **)**

.. _class_WebRTCPeerConnection_method_create_offer:

- :ref:`Error<enum_@GlobalScope_Error>` **create_offer** **(** **)**

.. _class_WebRTCPeerConnection_method_get_connection_state:

- :ref:`ConnectionState<enum_WebRTCPeerConnection_ConnectionState>` **get_connection_state** **(** **)** const

.. _class_WebRTCPeerConnection_method_initialize:

- :ref:`Error<enum_@GlobalScope_Error>` **initialize** **(** :ref:`Dictionary<class_Dictionary>` configuration={  } **)**

.. _class_WebRTCPeerConnection_method_poll:

- :ref:`Error<enum_@GlobalScope_Error>` **poll** **(** **)**

.. _class_WebRTCPeerConnection_method_set_local_description:

- :ref:`Error<enum_@GlobalScope_Error>` **set_local_description** **(** :ref:`String<class_String>` type, :ref:`String<class_String>` sdp **)**

.. _class_WebRTCPeerConnection_method_set_remote_description:

- :ref:`Error<enum_@GlobalScope_Error>` **set_remote_description** **(** :ref:`String<class_String>` type, :ref:`String<class_String>` sdp **)**

