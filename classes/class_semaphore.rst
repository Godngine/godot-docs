.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Semaphore.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Semaphore:

Semaphore
=========

**Inherits:** :ref:`Reference<class_reference>` **<** :ref:`Object<class_object>`

**Category:** Core

Brief Description
-----------------

A synchronization Semaphore.

Member Functions
----------------

+----------------------------------------+-----------------------------------------------+
| :ref:`Error<enum_@globalscope_error>`  | :ref:`post<class_Semaphore_post>` **(** **)** |
+----------------------------------------+-----------------------------------------------+
| :ref:`Error<enum_@globalscope_error>`  | :ref:`wait<class_Semaphore_wait>` **(** **)** |
+----------------------------------------+-----------------------------------------------+

Description
-----------

A synchronization Semaphore. Element used to synchronize multiple :ref:`Thread<class_thread>`\ s. Initialized to zero on creation. Be careful to avoid deadlocks. For a binary version, see :ref:`Mutex<class_mutex>`.

Member Function Description
---------------------------

.. _class_Semaphore_post:

- :ref:`Error<enum_@globalscope_error>` **post** **(** **)**

Lowers the ``Semaphore``, allowing one more thread in. Returns OK on success, ERR_BUSY otherwise.

.. _class_Semaphore_wait:

- :ref:`Error<enum_@globalscope_error>` **wait** **(** **)**

Tries to wait for the ``Semaphore``, if its value is zero, blocks until non-zero. Returns OK on success, ERR_BUSY otherwise.


