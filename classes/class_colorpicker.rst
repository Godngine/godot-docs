.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the doc/base/classes.xml source instead.

.. _class_ColorPicker:

ColorPicker
===========

**Inherits:** :ref:`BoxContainer<class_boxcontainer>` **<** :ref:`Container<class_container>` **<** :ref:`Control<class_control>` **<** :ref:`CanvasItem<class_canvasitem>` **<** :ref:`Node<class_node>` **<** :ref:`Object<class_object>`

**Category:** Core

Brief Description
-----------------

Color picker control.

Member Functions
----------------

+----------------------------+----------------------------------------------------------------------------------------------------+
| void                       | :ref:`add_preset<class_ColorPicker_add_preset>`  **(** :ref:`Color<class_color>` arg0  **)**       |
+----------------------------+----------------------------------------------------------------------------------------------------+
| :ref:`Color<class_color>`  | :ref:`get_color<class_ColorPicker_get_color>`  **(** **)** const                                   |
+----------------------------+----------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`    | :ref:`is_editing_alpha<class_ColorPicker_is_editing_alpha>`  **(** **)** const                     |
+----------------------------+----------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`    | :ref:`is_raw_mode<class_ColorPicker_is_raw_mode>`  **(** **)** const                               |
+----------------------------+----------------------------------------------------------------------------------------------------+
| void                       | :ref:`set_color<class_ColorPicker_set_color>`  **(** :ref:`Color<class_color>` color  **)**        |
+----------------------------+----------------------------------------------------------------------------------------------------+
| void                       | :ref:`set_edit_alpha<class_ColorPicker_set_edit_alpha>`  **(** :ref:`bool<class_bool>` show  **)** |
+----------------------------+----------------------------------------------------------------------------------------------------+
| void                       | :ref:`set_raw_mode<class_ColorPicker_set_raw_mode>`  **(** :ref:`bool<class_bool>` mode  **)**     |
+----------------------------+----------------------------------------------------------------------------------------------------+

Signals
-------

-  **color_changed**  **(** :ref:`Color<class_color>` color  **)**

Description
-----------

This is a simple color picker :ref:`Control<class_control>`. It's useful for selecting a color from an RGB/RGBA colorspace.

Member Function Description
---------------------------

.. _class_ColorPicker_add_preset:

- void  **add_preset**  **(** :ref:`Color<class_color>` arg0  **)**

Adds the current selected to color to a list of colors (presets), the presets will be displayed in the color picker and the user will be able to select them, notice that the presets list is only for this color picker.

.. _class_ColorPicker_get_color:

- :ref:`Color<class_color>`  **get_color**  **(** **)** const

Return the current (edited) color.

.. _class_ColorPicker_is_editing_alpha:

- :ref:`bool<class_bool>`  **is_editing_alpha**  **(** **)** const

Returns whether the color has transparency or not.

.. _class_ColorPicker_is_raw_mode:

- :ref:`bool<class_bool>`  **is_raw_mode**  **(** **)** const

Returns whether this color picker is in raw mode or not

.. _class_ColorPicker_set_color:

- void  **set_color**  **(** :ref:`Color<class_color>` color  **)**

Select the current color.

.. _class_ColorPicker_set_edit_alpha:

- void  **set_edit_alpha**  **(** :ref:`bool<class_bool>` show  **)**

Set true if you want the color to have an alpha channel (transparency), or false if you want a solid color.

.. _class_ColorPicker_set_raw_mode:

- void  **set_raw_mode**  **(** :ref:`bool<class_bool>` mode  **)**

When set to true, every color channel will be represented as a value from 0 to 1, insetead of 0, 255.


