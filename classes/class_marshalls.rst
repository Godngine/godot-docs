.. Generated automatically by doc/tools/makerst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Marshalls.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Marshalls:

Marshalls
=========

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Category:** Core

Brief Description
-----------------

Data transformation (marshalling) and encoding helpers.

Methods
-------

+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolByteArray<class_PoolByteArray>` | :ref:`base64_to_raw<class_Marshalls_method_base64_to_raw>` **(** :ref:`String<class_String>` base64_str **)**                                                      |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`               | :ref:`base64_to_utf8<class_Marshalls_method_base64_to_utf8>` **(** :ref:`String<class_String>` base64_str **)**                                                    |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`             | :ref:`base64_to_variant<class_Marshalls_method_base64_to_variant>` **(** :ref:`String<class_String>` base64_str, :ref:`bool<class_bool>` allow_objects=false **)** |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`               | :ref:`raw_to_base64<class_Marshalls_method_raw_to_base64>` **(** :ref:`PoolByteArray<class_PoolByteArray>` array **)**                                             |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`               | :ref:`utf8_to_base64<class_Marshalls_method_utf8_to_base64>` **(** :ref:`String<class_String>` utf8_str **)**                                                      |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`               | :ref:`variant_to_base64<class_Marshalls_method_variant_to_base64>` **(** :ref:`Variant<class_Variant>` variant, :ref:`bool<class_bool>` full_objects=false **)**   |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Description
-----------

Provides data transformation and encoding utility functions.

Method Descriptions
-------------------

.. _class_Marshalls_method_base64_to_raw:

- :ref:`PoolByteArray<class_PoolByteArray>` **base64_to_raw** **(** :ref:`String<class_String>` base64_str **)**

Returns :ref:`PoolByteArray<class_PoolByteArray>` of a given base64 encoded String.

.. _class_Marshalls_method_base64_to_utf8:

- :ref:`String<class_String>` **base64_to_utf8** **(** :ref:`String<class_String>` base64_str **)**

Returns utf8 String of a given base64 encoded String.

.. _class_Marshalls_method_base64_to_variant:

- :ref:`Variant<class_Variant>` **base64_to_variant** **(** :ref:`String<class_String>` base64_str, :ref:`bool<class_bool>` allow_objects=false **)**

Returns :ref:`Variant<class_Variant>` of a given base64 encoded String. When ``allow_objects`` is ``true`` decoding objects is allowed.

**WARNING:** Deserialized object can contain code which gets executed. Do not use this option if the serialized object comes from untrusted sources to avoid potential security threats (remote code execution).

.. _class_Marshalls_method_raw_to_base64:

- :ref:`String<class_String>` **raw_to_base64** **(** :ref:`PoolByteArray<class_PoolByteArray>` array **)**

Returns base64 encoded String of a given :ref:`PoolByteArray<class_PoolByteArray>`.

.. _class_Marshalls_method_utf8_to_base64:

- :ref:`String<class_String>` **utf8_to_base64** **(** :ref:`String<class_String>` utf8_str **)**

Returns base64 encoded String of a given utf8 String.

.. _class_Marshalls_method_variant_to_base64:

- :ref:`String<class_String>` **variant_to_base64** **(** :ref:`Variant<class_Variant>` variant, :ref:`bool<class_bool>` full_objects=false **)**

Returns base64 encoded String of a given :ref:`Variant<class_Variant>`. When ``full_objects`` is ``true`` encoding objects is allowed (and can potentially include code).

